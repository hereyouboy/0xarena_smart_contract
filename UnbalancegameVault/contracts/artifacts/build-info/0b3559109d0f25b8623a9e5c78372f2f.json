{
	"id": "0b3559109d0f25b8623a9e5c78372f2f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GameVault.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\ncontract GameVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    IERC20Upgradeable tether;\n    event ChallengeReward(uint256);\n    event ClaimReward(address ,uint256);\n    mapping(address => uint256) playersBalance;\n    struct PlayerInfo {\n        address player;\n        uint256 balance;\n    }\n    function initialize (\n        address _tether,\n        address _owner\n    ) public initializer {\n        tether = IERC20Upgradeable(_tether);\n        _setupRole(DEFAULT_ADMIN_ROLE, _owner);\n    }\n    function playersReward(PlayerInfo[] calldata _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE){\n        for(uint256 i=0; i< _playerSet.length; i++) {\n            playersBalance[_playerSet[i].player] +=  _playerSet[i].balance;\n        }\n    }\n    function claimReward() external {\n        require(playersBalance[msg.sender] > 0 , \"You don't have any reward\");\n        require(playersBalance[msg.sender] <= tether.balanceOf(address(this)), \"You can't withdraw at this moment\");\n        uint256 amount = playersBalance[msg.sender];\n        playersBalance[msg.sender] = 0;\n        tether.transfer(msg.sender, amount);\n        emit ClaimReward(msg.sender, amount);\n    }\n    function claimRewardAdmin(address _player) private {\n        require(playersBalance[_player] > 0 , \"You don't have any reward\");\n        require(playersBalance[_player] <= tether.balanceOf(address(this)), \"You can't withdraw at this moment\");\n        uint256 amount = playersBalance[_player];\n        playersBalance[_player] = 0;\n        tether.transfer(_player, amount);\n        emit ClaimReward(_player, amount);\n    }\n    function claimRewardAdminList(address[] memory _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        for(uint256 i = 0 ; i< _playerSet.length; i++){\n           claimRewardAdmin(_playerSet[i]);\n        }\n    }\n    function playerBalance() external view returns(uint)  {\n        return playersBalance[msg.sender];\n    }\n    function playerBalanceAdmin(address _player) external view onlyRole(DEFAULT_ADMIN_ROLE) returns(uint){\n        return playersBalance[_player];\n    }\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal virtual override onlyRole(DEFAULT_ADMIN_ROLE) {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1939,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2322,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 39,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)34_storage"
							},
							"t_struct(RoleData)34_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 31,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 33,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"IAccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 762,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 762,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1077,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"IERC20PermitUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ed700c952898beb01f003a3cd4e668dc7ca797a119235b141cfd5fd8fb40907d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ed700c952898beb01f003a3cd4e668dc7ca797a119235b141cfd5fd8fb40907d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED PUSH17 0xC952898BEB01F003A3CD4E668DC7CA797 LOG1 NOT 0x23 JUMPDEST EQ SHR REVERT PUSH0 0xD8 0xFB BLOCKHASH SWAP1 PUSH30 0x64736F6C634300081A003300000000000000000000000000000000000000 ",
							"sourceMap": "734:6366:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ed700c952898beb01f003a3cd4e668dc7ca797a119235b141cfd5fd8fb40907d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED PUSH17 0xC952898BEB01F003A3CD4E668DC7CA797 LOG1 NOT 0x23 JUMPDEST EQ SHR REVERT PUSH0 0xD8 0xFB BLOCKHASH SWAP1 PUSH30 0x64736F6C634300081A003300000000000000000000000000000000000000 ",
							"sourceMap": "734:6366:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20Upgradeable,bytes memory)": "infinite",
								"forceApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safePermit(contract IERC20PermitUpgradeable,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed700c952898beb01f003a3cd4e668dc7ca797a119235b141cfd5fd8fb40907d64736f6c634300081a0033",
									".code": [
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/GameVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/GameVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1939,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH22 0x873C7E83D8846A1DFDB96D0E97B5554D6B9F9ED70651 DUP15 ADDRESS KECCAK256 LOG1 0xC3 MOD LOG0 0xCB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1420:2696:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH22 0x873C7E83D8846A1DFDB96D0E97B5554D6B9F9ED70651 DUP15 ADDRESS KECCAK256 LOG1 0xC3 MOD LOG0 0xCB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1420:2696:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033",
									".code": [
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/GameVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH22 0x250184BB4FC075ACC089971FAE471990B53AF4207270 0xA7 PUSH32 0xC6D50129E21D64736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "242:2603:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH22 0x250184BB4FC075ACC089971FAE471990B53AF4207270 0xA7 PUSH32 0xC6D50129E21D64736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "242:2603:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033",
									".code": [
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/GameVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2322,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 TIMESTAMP SWAP3 0xD DUP8 ADDRESS 0xB7 PUSH21 0x3AA0238D3F516E39157A903AC3819D1CF843797900 SWAP11 TLOAD DUP15 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12593:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 TIMESTAMP SWAP3 0xD DUP8 ADDRESS 0xB7 PUSH21 0x3AA0238D3F516E39157A903AC3819D1CF843797900 SWAP11 TLOAD DUP15 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12593:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033",
									".code": [
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/GameVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"SignedMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP10 PUSH18 0xEF41998B70918147B919B90CA9342DF0ABB1 PUSH28 0x49E9414210AB1FFA4C2964736F6C634300081A003300000000000000 ",
							"sourceMap": "215:1058:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP10 PUSH18 0xEF41998B70918147B919B90CA9342DF0ABB1 PUSH28 0x49E9414210AB1FFA4C2964736F6C634300081A003300000000000000 ",
							"sourceMap": "215:1058:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033",
									".code": [
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/GameVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GameVault.sol": {
				"GameVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ChallengeReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ClaimReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_playerSet",
									"type": "address[]"
								}
							],
							"name": "claimRewardAdminList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tether",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "playerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								}
							],
							"name": "playerBalanceAdmin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "player",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										}
									],
									"internalType": "struct GameVault.PlayerInfo[]",
									"name": "_playerSet",
									"type": "tuple[]"
								}
							],
							"name": "playersReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GameVault.sol\":381:2657  contract GameVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1332:1336  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1289:1337  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/GameVault.sol\":381:2657  contract GameVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/GameVault.sol\":381:2657  contract GameVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x542e37cc\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88a802f\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xbb6ceb4f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf396d899\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x542e37cc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x651f066a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x3659cfe6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4834:4963  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/GameVault.sol\":754:949  function initialize (... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameVault.sol\":2049:2263  function claimRewardAdminList(address[] memory _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/GameVault.sol\":2268:2372  function playerBalance() external view returns(uint)  {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2450:2499  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameVault.sol\":1200:1619  function claimReward() external {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/GameVault.sol\":2377:2525  function playerBalanceAdmin(address _player) external view onlyRole(DEFAULT_ADMIN_ROLE) returns(uint){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5684:5831  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/GameVault.sol\":954:1195  function playersReward(PlayerInfo[] calldata _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE){... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3114:3118  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3152:3195  type(IAccessControlUpgradeable).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3195  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3148  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3195  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3235  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3199:3235  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3223:3234  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3199:3222  super.supportsInterface */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3199:3235  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3235  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3130:3235  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4834:4963  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4908:4915  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4940  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4941:4945  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4956  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4927:4956  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4834:4963  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5342:5360  getRoleAdmin(role) */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5355:5359  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5342:5354  getRoleAdmin */\n      tag_32\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5342:5360  getRoleAdmin(role) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5397  _grantRole(role, account) */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5383:5387  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5389:5396  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5382  _grantRole */\n      tag_109\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5397  _grantRole(role, account) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6474:6486  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6474:6484  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6474:6486  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6486  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6470  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6486  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6575  _revokeRole(role, account) */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6574  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6575  _revokeRole(role, account) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3504  _authorizeUpgrade(newImplementation) */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3486:3503  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3485  _authorizeUpgrade */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3504  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3514:3575  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3536:3553  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3565:3566  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3555:3567  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n    tag_131:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_134:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3569:3574  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3514:3535  _upgradeToAndCallUUPS */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3514:3575  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"contracts/GameVault.sol\":754:949  function initialize (... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3315  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3361  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_138\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3417  AddressUpgradeable.isContract */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3432  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3452:3453  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3566:3580  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3612:3616  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_145:\n        /* \"contracts/GameVault.sol\":886:893  _tether */\n      dup3\n        /* \"contracts/GameVault.sol\":859:865  tether */\n      0xfb\n      0x00\n        /* \"contracts/GameVault.sol\":859:894  tether = IERC20Upgradeable(_tether) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GameVault.sol\":904:942  _setupRole(DEFAULT_ADMIN_ROLE, _owner) */\n      tag_147\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      0x00\n        /* \"contracts/GameVault.sol\":915:933  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/GameVault.sol\":935:941  _owner */\n      dup4\n        /* \"contracts/GameVault.sol\":904:914  _setupRole */\n      tag_148\n        /* \"contracts/GameVault.sol\":904:942  _setupRole(DEFAULT_ADMIN_ROLE, _owner) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3694  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3733:3734  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"contracts/GameVault.sol\":754:949  function initialize (... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_121\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_126\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4016:4052  _authorizeUpgrade(newImplementation) */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4034:4051  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4016:4033  _authorizeUpgrade */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4016:4052  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4062:4114  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4084:4101  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4103:4107  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4109:4113  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4062:4083  _upgradeToAndCallUUPS */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4062:4114  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3084:3091  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2333:2339  __self */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2316:2339  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2324:2328  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2316:2339  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1312:1378  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3110:3130  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3103:3130  return _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GameVault.sol\":2049:2263  function claimRewardAdminList(address[] memory _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      0x00\n        /* \"contracts/GameVault.sol\":2126:2144  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/GameVault.sol\":2160:2169  uint256 i */\n      0x00\n        /* \"contracts/GameVault.sol\":2156:2257  for(uint256 i = 0 ; i< _playerSet.length; i++){... */\n    tag_169:\n        /* \"contracts/GameVault.sol\":2179:2189  _playerSet */\n      dup3\n        /* \"contracts/GameVault.sol\":2179:2196  _playerSet.length */\n      mload\n        /* \"contracts/GameVault.sol\":2176:2177  i */\n      dup2\n        /* \"contracts/GameVault.sol\":2176:2196  i< _playerSet.length */\n      lt\n        /* \"contracts/GameVault.sol\":2156:2257  for(uint256 i = 0 ; i< _playerSet.length; i++){... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/GameVault.sol\":2215:2246  claimRewardAdmin(_playerSet[i]) */\n      tag_172\n        /* \"contracts/GameVault.sol\":2232:2242  _playerSet */\n      dup4\n        /* \"contracts/GameVault.sol\":2243:2244  i */\n      dup3\n        /* \"contracts/GameVault.sol\":2232:2245  _playerSet[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n    tag_173:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/GameVault.sol\":2215:2231  claimRewardAdmin */\n      tag_176\n        /* \"contracts/GameVault.sol\":2215:2246  claimRewardAdmin(_playerSet[i]) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/GameVault.sol\":2198:2201  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/GameVault.sol\":2156:2257  for(uint256 i = 0 ; i< _playerSet.length; i++){... */\n      jump(tag_169)\n    tag_170:\n      pop\n        /* \"contracts/GameVault.sol\":2049:2263  function claimRewardAdminList(address[] memory _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GameVault.sol\":2268:2372  function playerBalance() external view returns(uint)  {... */\n    tag_69:\n        /* \"contracts/GameVault.sol\":2315:2319  uint */\n      0x00\n        /* \"contracts/GameVault.sol\":2339:2353  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":2339:2365  playersBalance[msg.sender] */\n      0x00\n        /* \"contracts/GameVault.sol\":2354:2364  msg.sender */\n      caller\n        /* \"contracts/GameVault.sol\":2339:2365  playersBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":2332:2365  return playersBalance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/GameVault.sol\":2268:2372  function playerBalance() external view returns(uint)  {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3415:3419  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3444  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3450  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3445:3449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3450  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3458  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3467  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3466  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3467  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3431:3467  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2450:2499  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2450:2499  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/GameVault.sol\":1200:1619  function claimReward() external {... */\n    tag_83:\n        /* \"contracts/GameVault.sol\":1279:1280  0 */\n      0x00\n        /* \"contracts/GameVault.sol\":1250:1264  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1250:1276  playersBalance[msg.sender] */\n      0x00\n        /* \"contracts/GameVault.sol\":1265:1275  msg.sender */\n      caller\n        /* \"contracts/GameVault.sol\":1250:1276  playersBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":1250:1280  playersBalance[msg.sender] > 0 */\n      gt\n        /* \"contracts/GameVault.sol\":1242:1311  require(playersBalance[msg.sender] > 0 , \"You don't have any reward\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/GameVault.sol\":1359:1365  tether */\n      0xfb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameVault.sol\":1359:1375  tether.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/GameVault.sol\":1384:1388  this */\n      address\n        /* \"contracts/GameVault.sol\":1359:1390  tether.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"contracts/GameVault.sol\":1329:1343  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1329:1355  playersBalance[msg.sender] */\n      0x00\n        /* \"contracts/GameVault.sol\":1344:1354  msg.sender */\n      caller\n        /* \"contracts/GameVault.sol\":1329:1355  playersBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":1329:1390  playersBalance[msg.sender] <= tether.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"contracts/GameVault.sol\":1321:1428  require(playersBalance[msg.sender] <= tether.balanceOf(address(this)), \"You can't withdraw at this moment\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/GameVault.sol\":1438:1452  uint256 amount */\n      0x00\n        /* \"contracts/GameVault.sol\":1455:1469  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1455:1481  playersBalance[msg.sender] */\n      0x00\n        /* \"contracts/GameVault.sol\":1470:1480  msg.sender */\n      caller\n        /* \"contracts/GameVault.sol\":1455:1481  playersBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":1438:1481  uint256 amount = playersBalance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/GameVault.sol\":1520:1521  0 */\n      0x00\n        /* \"contracts/GameVault.sol\":1491:1505  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1491:1517  playersBalance[msg.sender] */\n      0x00\n        /* \"contracts/GameVault.sol\":1506:1516  msg.sender */\n      caller\n        /* \"contracts/GameVault.sol\":1491:1517  playersBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GameVault.sol\":1491:1521  playersBalance[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GameVault.sol\":1531:1537  tether */\n      0xfb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameVault.sol\":1531:1546  tether.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/GameVault.sol\":1547:1557  msg.sender */\n      caller\n        /* \"contracts/GameVault.sol\":1559:1565  amount */\n      dup4\n        /* \"contracts/GameVault.sol\":1531:1566  tether.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      pop\n        /* \"contracts/GameVault.sol\":1581:1612  ClaimReward(msg.sender, amount) */\n      0xba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e\n        /* \"contracts/GameVault.sol\":1593:1603  msg.sender */\n      caller\n        /* \"contracts/GameVault.sol\":1605:1611  amount */\n      dup3\n        /* \"contracts/GameVault.sol\":1581:1612  ClaimReward(msg.sender, amount) */\n      mload(0x40)\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GameVault.sol\":1232:1619  {... */\n      pop\n        /* \"contracts/GameVault.sol\":1200:1619  function claimReward() external {... */\n      jump\t// out\n        /* \"contracts/GameVault.sol\":2377:2525  function playerBalanceAdmin(address _player) external view onlyRole(DEFAULT_ADMIN_ROLE) returns(uint){... */\n    tag_87:\n        /* \"contracts/GameVault.sol\":2473:2477  uint */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      dup1\n        /* \"contracts/GameVault.sol\":2445:2463  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/GameVault.sol\":2495:2509  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":2495:2518  playersBalance[_player] */\n      0x00\n        /* \"contracts/GameVault.sol\":2510:2517  _player */\n      dup5\n        /* \"contracts/GameVault.sol\":2495:2518  playersBalance[_player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":2488:2518  return playersBalance[_player] */\n      swap2\n      pop\n        /* \"contracts/GameVault.sol\":2377:2525  function playerBalanceAdmin(address _player) external view onlyRole(DEFAULT_ADMIN_ROLE) returns(uint){... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5684:5831  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5768:5786  getRoleAdmin(role) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5781:5785  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5768:5780  getRoleAdmin */\n      tag_32\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5768:5786  getRoleAdmin(role) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5824  _revokeRole(role, account) */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5810:5814  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5816:5823  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5809  _revokeRole */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5824  _revokeRole(role, account) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5684:5831  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GameVault.sol\":954:1195  function playersReward(PlayerInfo[] calldata _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE){... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      0x00\n        /* \"contracts/GameVault.sol\":1029:1047  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/GameVault.sol\":1062:1071  uint256 i */\n      0x00\n        /* \"contracts/GameVault.sol\":1058:1189  for(uint256 i=0; i< _playerSet.length; i++) {... */\n    tag_210:\n        /* \"contracts/GameVault.sol\":1078:1088  _playerSet */\n      dup4\n      dup4\n        /* \"contracts/GameVault.sol\":1078:1095  _playerSet.length */\n      swap1\n      pop\n        /* \"contracts/GameVault.sol\":1075:1076  i */\n      dup2\n        /* \"contracts/GameVault.sol\":1075:1095  i< _playerSet.length */\n      lt\n        /* \"contracts/GameVault.sol\":1058:1189  for(uint256 i=0; i< _playerSet.length; i++) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/GameVault.sol\":1157:1167  _playerSet */\n      dup4\n      dup4\n        /* \"contracts/GameVault.sol\":1168:1169  i */\n      dup3\n        /* \"contracts/GameVault.sol\":1157:1170  _playerSet[i] */\n      dup2\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_214\n      tag_175\n      jump\t// in\n    tag_214:\n    tag_213:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"contracts/GameVault.sol\":1157:1178  _playerSet[i].balance */\n      0x20\n      add\n      calldataload\n        /* \"contracts/GameVault.sol\":1116:1130  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1116:1152  playersBalance[_playerSet[i].player] */\n      0x00\n        /* \"contracts/GameVault.sol\":1131:1141  _playerSet */\n      dup7\n      dup7\n        /* \"contracts/GameVault.sol\":1142:1143  i */\n      dup6\n        /* \"contracts/GameVault.sol\":1131:1144  _playerSet[i] */\n      dup2\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_216\n      tag_175\n      jump\t// in\n    tag_216:\n    tag_215:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"contracts/GameVault.sol\":1131:1151  _playerSet[i].player */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_217:\n        /* \"contracts/GameVault.sol\":1116:1152  playersBalance[_playerSet[i].player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/GameVault.sol\":1116:1178  playersBalance[_playerSet[i].player] +=  _playerSet[i].balance */\n      dup3\n      dup3\n      sload\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GameVault.sol\":1097:1100  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/GameVault.sol\":1058:1189  for(uint256 i=0; i< _playerSet.length; i++) {... */\n      jump(tag_210)\n    tag_211:\n      pop\n        /* \"contracts/GameVault.sol\":954:1195  function playersReward(PlayerInfo[] calldata _playerSet) external onlyRole(DEFAULT_ADMIN_ROLE){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1060:1226  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1183:1219  type(IERC165Upgradeable).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1168:1179  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1161:1219  return interfaceId == type(IERC165Upgradeable).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1060:1226  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3768:3871  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3864  _checkRole(role, _msgSender()) */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3845:3849  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3851:3863  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3851:3861  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3851:3863  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3844  _checkRole */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3864  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3768:3871  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7917:8150  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8022  hasRole(role, account) */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8008:8012  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8014:8021  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8007  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8022  hasRole(role, account) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7995:8144  if (!hasRole(role, account)) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8070:8074  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8044  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8050  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8045:8049  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8050  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8058  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8067  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8067  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8074  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8132  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8130  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8132  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8111:8118  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8105:8109  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7995:8144  if (!hasRole(role, account)) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7917:8150  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8321:8555  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8426  hasRole(role, account) */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8412:8416  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8418:8425  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8411  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8426  hasRole(role, account) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8400:8549  if (hasRole(role, account)) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8474:8479  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8448  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8449:8453  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8462  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8471  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8470  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8471  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8479  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8525:8537  _msgSender() */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8525:8535  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8525:8537  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8516:8523  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8510:8514  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8400:8549  if (hasRole(role, account)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8321:8555  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1457:1608  function _getImplementation() internal view returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1510:1517  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1595  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1312:1378  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1574:1594  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1573  StorageSlotUpgradeable.getAddressSlot */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1595  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1601  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1529:1601  return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1457:1608  function _getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GameVault.sol\":2530:2655  function _authorizeUpgrade(... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      0x00\n        /* \"contracts/GameVault.sol\":2633:2651  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/GameVault.sol\":2530:2655  function _authorizeUpgrade(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2820:3764  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3236:3289  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT) */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":971:1037  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3274:3288  _ROLLBACK_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3236:3273  StorageSlotUpgradeable.getBooleanSlot */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3236:3289  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3236:3295  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3232:3758  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3348  _setImplementation(newImplementation) */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3330:3347  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3329  _setImplementation */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3348  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3232:3758  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      jump(tag_246)\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3412:3429  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3383:3444  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3383:3446  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_247\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x01\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3379:3681  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3610:3666  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3379:3681  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1312:1378  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3504:3524  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3496:3500  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3496:3524  slot == _IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3447:3585  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3747  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3712:3729  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3731:3735  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3737:3746  forceCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3711  _upgradeToAndCall */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3747  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3232:3758  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2820:3764  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1483:1487  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1735:1736  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1720  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1706:1736  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7267:7377  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7345:7370  _grantRole(role, account) */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7356:7360  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7362:7369  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7345:7355  _grantRole */\n      tag_109\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7345:7370  _grantRole(role, account) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7267:7377  function _setupRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GameVault.sol\":1624:2044  function claimRewardAdmin(address _player) private {... */\n    tag_176:\n        /* \"contracts/GameVault.sol\":1719:1720  0 */\n      0x00\n        /* \"contracts/GameVault.sol\":1693:1707  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1693:1716  playersBalance[_player] */\n      0x00\n        /* \"contracts/GameVault.sol\":1708:1715  _player */\n      dup4\n        /* \"contracts/GameVault.sol\":1693:1716  playersBalance[_player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":1693:1720  playersBalance[_player] > 0 */\n      gt\n        /* \"contracts/GameVault.sol\":1685:1751  require(playersBalance[_player] > 0 , \"You don't have any reward\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_182\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"contracts/GameVault.sol\":1796:1802  tether */\n      0xfb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameVault.sol\":1796:1812  tether.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/GameVault.sol\":1821:1825  this */\n      address\n        /* \"contracts/GameVault.sol\":1796:1827  tether.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_268:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_271:\n        /* \"contracts/GameVault.sol\":1769:1783  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1769:1792  playersBalance[_player] */\n      0x00\n        /* \"contracts/GameVault.sol\":1784:1791  _player */\n      dup4\n        /* \"contracts/GameVault.sol\":1769:1792  playersBalance[_player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":1769:1827  playersBalance[_player] <= tether.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"contracts/GameVault.sol\":1761:1865  require(playersBalance[_player] <= tether.balanceOf(address(this)), \"You can't withdraw at this moment\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap1\n      tag_191\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_272:\n        /* \"contracts/GameVault.sol\":1875:1889  uint256 amount */\n      0x00\n        /* \"contracts/GameVault.sol\":1892:1906  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1892:1915  playersBalance[_player] */\n      0x00\n        /* \"contracts/GameVault.sol\":1907:1914  _player */\n      dup4\n        /* \"contracts/GameVault.sol\":1892:1915  playersBalance[_player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GameVault.sol\":1875:1915  uint256 amount = playersBalance[_player] */\n      swap1\n      pop\n        /* \"contracts/GameVault.sol\":1951:1952  0 */\n      0x00\n        /* \"contracts/GameVault.sol\":1925:1939  playersBalance */\n      0xfc\n        /* \"contracts/GameVault.sol\":1925:1948  playersBalance[_player] */\n      0x00\n        /* \"contracts/GameVault.sol\":1940:1947  _player */\n      dup5\n        /* \"contracts/GameVault.sol\":1925:1948  playersBalance[_player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GameVault.sol\":1925:1952  playersBalance[_player] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GameVault.sol\":1962:1968  tether */\n      0xfb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameVault.sol\":1962:1977  tether.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/GameVault.sol\":1978:1985  _player */\n      dup4\n        /* \"contracts/GameVault.sol\":1987:1993  amount */\n      dup4\n        /* \"contracts/GameVault.sol\":1962:1994  tether.transfer(_player, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_274:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_277\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_277:\n      pop\n        /* \"contracts/GameVault.sol\":2009:2037  ClaimReward(_player, amount) */\n      0xba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e\n        /* \"contracts/GameVault.sol\":2021:2028  _player */\n      dup3\n        /* \"contracts/GameVault.sol\":2030:2036  amount */\n      dup3\n        /* \"contracts/GameVault.sol\":2009:2037  ClaimReward(_player, amount) */\n      mload(0x40)\n      tag_278\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GameVault.sol\":1675:2044  {... */\n      pop\n        /* \"contracts/GameVault.sol\":1624:2044  function claimRewardAdmin(address _player) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4152:4653  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4262  hasRole(role, account) */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4248:4252  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4254:4261  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4247  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4262  hasRole(role, account) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4235:4647  if (!hasRole(role, account)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4462  StringsUpgradeable.toHexString(account) */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4454:4461  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4453  StringsUpgradeable.toHexString */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4462  StringsUpgradeable.toHexString(account) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4582  StringsUpgradeable.toHexString(uint256(role), 32) */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4572:4576  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4564:4577  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4579:4581  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4563  StringsUpgradeable.toHexString */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4582  StringsUpgradeable.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4330:4604  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_286\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4278:4636  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4235:4647  if (!hasRole(role, account)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4152:4653  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1870:2060  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1931:1952  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2040:2044  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2030:2044  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1870:2060  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2158:2348  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2219:2240  BooleanSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2328:2332  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2318:2332  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2158:2348  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1699:1980  function _setImplementation(address newImplementation) private {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1780:1828  AddressUpgradeable.isContract(newImplementation) */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1810:1827  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1780:1809  AddressUpgradeable.isContract */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1780:1828  AddressUpgradeable.isContract(newImplementation) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1956:1973  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1888:1947  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1312:1378  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1926:1946  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1888:1925  StorageSlotUpgradeable.getAddressSlot */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1888:1947  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1888:1953  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1888:1973  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1699:1980  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2372:2648  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2509  _upgradeTo(newImplementation) */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2491:2508  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2490  _upgradeTo */\n      tag_300\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2509  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2537:2538  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2527  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2534  data.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2538  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2551  data.length > 0 || forceCall */\n      dup1\n      tag_301\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2542:2551  forceCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2551  data.length > 0 || forceCall */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2519:2642  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2631  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2607:2624  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2626:2630  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2606  AddressUpgradeable.functionDelegateCall */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2631  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_303:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2519:2642  if (data.length > 0 || forceCall) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2372:2648  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2531:2544  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_306\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2591:2595  addr */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2575:2597  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":376:378  20 */\n      0x14\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2574  toHexString */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2556:2615  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1959:1972  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2003  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2029:2030  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2020:2026  length */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2017  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_308\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_310\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2006:2031  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_311\n      jumpi\n      tag_312\n      tag_133\n      jump\t// in\n    tag_312:\n    tag_311:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_313\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_313:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2031  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2047  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2048:2049  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2050  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_315\n      tag_175\n      jump\t// in\n    tag_315:\n    tag_314:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2072  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2073:2074  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2075  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_316\n      jumpi\n      tag_317\n      tag_175\n      jump\t// in\n    tag_317:\n    tag_316:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2105  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2121:2122  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2112:2118  length */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2109  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_321\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_322\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2122  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2128:2129  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2125  i */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2129  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2170  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2179:2182  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2176  value */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2182  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2183  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_324\n      tag_175\n      jump\t// in\n    tag_324:\n    tag_323:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2156  buffer */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2157:2158  i */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2159  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_326\n      tag_175\n      jump\t// in\n    tag_326:\n    tag_325:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2183  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2207:2208  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2197:2208  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2131:2134  --i */\n      dup1\n      tag_327\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_318)\n    tag_319:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2245:2246  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2241  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2246  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap1\n      tag_331\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2307:2313  buffer */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2293:2314  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2086:2238  function _upgradeTo(address newImplementation) internal {... */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2189  _setImplementation(newImplementation) */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2171:2188  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2170  _setImplementation */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2189  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2213:2230  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2231  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2086:2238  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6768:6780  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6820:6826  target */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6828:6832  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6819  functionDelegateCall */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6792:6876  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7210:7222  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7235:7247  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7249:7272  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7282  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7295  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7296:7300  data */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7301  target.delegatecall(data) */\n      mload(0x40)\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_342\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_341)\n    tag_342:\n      0x60\n      swap2\n      pop\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7234:7301  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_343\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7345:7351  target */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7353:7360  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7362:7372  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7374:7386  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7344  verifyCallResultFromTarget */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7311:7387  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7862:7874  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7890:7897  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7938:7939  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7927  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7934  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7939  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8150  isContract(target) */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8143:8149  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8142  isContract */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8150  isContract(target) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8219:8229  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8212:8229  return returndata */\n      swap1\n      pop\n      jump(tag_345)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8268:8278  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8280:8292  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8267  _revert */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_345:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8832:9372  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9011:9012  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9001  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9008  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9012  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9219:9229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9213:9230  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9275:9290  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9262:9272  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9258:9260  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9254:9273  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9247:9291  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9342:9354  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9335:9355  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_359:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_360:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_361:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_362:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_363:\n        /* \"#utility.yul\":561:584   */\n      tag_447\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_362\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_448:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_364:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_450\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_363\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_453\n      tag_360\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":833:952   */\n    tag_452:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_454\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_364\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_365:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_366:\n        /* \"#utility.yul\":1268:1289   */\n      tag_457\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_365\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_459\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_366\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_367:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_368:\n        /* \"#utility.yul\":1674:1698   */\n      tag_462\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_367\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_463:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_369:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_465\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_368\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_31:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_468\n      tag_360\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1950:2069   */\n    tag_467:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_469\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_369\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_370:\n        /* \"#utility.yul\":2296:2320   */\n      tag_471\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_367\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_34:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_473\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_370\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_371:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_372:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_476\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_371\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_373:\n        /* \"#utility.yul\":2868:2892   */\n      tag_478\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_372\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_479:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_374:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_481\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_373\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_38:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_484\n      tag_360\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3161:3280   */\n    tag_483:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_485\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_369\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_486\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_374\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3877   */\n    tag_47:\n        /* \"#utility.yul\":3607:3613   */\n      0x00\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3635:3642   */\n      dup5\n        /* \"#utility.yul\":3631:3654   */\n      sub\n        /* \"#utility.yul\":3627:3659   */\n      slt\n        /* \"#utility.yul\":3624:3743   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":3662:3741   */\n      tag_489\n      tag_360\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3624:3743   */\n    tag_488:\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3807:3860   */\n      tag_490\n        /* \"#utility.yul\":3852:3859   */\n      dup5\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_374\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3753:3870   */\n      pop\n        /* \"#utility.yul\":3548:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4357   */\n    tag_52:\n        /* \"#utility.yul\":3951:3957   */\n      0x00\n        /* \"#utility.yul\":3959:3965   */\n      dup1\n        /* \"#utility.yul\":4008:4010   */\n      0x40\n        /* \"#utility.yul\":3996:4005   */\n      dup4\n        /* \"#utility.yul\":3987:3994   */\n      dup6\n        /* \"#utility.yul\":3983:4006   */\n      sub\n        /* \"#utility.yul\":3979:4011   */\n      slt\n        /* \"#utility.yul\":3976:4095   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":4014:4093   */\n      tag_493\n      tag_360\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":3976:4095   */\n    tag_492:\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4159:4212   */\n      tag_494\n        /* \"#utility.yul\":4204:4211   */\n      dup6\n        /* \"#utility.yul\":4195:4201   */\n      dup3\n        /* \"#utility.yul\":4184:4193   */\n      dup7\n        /* \"#utility.yul\":4180:4202   */\n      add\n        /* \"#utility.yul\":4159:4212   */\n      tag_374\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4149:4212   */\n      swap3\n      pop\n        /* \"#utility.yul\":4105:4222   */\n      pop\n        /* \"#utility.yul\":4261:4263   */\n      0x20\n        /* \"#utility.yul\":4287:4340   */\n      tag_495\n        /* \"#utility.yul\":4332:4339   */\n      dup6\n        /* \"#utility.yul\":4323:4329   */\n      dup3\n        /* \"#utility.yul\":4312:4321   */\n      dup7\n        /* \"#utility.yul\":4308:4330   */\n      add\n        /* \"#utility.yul\":4287:4340   */\n      tag_374\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4277:4340   */\n      swap2\n      pop\n        /* \"#utility.yul\":4232:4350   */\n      pop\n        /* \"#utility.yul\":3883:4357   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4480   */\n    tag_375:\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4469:4470   */\n      dup1\n        /* \"#utility.yul\":4462:4474   */\n      revert\n        /* \"#utility.yul\":4486:4603   */\n    tag_376:\n        /* \"#utility.yul\":4595:4596   */\n      0x00\n        /* \"#utility.yul\":4592:4593   */\n      dup1\n        /* \"#utility.yul\":4585:4597   */\n      revert\n        /* \"#utility.yul\":4609:4711   */\n    tag_377:\n        /* \"#utility.yul\":4650:4656   */\n      0x00\n        /* \"#utility.yul\":4701:4703   */\n      0x1f\n        /* \"#utility.yul\":4697:4704   */\n      not\n        /* \"#utility.yul\":4692:4694   */\n      0x1f\n        /* \"#utility.yul\":4685:4690   */\n      dup4\n        /* \"#utility.yul\":4681:4695   */\n      add\n        /* \"#utility.yul\":4677:4705   */\n      and\n        /* \"#utility.yul\":4667:4705   */\n      swap1\n      pop\n        /* \"#utility.yul\":4609:4711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4717:4897   */\n    tag_133:\n        /* \"#utility.yul\":4765:4842   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4762:4763   */\n      0x00\n        /* \"#utility.yul\":4755:4843   */\n      mstore\n        /* \"#utility.yul\":4862:4866   */\n      0x41\n        /* \"#utility.yul\":4859:4860   */\n      0x04\n        /* \"#utility.yul\":4852:4867   */\n      mstore\n        /* \"#utility.yul\":4886:4890   */\n      0x24\n        /* \"#utility.yul\":4883:4884   */\n      0x00\n        /* \"#utility.yul\":4876:4891   */\n      revert\n        /* \"#utility.yul\":4903:5184   */\n    tag_378:\n        /* \"#utility.yul\":4986:5013   */\n      tag_501\n        /* \"#utility.yul\":5008:5012   */\n      dup3\n        /* \"#utility.yul\":4986:5013   */\n      tag_377\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4978:4984   */\n      dup2\n        /* \"#utility.yul\":4974:5014   */\n      add\n        /* \"#utility.yul\":5116:5122   */\n      dup2\n        /* \"#utility.yul\":5104:5114   */\n      dup2\n        /* \"#utility.yul\":5101:5123   */\n      lt\n        /* \"#utility.yul\":5080:5098   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5068:5078   */\n      dup3\n        /* \"#utility.yul\":5065:5099   */\n      gt\n        /* \"#utility.yul\":5062:5124   */\n      or\n        /* \"#utility.yul\":5059:5147   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":5127:5145   */\n      tag_503\n      tag_133\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":5059:5147   */\n    tag_502:\n        /* \"#utility.yul\":5167:5177   */\n      dup1\n        /* \"#utility.yul\":5163:5165   */\n      0x40\n        /* \"#utility.yul\":5156:5178   */\n      mstore\n        /* \"#utility.yul\":4946:5184   */\n      pop\n        /* \"#utility.yul\":4903:5184   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5319   */\n    tag_379:\n        /* \"#utility.yul\":5224:5230   */\n      0x00\n        /* \"#utility.yul\":5251:5271   */\n      tag_505\n      tag_359\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5241:5271   */\n      swap1\n      pop\n        /* \"#utility.yul\":5280:5313   */\n      tag_506\n        /* \"#utility.yul\":5308:5312   */\n      dup3\n        /* \"#utility.yul\":5300:5306   */\n      dup3\n        /* \"#utility.yul\":5280:5313   */\n      tag_378\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5190:5319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5325:5632   */\n    tag_380:\n        /* \"#utility.yul\":5386:5390   */\n      0x00\n        /* \"#utility.yul\":5476:5494   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5468:5474   */\n      dup3\n        /* \"#utility.yul\":5465:5495   */\n      gt\n        /* \"#utility.yul\":5462:5518   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":5498:5516   */\n      tag_509\n      tag_133\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5462:5518   */\n    tag_508:\n        /* \"#utility.yul\":5536:5565   */\n      tag_510\n        /* \"#utility.yul\":5558:5564   */\n      dup3\n        /* \"#utility.yul\":5536:5565   */\n      tag_377\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5528:5565   */\n      swap1\n      pop\n        /* \"#utility.yul\":5620:5624   */\n      0x20\n        /* \"#utility.yul\":5614:5618   */\n      dup2\n        /* \"#utility.yul\":5610:5625   */\n      add\n        /* \"#utility.yul\":5602:5625   */\n      swap1\n      pop\n        /* \"#utility.yul\":5325:5632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5638:5786   */\n    tag_381:\n        /* \"#utility.yul\":5736:5742   */\n      dup3\n        /* \"#utility.yul\":5731:5734   */\n      dup2\n        /* \"#utility.yul\":5726:5729   */\n      dup4\n        /* \"#utility.yul\":5713:5743   */\n      calldatacopy\n        /* \"#utility.yul\":5777:5778   */\n      0x00\n        /* \"#utility.yul\":5768:5774   */\n      dup4\n        /* \"#utility.yul\":5763:5766   */\n      dup4\n        /* \"#utility.yul\":5759:5775   */\n      add\n        /* \"#utility.yul\":5752:5779   */\n      mstore\n        /* \"#utility.yul\":5638:5786   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:6215   */\n    tag_382:\n        /* \"#utility.yul\":5869:5874   */\n      0x00\n        /* \"#utility.yul\":5894:5959   */\n      tag_513\n        /* \"#utility.yul\":5910:5958   */\n      tag_514\n        /* \"#utility.yul\":5951:5957   */\n      dup5\n        /* \"#utility.yul\":5910:5958   */\n      tag_380\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5894:5959   */\n      tag_379\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":5885:5959   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5975:5980   */\n      dup2\n        /* \"#utility.yul\":5968:5989   */\n      mstore\n        /* \"#utility.yul\":6020:6024   */\n      0x20\n        /* \"#utility.yul\":6013:6018   */\n      dup2\n        /* \"#utility.yul\":6009:6025   */\n      add\n        /* \"#utility.yul\":6058:6061   */\n      dup5\n        /* \"#utility.yul\":6049:6055   */\n      dup5\n        /* \"#utility.yul\":6044:6047   */\n      dup5\n        /* \"#utility.yul\":6040:6056   */\n      add\n        /* \"#utility.yul\":6037:6062   */\n      gt\n        /* \"#utility.yul\":6034:6146   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":6065:6144   */\n      tag_516\n      tag_376\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6034:6146   */\n    tag_515:\n        /* \"#utility.yul\":6155:6209   */\n      tag_517\n        /* \"#utility.yul\":6202:6208   */\n      dup5\n        /* \"#utility.yul\":6197:6200   */\n      dup3\n        /* \"#utility.yul\":6192:6195   */\n      dup6\n        /* \"#utility.yul\":6155:6209   */\n      tag_381\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5875:6215   */\n      pop\n        /* \"#utility.yul\":5792:6215   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6234:6572   */\n    tag_383:\n        /* \"#utility.yul\":6289:6294   */\n      0x00\n        /* \"#utility.yul\":6338:6341   */\n      dup3\n        /* \"#utility.yul\":6331:6335   */\n      0x1f\n        /* \"#utility.yul\":6323:6329   */\n      dup4\n        /* \"#utility.yul\":6319:6336   */\n      add\n        /* \"#utility.yul\":6315:6342   */\n      slt\n        /* \"#utility.yul\":6305:6427   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":6346:6425   */\n      tag_520\n      tag_375\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":6305:6427   */\n    tag_519:\n        /* \"#utility.yul\":6463:6469   */\n      dup2\n        /* \"#utility.yul\":6450:6470   */\n      calldataload\n        /* \"#utility.yul\":6488:6566   */\n      tag_521\n        /* \"#utility.yul\":6562:6565   */\n      dup5\n        /* \"#utility.yul\":6554:6560   */\n      dup3\n        /* \"#utility.yul\":6547:6551   */\n      0x20\n        /* \"#utility.yul\":6539:6545   */\n      dup7\n        /* \"#utility.yul\":6535:6552   */\n      add\n        /* \"#utility.yul\":6488:6566   */\n      tag_382\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6479:6566   */\n      swap2\n      pop\n        /* \"#utility.yul\":6295:6572   */\n      pop\n        /* \"#utility.yul\":6234:6572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6578:7230   */\n    tag_56:\n        /* \"#utility.yul\":6655:6661   */\n      0x00\n        /* \"#utility.yul\":6663:6669   */\n      dup1\n        /* \"#utility.yul\":6712:6714   */\n      0x40\n        /* \"#utility.yul\":6700:6709   */\n      dup4\n        /* \"#utility.yul\":6691:6698   */\n      dup6\n        /* \"#utility.yul\":6687:6710   */\n      sub\n        /* \"#utility.yul\":6683:6715   */\n      slt\n        /* \"#utility.yul\":6680:6799   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":6718:6797   */\n      tag_524\n      tag_360\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":6680:6799   */\n    tag_523:\n        /* \"#utility.yul\":6838:6839   */\n      0x00\n        /* \"#utility.yul\":6863:6916   */\n      tag_525\n        /* \"#utility.yul\":6908:6915   */\n      dup6\n        /* \"#utility.yul\":6899:6905   */\n      dup3\n        /* \"#utility.yul\":6888:6897   */\n      dup7\n        /* \"#utility.yul\":6884:6906   */\n      add\n        /* \"#utility.yul\":6863:6916   */\n      tag_374\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6853:6916   */\n      swap3\n      pop\n        /* \"#utility.yul\":6809:6926   */\n      pop\n        /* \"#utility.yul\":6993:6995   */\n      0x20\n        /* \"#utility.yul\":6982:6991   */\n      dup4\n        /* \"#utility.yul\":6978:6996   */\n      add\n        /* \"#utility.yul\":6965:6997   */\n      calldataload\n        /* \"#utility.yul\":7024:7042   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7016:7022   */\n      dup2\n        /* \"#utility.yul\":7013:7043   */\n      gt\n        /* \"#utility.yul\":7010:7127   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":7046:7125   */\n      tag_527\n      tag_361\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7010:7127   */\n    tag_526:\n        /* \"#utility.yul\":7151:7213   */\n      tag_528\n        /* \"#utility.yul\":7205:7212   */\n      dup6\n        /* \"#utility.yul\":7196:7202   */\n      dup3\n        /* \"#utility.yul\":7185:7194   */\n      dup7\n        /* \"#utility.yul\":7181:7203   */\n      add\n        /* \"#utility.yul\":7151:7213   */\n      tag_383\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":7141:7213   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7223   */\n      pop\n        /* \"#utility.yul\":6578:7230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7236:7547   */\n    tag_384:\n        /* \"#utility.yul\":7313:7317   */\n      0x00\n        /* \"#utility.yul\":7403:7421   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7395:7401   */\n      dup3\n        /* \"#utility.yul\":7392:7422   */\n      gt\n        /* \"#utility.yul\":7389:7445   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":7425:7443   */\n      tag_531\n      tag_133\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7389:7445   */\n    tag_530:\n        /* \"#utility.yul\":7475:7479   */\n      0x20\n        /* \"#utility.yul\":7467:7473   */\n      dup3\n        /* \"#utility.yul\":7463:7480   */\n      mul\n        /* \"#utility.yul\":7455:7480   */\n      swap1\n      pop\n        /* \"#utility.yul\":7535:7539   */\n      0x20\n        /* \"#utility.yul\":7529:7533   */\n      dup2\n        /* \"#utility.yul\":7525:7540   */\n      add\n        /* \"#utility.yul\":7517:7540   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7553:7670   */\n    tag_385:\n        /* \"#utility.yul\":7662:7663   */\n      0x00\n        /* \"#utility.yul\":7659:7660   */\n      dup1\n        /* \"#utility.yul\":7652:7664   */\n      revert\n        /* \"#utility.yul\":7693:8403   */\n    tag_386:\n        /* \"#utility.yul\":7789:7794   */\n      0x00\n        /* \"#utility.yul\":7814:7895   */\n      tag_534\n        /* \"#utility.yul\":7830:7894   */\n      tag_535\n        /* \"#utility.yul\":7887:7893   */\n      dup5\n        /* \"#utility.yul\":7830:7894   */\n      tag_384\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7814:7895   */\n      tag_379\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7805:7895   */\n      swap1\n      pop\n        /* \"#utility.yul\":7915:7920   */\n      dup1\n        /* \"#utility.yul\":7944:7950   */\n      dup4\n        /* \"#utility.yul\":7937:7942   */\n      dup3\n        /* \"#utility.yul\":7930:7951   */\n      mstore\n        /* \"#utility.yul\":7978:7982   */\n      0x20\n        /* \"#utility.yul\":7971:7976   */\n      dup3\n        /* \"#utility.yul\":7967:7983   */\n      add\n        /* \"#utility.yul\":7960:7983   */\n      swap1\n      pop\n        /* \"#utility.yul\":8031:8035   */\n      0x20\n        /* \"#utility.yul\":8023:8029   */\n      dup5\n        /* \"#utility.yul\":8019:8036   */\n      mul\n        /* \"#utility.yul\":8011:8017   */\n      dup4\n        /* \"#utility.yul\":8007:8037   */\n      add\n        /* \"#utility.yul\":8060:8063   */\n      dup6\n        /* \"#utility.yul\":8052:8058   */\n      dup2\n        /* \"#utility.yul\":8049:8064   */\n      gt\n        /* \"#utility.yul\":8046:8168   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":8079:8158   */\n      tag_537\n      tag_385\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":8046:8168   */\n    tag_536:\n        /* \"#utility.yul\":8194:8200   */\n      dup4\n        /* \"#utility.yul\":8177:8397   */\n    tag_538:\n        /* \"#utility.yul\":8211:8217   */\n      dup2\n        /* \"#utility.yul\":8206:8209   */\n      dup2\n        /* \"#utility.yul\":8203:8218   */\n      lt\n        /* \"#utility.yul\":8177:8397   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":8286:8289   */\n      dup1\n        /* \"#utility.yul\":8315:8352   */\n      tag_541\n        /* \"#utility.yul\":8348:8351   */\n      dup9\n        /* \"#utility.yul\":8336:8346   */\n      dup3\n        /* \"#utility.yul\":8315:8352   */\n      tag_374\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8310:8313   */\n      dup5\n        /* \"#utility.yul\":8303:8353   */\n      mstore\n        /* \"#utility.yul\":8382:8386   */\n      0x20\n        /* \"#utility.yul\":8377:8380   */\n      dup5\n        /* \"#utility.yul\":8373:8387   */\n      add\n        /* \"#utility.yul\":8366:8387   */\n      swap4\n      pop\n        /* \"#utility.yul\":8253:8397   */\n      pop\n        /* \"#utility.yul\":8237:8241   */\n      0x20\n        /* \"#utility.yul\":8232:8235   */\n      dup2\n        /* \"#utility.yul\":8228:8242   */\n      add\n        /* \"#utility.yul\":8221:8242   */\n      swap1\n      pop\n        /* \"#utility.yul\":8177:8397   */\n      jump(tag_538)\n    tag_540:\n        /* \"#utility.yul\":8181:8202   */\n      pop\n        /* \"#utility.yul\":7795:8403   */\n      pop\n      pop\n        /* \"#utility.yul\":7693:8403   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8426:8796   */\n    tag_387:\n        /* \"#utility.yul\":8497:8502   */\n      0x00\n        /* \"#utility.yul\":8546:8549   */\n      dup3\n        /* \"#utility.yul\":8539:8543   */\n      0x1f\n        /* \"#utility.yul\":8531:8537   */\n      dup4\n        /* \"#utility.yul\":8527:8544   */\n      add\n        /* \"#utility.yul\":8523:8550   */\n      slt\n        /* \"#utility.yul\":8513:8635   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":8554:8633   */\n      tag_544\n      tag_375\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":8513:8635   */\n    tag_543:\n        /* \"#utility.yul\":8671:8677   */\n      dup2\n        /* \"#utility.yul\":8658:8678   */\n      calldataload\n        /* \"#utility.yul\":8696:8790   */\n      tag_545\n        /* \"#utility.yul\":8786:8789   */\n      dup5\n        /* \"#utility.yul\":8778:8784   */\n      dup3\n        /* \"#utility.yul\":8771:8775   */\n      0x20\n        /* \"#utility.yul\":8763:8769   */\n      dup7\n        /* \"#utility.yul\":8759:8776   */\n      add\n        /* \"#utility.yul\":8696:8790   */\n      tag_386\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":8687:8790   */\n      swap2\n      pop\n        /* \"#utility.yul\":8503:8796   */\n      pop\n        /* \"#utility.yul\":8426:8796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8802:9341   */\n    tag_65:\n        /* \"#utility.yul\":8886:8892   */\n      0x00\n        /* \"#utility.yul\":8935:8937   */\n      0x20\n        /* \"#utility.yul\":8923:8932   */\n      dup3\n        /* \"#utility.yul\":8914:8921   */\n      dup5\n        /* \"#utility.yul\":8910:8933   */\n      sub\n        /* \"#utility.yul\":8906:8938   */\n      slt\n        /* \"#utility.yul\":8903:9022   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":8941:9020   */\n      tag_548\n      tag_360\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8903:9022   */\n    tag_547:\n        /* \"#utility.yul\":9089:9090   */\n      0x00\n        /* \"#utility.yul\":9078:9087   */\n      dup3\n        /* \"#utility.yul\":9074:9091   */\n      add\n        /* \"#utility.yul\":9061:9092   */\n      calldataload\n        /* \"#utility.yul\":9119:9137   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9111:9117   */\n      dup2\n        /* \"#utility.yul\":9108:9138   */\n      gt\n        /* \"#utility.yul\":9105:9222   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":9141:9220   */\n      tag_550\n      tag_361\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":9105:9222   */\n    tag_549:\n        /* \"#utility.yul\":9246:9324   */\n      tag_551\n        /* \"#utility.yul\":9316:9323   */\n      dup5\n        /* \"#utility.yul\":9307:9313   */\n      dup3\n        /* \"#utility.yul\":9296:9305   */\n      dup6\n        /* \"#utility.yul\":9292:9314   */\n      add\n        /* \"#utility.yul\":9246:9324   */\n      tag_387\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":9236:9324   */\n      swap2\n      pop\n        /* \"#utility.yul\":9032:9334   */\n      pop\n        /* \"#utility.yul\":8802:9341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9347:9424   */\n    tag_388:\n        /* \"#utility.yul\":9384:9391   */\n      0x00\n        /* \"#utility.yul\":9413:9418   */\n      dup2\n        /* \"#utility.yul\":9402:9418   */\n      swap1\n      pop\n        /* \"#utility.yul\":9347:9424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9430:9548   */\n    tag_389:\n        /* \"#utility.yul\":9517:9541   */\n      tag_554\n        /* \"#utility.yul\":9535:9540   */\n      dup2\n        /* \"#utility.yul\":9517:9541   */\n      tag_388\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":9512:9515   */\n      dup3\n        /* \"#utility.yul\":9505:9542   */\n      mstore\n        /* \"#utility.yul\":9430:9548   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9554:9776   */\n    tag_71:\n        /* \"#utility.yul\":9647:9651   */\n      0x00\n        /* \"#utility.yul\":9685:9687   */\n      0x20\n        /* \"#utility.yul\":9674:9683   */\n      dup3\n        /* \"#utility.yul\":9670:9688   */\n      add\n        /* \"#utility.yul\":9662:9688   */\n      swap1\n      pop\n        /* \"#utility.yul\":9698:9769   */\n      tag_556\n        /* \"#utility.yul\":9766:9767   */\n      0x00\n        /* \"#utility.yul\":9755:9764   */\n      dup4\n        /* \"#utility.yul\":9751:9768   */\n      add\n        /* \"#utility.yul\":9742:9748   */\n      dup5\n        /* \"#utility.yul\":9698:9769   */\n      tag_389\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9554:9776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9782:9899   */\n    tag_390:\n        /* \"#utility.yul\":9891:9892   */\n      0x00\n        /* \"#utility.yul\":9888:9889   */\n      dup1\n        /* \"#utility.yul\":9881:9893   */\n      revert\n        /* \"#utility.yul\":9942:10540   */\n    tag_391:\n        /* \"#utility.yul\":10045:10053   */\n      0x00\n        /* \"#utility.yul\":10055:10061   */\n      dup1\n        /* \"#utility.yul\":10105:10108   */\n      dup4\n        /* \"#utility.yul\":10098:10102   */\n      0x1f\n        /* \"#utility.yul\":10090:10096   */\n      dup5\n        /* \"#utility.yul\":10086:10103   */\n      add\n        /* \"#utility.yul\":10082:10109   */\n      slt\n        /* \"#utility.yul\":10072:10194   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":10113:10192   */\n      tag_560\n      tag_375\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":10072:10194   */\n    tag_559:\n        /* \"#utility.yul\":10226:10232   */\n      dup3\n        /* \"#utility.yul\":10213:10233   */\n      calldataload\n        /* \"#utility.yul\":10203:10233   */\n      swap1\n      pop\n        /* \"#utility.yul\":10256:10274   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10248:10254   */\n      dup2\n        /* \"#utility.yul\":10245:10275   */\n      gt\n        /* \"#utility.yul\":10242:10359   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":10278:10357   */\n      tag_562\n      tag_390\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":10242:10359   */\n    tag_561:\n        /* \"#utility.yul\":10392:10396   */\n      0x20\n        /* \"#utility.yul\":10384:10390   */\n      dup4\n        /* \"#utility.yul\":10380:10397   */\n      add\n        /* \"#utility.yul\":10368:10397   */\n      swap2\n      pop\n        /* \"#utility.yul\":10446:10449   */\n      dup4\n        /* \"#utility.yul\":10438:10442   */\n      0x40\n        /* \"#utility.yul\":10430:10436   */\n      dup3\n        /* \"#utility.yul\":10426:10443   */\n      mul\n        /* \"#utility.yul\":10416:10424   */\n      dup4\n        /* \"#utility.yul\":10412:10444   */\n      add\n        /* \"#utility.yul\":10409:10450   */\n      gt\n        /* \"#utility.yul\":10406:10534   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":10453:10532   */\n      tag_564\n      tag_385\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":10406:10534   */\n    tag_563:\n        /* \"#utility.yul\":9942:10540   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10546:11165   */\n    tag_96:\n        /* \"#utility.yul\":10662:10668   */\n      0x00\n        /* \"#utility.yul\":10670:10676   */\n      dup1\n        /* \"#utility.yul\":10719:10721   */\n      0x20\n        /* \"#utility.yul\":10707:10716   */\n      dup4\n        /* \"#utility.yul\":10698:10705   */\n      dup6\n        /* \"#utility.yul\":10694:10717   */\n      sub\n        /* \"#utility.yul\":10690:10722   */\n      slt\n        /* \"#utility.yul\":10687:10806   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":10725:10804   */\n      tag_567\n      tag_360\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":10687:10806   */\n    tag_566:\n        /* \"#utility.yul\":10873:10874   */\n      0x00\n        /* \"#utility.yul\":10862:10871   */\n      dup4\n        /* \"#utility.yul\":10858:10875   */\n      add\n        /* \"#utility.yul\":10845:10876   */\n      calldataload\n        /* \"#utility.yul\":10903:10921   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10895:10901   */\n      dup2\n        /* \"#utility.yul\":10892:10922   */\n      gt\n        /* \"#utility.yul\":10889:11006   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":10925:11004   */\n      tag_569\n      tag_361\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":10889:11006   */\n    tag_568:\n        /* \"#utility.yul\":11038:11148   */\n      tag_570\n        /* \"#utility.yul\":11140:11147   */\n      dup6\n        /* \"#utility.yul\":11131:11137   */\n      dup3\n        /* \"#utility.yul\":11120:11129   */\n      dup7\n        /* \"#utility.yul\":11116:11138   */\n      add\n        /* \"#utility.yul\":11038:11148   */\n      tag_391\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11020:11148   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":10816:11158   */\n      pop\n        /* \"#utility.yul\":10546:11165   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11171:11340   */\n    tag_392:\n        /* \"#utility.yul\":11255:11266   */\n      0x00\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11284:11287   */\n      dup3\n        /* \"#utility.yul\":11277:11296   */\n      mstore\n        /* \"#utility.yul\":11329:11333   */\n      0x20\n        /* \"#utility.yul\":11324:11327   */\n      dup3\n        /* \"#utility.yul\":11320:11334   */\n      add\n        /* \"#utility.yul\":11305:11334   */\n      swap1\n      pop\n        /* \"#utility.yul\":11171:11340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11346:11580   */\n    tag_393:\n        /* \"#utility.yul\":11486:11520   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11482:11483   */\n      0x00\n        /* \"#utility.yul\":11474:11480   */\n      dup3\n        /* \"#utility.yul\":11470:11484   */\n      add\n        /* \"#utility.yul\":11463:11521   */\n      mstore\n        /* \"#utility.yul\":11555:11572   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":11550:11552   */\n      0x20\n        /* \"#utility.yul\":11542:11548   */\n      dup3\n        /* \"#utility.yul\":11538:11553   */\n      add\n        /* \"#utility.yul\":11531:11573   */\n      mstore\n        /* \"#utility.yul\":11346:11580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11586:11952   */\n    tag_394:\n        /* \"#utility.yul\":11728:11731   */\n      0x00\n        /* \"#utility.yul\":11749:11816   */\n      tag_574\n        /* \"#utility.yul\":11813:11815   */\n      0x2f\n        /* \"#utility.yul\":11808:11811   */\n      dup4\n        /* \"#utility.yul\":11749:11816   */\n      tag_392\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":11742:11816   */\n      swap2\n      pop\n        /* \"#utility.yul\":11825:11918   */\n      tag_575\n        /* \"#utility.yul\":11914:11917   */\n      dup3\n        /* \"#utility.yul\":11825:11918   */\n      tag_393\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":11943:11945   */\n      0x40\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11934:11946   */\n      add\n        /* \"#utility.yul\":11927:11946   */\n      swap1\n      pop\n        /* \"#utility.yul\":11586:11952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11958:12377   */\n    tag_115:\n        /* \"#utility.yul\":12124:12128   */\n      0x00\n        /* \"#utility.yul\":12162:12164   */\n      0x20\n        /* \"#utility.yul\":12151:12160   */\n      dup3\n        /* \"#utility.yul\":12147:12165   */\n      add\n        /* \"#utility.yul\":12139:12165   */\n      swap1\n      pop\n        /* \"#utility.yul\":12211:12220   */\n      dup2\n        /* \"#utility.yul\":12205:12209   */\n      dup2\n        /* \"#utility.yul\":12201:12221   */\n      sub\n        /* \"#utility.yul\":12197:12198   */\n      0x00\n        /* \"#utility.yul\":12186:12195   */\n      dup4\n        /* \"#utility.yul\":12182:12199   */\n      add\n        /* \"#utility.yul\":12175:12222   */\n      mstore\n        /* \"#utility.yul\":12239:12370   */\n      tag_577\n        /* \"#utility.yul\":12365:12369   */\n      dup2\n        /* \"#utility.yul\":12239:12370   */\n      tag_394\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12231:12370   */\n      swap1\n      pop\n        /* \"#utility.yul\":11958:12377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12383:12614   */\n    tag_395:\n        /* \"#utility.yul\":12523:12557   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":12519:12520   */\n      0x00\n        /* \"#utility.yul\":12511:12517   */\n      dup3\n        /* \"#utility.yul\":12507:12521   */\n      add\n        /* \"#utility.yul\":12500:12558   */\n      mstore\n        /* \"#utility.yul\":12592:12606   */\n      0x64656c656761746563616c6c0000000000000000000000000000000000000000\n        /* \"#utility.yul\":12587:12589   */\n      0x20\n        /* \"#utility.yul\":12579:12585   */\n      dup3\n        /* \"#utility.yul\":12575:12590   */\n      add\n        /* \"#utility.yul\":12568:12607   */\n      mstore\n        /* \"#utility.yul\":12383:12614   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12620:12986   */\n    tag_396:\n        /* \"#utility.yul\":12762:12765   */\n      0x00\n        /* \"#utility.yul\":12783:12850   */\n      tag_580\n        /* \"#utility.yul\":12847:12849   */\n      0x2c\n        /* \"#utility.yul\":12842:12845   */\n      dup4\n        /* \"#utility.yul\":12783:12850   */\n      tag_392\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":12776:12850   */\n      swap2\n      pop\n        /* \"#utility.yul\":12859:12952   */\n      tag_581\n        /* \"#utility.yul\":12948:12951   */\n      dup3\n        /* \"#utility.yul\":12859:12952   */\n      tag_395\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":12977:12979   */\n      0x40\n        /* \"#utility.yul\":12972:12975   */\n      dup3\n        /* \"#utility.yul\":12968:12980   */\n      add\n        /* \"#utility.yul\":12961:12980   */\n      swap1\n      pop\n        /* \"#utility.yul\":12620:12986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12992:13411   */\n    tag_121:\n        /* \"#utility.yul\":13158:13162   */\n      0x00\n        /* \"#utility.yul\":13196:13198   */\n      0x20\n        /* \"#utility.yul\":13185:13194   */\n      dup3\n        /* \"#utility.yul\":13181:13199   */\n      add\n        /* \"#utility.yul\":13173:13199   */\n      swap1\n      pop\n        /* \"#utility.yul\":13245:13254   */\n      dup2\n        /* \"#utility.yul\":13239:13243   */\n      dup2\n        /* \"#utility.yul\":13235:13255   */\n      sub\n        /* \"#utility.yul\":13231:13232   */\n      0x00\n        /* \"#utility.yul\":13220:13229   */\n      dup4\n        /* \"#utility.yul\":13216:13233   */\n      add\n        /* \"#utility.yul\":13209:13256   */\n      mstore\n        /* \"#utility.yul\":13273:13404   */\n      tag_583\n        /* \"#utility.yul\":13399:13403   */\n      dup2\n        /* \"#utility.yul\":13273:13404   */\n      tag_396\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":13265:13404   */\n      swap1\n      pop\n        /* \"#utility.yul\":12992:13411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13417:13648   */\n    tag_397:\n        /* \"#utility.yul\":13557:13591   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":13553:13554   */\n      0x00\n        /* \"#utility.yul\":13545:13551   */\n      dup3\n        /* \"#utility.yul\":13541:13555   */\n      add\n        /* \"#utility.yul\":13534:13592   */\n      mstore\n        /* \"#utility.yul\":13626:13640   */\n      0x6163746976652070726f78790000000000000000000000000000000000000000\n        /* \"#utility.yul\":13621:13623   */\n      0x20\n        /* \"#utility.yul\":13613:13619   */\n      dup3\n        /* \"#utility.yul\":13609:13624   */\n      add\n        /* \"#utility.yul\":13602:13641   */\n      mstore\n        /* \"#utility.yul\":13417:13648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13654:14020   */\n    tag_398:\n        /* \"#utility.yul\":13796:13799   */\n      0x00\n        /* \"#utility.yul\":13817:13884   */\n      tag_586\n        /* \"#utility.yul\":13881:13883   */\n      0x2c\n        /* \"#utility.yul\":13876:13879   */\n      dup4\n        /* \"#utility.yul\":13817:13884   */\n      tag_392\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":13810:13884   */\n      swap2\n      pop\n        /* \"#utility.yul\":13893:13986   */\n      tag_587\n        /* \"#utility.yul\":13982:13985   */\n      dup3\n        /* \"#utility.yul\":13893:13986   */\n      tag_397\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14011:14013   */\n      0x40\n        /* \"#utility.yul\":14006:14009   */\n      dup3\n        /* \"#utility.yul\":14002:14014   */\n      add\n        /* \"#utility.yul\":13995:14014   */\n      swap1\n      pop\n        /* \"#utility.yul\":13654:14020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14026:14445   */\n    tag_126:\n        /* \"#utility.yul\":14192:14196   */\n      0x00\n        /* \"#utility.yul\":14230:14232   */\n      0x20\n        /* \"#utility.yul\":14219:14228   */\n      dup3\n        /* \"#utility.yul\":14215:14233   */\n      add\n        /* \"#utility.yul\":14207:14233   */\n      swap1\n      pop\n        /* \"#utility.yul\":14279:14288   */\n      dup2\n        /* \"#utility.yul\":14273:14277   */\n      dup2\n        /* \"#utility.yul\":14269:14289   */\n      sub\n        /* \"#utility.yul\":14265:14266   */\n      0x00\n        /* \"#utility.yul\":14254:14263   */\n      dup4\n        /* \"#utility.yul\":14250:14267   */\n      add\n        /* \"#utility.yul\":14243:14290   */\n      mstore\n        /* \"#utility.yul\":14307:14438   */\n      tag_589\n        /* \"#utility.yul\":14433:14437   */\n      dup2\n        /* \"#utility.yul\":14307:14438   */\n      tag_398\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14299:14438   */\n      swap1\n      pop\n        /* \"#utility.yul\":14026:14445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14451:14684   */\n    tag_399:\n        /* \"#utility.yul\":14591:14625   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":14587:14588   */\n      0x00\n        /* \"#utility.yul\":14579:14585   */\n      dup3\n        /* \"#utility.yul\":14575:14589   */\n      add\n        /* \"#utility.yul\":14568:14626   */\n      mstore\n        /* \"#utility.yul\":14660:14676   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":14655:14657   */\n      0x20\n        /* \"#utility.yul\":14647:14653   */\n      dup3\n        /* \"#utility.yul\":14643:14658   */\n      add\n        /* \"#utility.yul\":14636:14677   */\n      mstore\n        /* \"#utility.yul\":14451:14684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14690:15056   */\n    tag_400:\n        /* \"#utility.yul\":14832:14835   */\n      0x00\n        /* \"#utility.yul\":14853:14920   */\n      tag_592\n        /* \"#utility.yul\":14917:14919   */\n      0x2e\n        /* \"#utility.yul\":14912:14915   */\n      dup4\n        /* \"#utility.yul\":14853:14920   */\n      tag_392\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14846:14920   */\n      swap2\n      pop\n        /* \"#utility.yul\":14929:15022   */\n      tag_593\n        /* \"#utility.yul\":15018:15021   */\n      dup3\n        /* \"#utility.yul\":14929:15022   */\n      tag_399\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":15047:15049   */\n      0x40\n        /* \"#utility.yul\":15042:15045   */\n      dup3\n        /* \"#utility.yul\":15038:15050   */\n      add\n        /* \"#utility.yul\":15031:15050   */\n      swap1\n      pop\n        /* \"#utility.yul\":14690:15056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15062:15481   */\n    tag_144:\n        /* \"#utility.yul\":15228:15232   */\n      0x00\n        /* \"#utility.yul\":15266:15268   */\n      0x20\n        /* \"#utility.yul\":15255:15264   */\n      dup3\n        /* \"#utility.yul\":15251:15269   */\n      add\n        /* \"#utility.yul\":15243:15269   */\n      swap1\n      pop\n        /* \"#utility.yul\":15315:15324   */\n      dup2\n        /* \"#utility.yul\":15309:15313   */\n      dup2\n        /* \"#utility.yul\":15305:15325   */\n      sub\n        /* \"#utility.yul\":15301:15302   */\n      0x00\n        /* \"#utility.yul\":15290:15299   */\n      dup4\n        /* \"#utility.yul\":15286:15303   */\n      add\n        /* \"#utility.yul\":15279:15326   */\n      mstore\n        /* \"#utility.yul\":15343:15474   */\n      tag_595\n        /* \"#utility.yul\":15469:15473   */\n      dup2\n        /* \"#utility.yul\":15343:15474   */\n      tag_400\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":15335:15474   */\n      swap1\n      pop\n        /* \"#utility.yul\":15062:15481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15487:15572   */\n    tag_401:\n        /* \"#utility.yul\":15532:15539   */\n      0x00\n        /* \"#utility.yul\":15561:15566   */\n      dup2\n        /* \"#utility.yul\":15550:15566   */\n      swap1\n      pop\n        /* \"#utility.yul\":15487:15572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15578:15664   */\n    tag_402:\n        /* \"#utility.yul\":15613:15620   */\n      0x00\n        /* \"#utility.yul\":15653:15657   */\n      0xff\n        /* \"#utility.yul\":15646:15651   */\n      dup3\n        /* \"#utility.yul\":15642:15658   */\n      and\n        /* \"#utility.yul\":15631:15658   */\n      swap1\n      pop\n        /* \"#utility.yul\":15578:15664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15670:15730   */\n    tag_403:\n        /* \"#utility.yul\":15698:15701   */\n      0x00\n        /* \"#utility.yul\":15719:15724   */\n      dup2\n        /* \"#utility.yul\":15712:15724   */\n      swap1\n      pop\n        /* \"#utility.yul\":15670:15730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15736:15890   */\n    tag_404:\n        /* \"#utility.yul\":15792:15801   */\n      0x00\n        /* \"#utility.yul\":15825:15884   */\n      tag_600\n        /* \"#utility.yul\":15841:15883   */\n      tag_601\n        /* \"#utility.yul\":15850:15882   */\n      tag_602\n        /* \"#utility.yul\":15876:15881   */\n      dup5\n        /* \"#utility.yul\":15850:15882   */\n      tag_401\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":15841:15883   */\n      tag_403\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":15825:15884   */\n      tag_402\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":15812:15884   */\n      swap1\n      pop\n        /* \"#utility.yul\":15736:15890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15896:16039   */\n    tag_405:\n        /* \"#utility.yul\":15989:16032   */\n      tag_604\n        /* \"#utility.yul\":16026:16031   */\n      dup2\n        /* \"#utility.yul\":15989:16032   */\n      tag_404\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15984:15987   */\n      dup3\n        /* \"#utility.yul\":15977:16033   */\n      mstore\n        /* \"#utility.yul\":15896:16039   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16045:16279   */\n    tag_151:\n        /* \"#utility.yul\":16144:16148   */\n      0x00\n        /* \"#utility.yul\":16182:16184   */\n      0x20\n        /* \"#utility.yul\":16171:16180   */\n      dup3\n        /* \"#utility.yul\":16167:16185   */\n      add\n        /* \"#utility.yul\":16159:16185   */\n      swap1\n      pop\n        /* \"#utility.yul\":16195:16272   */\n      tag_606\n        /* \"#utility.yul\":16269:16270   */\n      0x00\n        /* \"#utility.yul\":16258:16267   */\n      dup4\n        /* \"#utility.yul\":16254:16271   */\n      add\n        /* \"#utility.yul\":16245:16251   */\n      dup5\n        /* \"#utility.yul\":16195:16272   */\n      tag_405\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":16045:16279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16285:16528   */\n    tag_406:\n        /* \"#utility.yul\":16425:16459   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":16421:16422   */\n      0x00\n        /* \"#utility.yul\":16413:16419   */\n      dup3\n        /* \"#utility.yul\":16409:16423   */\n      add\n        /* \"#utility.yul\":16402:16460   */\n      mstore\n        /* \"#utility.yul\":16494:16520   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":16489:16491   */\n      0x20\n        /* \"#utility.yul\":16481:16487   */\n      dup3\n        /* \"#utility.yul\":16477:16492   */\n      add\n        /* \"#utility.yul\":16470:16521   */\n      mstore\n        /* \"#utility.yul\":16285:16528   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16534:16900   */\n    tag_407:\n        /* \"#utility.yul\":16676:16679   */\n      0x00\n        /* \"#utility.yul\":16697:16764   */\n      tag_609\n        /* \"#utility.yul\":16761:16763   */\n      0x38\n        /* \"#utility.yul\":16756:16759   */\n      dup4\n        /* \"#utility.yul\":16697:16764   */\n      tag_392\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":16690:16764   */\n      swap2\n      pop\n        /* \"#utility.yul\":16773:16866   */\n      tag_610\n        /* \"#utility.yul\":16862:16865   */\n      dup3\n        /* \"#utility.yul\":16773:16866   */\n      tag_406\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":16891:16893   */\n      0x40\n        /* \"#utility.yul\":16886:16889   */\n      dup3\n        /* \"#utility.yul\":16882:16894   */\n      add\n        /* \"#utility.yul\":16875:16894   */\n      swap1\n      pop\n        /* \"#utility.yul\":16534:16900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16906:17325   */\n    tag_164:\n        /* \"#utility.yul\":17072:17076   */\n      0x00\n        /* \"#utility.yul\":17110:17112   */\n      0x20\n        /* \"#utility.yul\":17099:17108   */\n      dup3\n        /* \"#utility.yul\":17095:17113   */\n      add\n        /* \"#utility.yul\":17087:17113   */\n      swap1\n      pop\n        /* \"#utility.yul\":17159:17168   */\n      dup2\n        /* \"#utility.yul\":17153:17157   */\n      dup2\n        /* \"#utility.yul\":17149:17169   */\n      sub\n        /* \"#utility.yul\":17145:17146   */\n      0x00\n        /* \"#utility.yul\":17134:17143   */\n      dup4\n        /* \"#utility.yul\":17130:17147   */\n      add\n        /* \"#utility.yul\":17123:17170   */\n      mstore\n        /* \"#utility.yul\":17187:17318   */\n      tag_612\n        /* \"#utility.yul\":17313:17317   */\n      dup2\n        /* \"#utility.yul\":17187:17318   */\n      tag_407\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":17179:17318   */\n      swap1\n      pop\n        /* \"#utility.yul\":16906:17325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17331:17511   */\n    tag_175:\n        /* \"#utility.yul\":17379:17456   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17376:17377   */\n      0x00\n        /* \"#utility.yul\":17369:17457   */\n      mstore\n        /* \"#utility.yul\":17476:17480   */\n      0x32\n        /* \"#utility.yul\":17473:17474   */\n      0x04\n        /* \"#utility.yul\":17466:17481   */\n      mstore\n        /* \"#utility.yul\":17500:17504   */\n      0x24\n        /* \"#utility.yul\":17497:17498   */\n      0x00\n        /* \"#utility.yul\":17490:17505   */\n      revert\n        /* \"#utility.yul\":17517:17692   */\n    tag_408:\n        /* \"#utility.yul\":17657:17684   */\n      0x596f7520646f6e2774206861766520616e792072657761726400000000000000\n        /* \"#utility.yul\":17653:17654   */\n      0x00\n        /* \"#utility.yul\":17645:17651   */\n      dup3\n        /* \"#utility.yul\":17641:17655   */\n      add\n        /* \"#utility.yul\":17634:17685   */\n      mstore\n        /* \"#utility.yul\":17517:17692   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17698:18064   */\n    tag_409:\n        /* \"#utility.yul\":17840:17843   */\n      0x00\n        /* \"#utility.yul\":17861:17928   */\n      tag_616\n        /* \"#utility.yul\":17925:17927   */\n      0x19\n        /* \"#utility.yul\":17920:17923   */\n      dup4\n        /* \"#utility.yul\":17861:17928   */\n      tag_392\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":17854:17928   */\n      swap2\n      pop\n        /* \"#utility.yul\":17937:18030   */\n      tag_617\n        /* \"#utility.yul\":18026:18029   */\n      dup3\n        /* \"#utility.yul\":17937:18030   */\n      tag_408\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":18055:18057   */\n      0x20\n        /* \"#utility.yul\":18050:18053   */\n      dup3\n        /* \"#utility.yul\":18046:18058   */\n      add\n        /* \"#utility.yul\":18039:18058   */\n      swap1\n      pop\n        /* \"#utility.yul\":17698:18064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18070:18489   */\n    tag_182:\n        /* \"#utility.yul\":18236:18240   */\n      0x00\n        /* \"#utility.yul\":18274:18276   */\n      0x20\n        /* \"#utility.yul\":18263:18272   */\n      dup3\n        /* \"#utility.yul\":18259:18277   */\n      add\n        /* \"#utility.yul\":18251:18277   */\n      swap1\n      pop\n        /* \"#utility.yul\":18323:18332   */\n      dup2\n        /* \"#utility.yul\":18317:18321   */\n      dup2\n        /* \"#utility.yul\":18313:18333   */\n      sub\n        /* \"#utility.yul\":18309:18310   */\n      0x00\n        /* \"#utility.yul\":18298:18307   */\n      dup4\n        /* \"#utility.yul\":18294:18311   */\n      add\n        /* \"#utility.yul\":18287:18334   */\n      mstore\n        /* \"#utility.yul\":18351:18482   */\n      tag_619\n        /* \"#utility.yul\":18477:18481   */\n      dup2\n        /* \"#utility.yul\":18351:18482   */\n      tag_409\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18343:18482   */\n      swap1\n      pop\n        /* \"#utility.yul\":18070:18489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18495:18613   */\n    tag_410:\n        /* \"#utility.yul\":18582:18606   */\n      tag_621\n        /* \"#utility.yul\":18600:18605   */\n      dup2\n        /* \"#utility.yul\":18582:18606   */\n      tag_372\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18577:18580   */\n      dup3\n        /* \"#utility.yul\":18570:18607   */\n      mstore\n        /* \"#utility.yul\":18495:18613   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18619:18841   */\n    tag_184:\n        /* \"#utility.yul\":18712:18716   */\n      0x00\n        /* \"#utility.yul\":18750:18752   */\n      0x20\n        /* \"#utility.yul\":18739:18748   */\n      dup3\n        /* \"#utility.yul\":18735:18753   */\n      add\n        /* \"#utility.yul\":18727:18753   */\n      swap1\n      pop\n        /* \"#utility.yul\":18763:18834   */\n      tag_623\n        /* \"#utility.yul\":18831:18832   */\n      0x00\n        /* \"#utility.yul\":18820:18829   */\n      dup4\n        /* \"#utility.yul\":18816:18833   */\n      add\n        /* \"#utility.yul\":18807:18813   */\n      dup5\n        /* \"#utility.yul\":18763:18834   */\n      tag_410\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":18619:18841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18847:18969   */\n    tag_411:\n        /* \"#utility.yul\":18920:18944   */\n      tag_625\n        /* \"#utility.yul\":18938:18943   */\n      dup2\n        /* \"#utility.yul\":18920:18944   */\n      tag_388\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":18913:18918   */\n      dup2\n        /* \"#utility.yul\":18910:18945   */\n      eq\n        /* \"#utility.yul\":18900:18963   */\n      tag_626\n      jumpi\n        /* \"#utility.yul\":18959:18960   */\n      0x00\n        /* \"#utility.yul\":18956:18957   */\n      dup1\n        /* \"#utility.yul\":18949:18961   */\n      revert\n        /* \"#utility.yul\":18900:18963   */\n    tag_626:\n        /* \"#utility.yul\":18847:18969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18975:19118   */\n    tag_412:\n        /* \"#utility.yul\":19032:19037   */\n      0x00\n        /* \"#utility.yul\":19063:19069   */\n      dup2\n        /* \"#utility.yul\":19057:19070   */\n      mload\n        /* \"#utility.yul\":19048:19070   */\n      swap1\n      pop\n        /* \"#utility.yul\":19079:19112   */\n      tag_628\n        /* \"#utility.yul\":19106:19111   */\n      dup2\n        /* \"#utility.yul\":19079:19112   */\n      tag_411\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":18975:19118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19124:19475   */\n    tag_188:\n        /* \"#utility.yul\":19194:19200   */\n      0x00\n        /* \"#utility.yul\":19243:19245   */\n      0x20\n        /* \"#utility.yul\":19231:19240   */\n      dup3\n        /* \"#utility.yul\":19222:19229   */\n      dup5\n        /* \"#utility.yul\":19218:19241   */\n      sub\n        /* \"#utility.yul\":19214:19246   */\n      slt\n        /* \"#utility.yul\":19211:19330   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":19249:19328   */\n      tag_631\n      tag_360\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":19211:19330   */\n    tag_630:\n        /* \"#utility.yul\":19369:19370   */\n      0x00\n        /* \"#utility.yul\":19394:19458   */\n      tag_632\n        /* \"#utility.yul\":19450:19457   */\n      dup5\n        /* \"#utility.yul\":19441:19447   */\n      dup3\n        /* \"#utility.yul\":19430:19439   */\n      dup6\n        /* \"#utility.yul\":19426:19448   */\n      add\n        /* \"#utility.yul\":19394:19458   */\n      tag_412\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":19384:19458   */\n      swap2\n      pop\n        /* \"#utility.yul\":19340:19468   */\n      pop\n        /* \"#utility.yul\":19124:19475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19481:19701   */\n    tag_413:\n        /* \"#utility.yul\":19621:19655   */\n      0x596f752063616e27742077697468647261772061742074686973206d6f6d656e\n        /* \"#utility.yul\":19617:19618   */\n      0x00\n        /* \"#utility.yul\":19609:19615   */\n      dup3\n        /* \"#utility.yul\":19605:19619   */\n      add\n        /* \"#utility.yul\":19598:19656   */\n      mstore\n        /* \"#utility.yul\":19690:19693   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19685:19687   */\n      0x20\n        /* \"#utility.yul\":19677:19683   */\n      dup3\n        /* \"#utility.yul\":19673:19688   */\n      add\n        /* \"#utility.yul\":19666:19694   */\n      mstore\n        /* \"#utility.yul\":19481:19701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19707:20073   */\n    tag_414:\n        /* \"#utility.yul\":19849:19852   */\n      0x00\n        /* \"#utility.yul\":19870:19937   */\n      tag_635\n        /* \"#utility.yul\":19934:19936   */\n      0x21\n        /* \"#utility.yul\":19929:19932   */\n      dup4\n        /* \"#utility.yul\":19870:19937   */\n      tag_392\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":19863:19937   */\n      swap2\n      pop\n        /* \"#utility.yul\":19946:20039   */\n      tag_636\n        /* \"#utility.yul\":20035:20038   */\n      dup3\n        /* \"#utility.yul\":19946:20039   */\n      tag_413\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":20064:20066   */\n      0x40\n        /* \"#utility.yul\":20059:20062   */\n      dup3\n        /* \"#utility.yul\":20055:20067   */\n      add\n        /* \"#utility.yul\":20048:20067   */\n      swap1\n      pop\n        /* \"#utility.yul\":19707:20073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20079:20498   */\n    tag_191:\n        /* \"#utility.yul\":20245:20249   */\n      0x00\n        /* \"#utility.yul\":20283:20285   */\n      0x20\n        /* \"#utility.yul\":20272:20281   */\n      dup3\n        /* \"#utility.yul\":20268:20286   */\n      add\n        /* \"#utility.yul\":20260:20286   */\n      swap1\n      pop\n        /* \"#utility.yul\":20332:20341   */\n      dup2\n        /* \"#utility.yul\":20326:20330   */\n      dup2\n        /* \"#utility.yul\":20322:20342   */\n      sub\n        /* \"#utility.yul\":20318:20319   */\n      0x00\n        /* \"#utility.yul\":20307:20316   */\n      dup4\n        /* \"#utility.yul\":20303:20320   */\n      add\n        /* \"#utility.yul\":20296:20343   */\n      mstore\n        /* \"#utility.yul\":20360:20491   */\n      tag_638\n        /* \"#utility.yul\":20486:20490   */\n      dup2\n        /* \"#utility.yul\":20360:20491   */\n      tag_414\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":20352:20491   */\n      swap1\n      pop\n        /* \"#utility.yul\":20079:20498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20504:20836   */\n    tag_193:\n        /* \"#utility.yul\":20625:20629   */\n      0x00\n        /* \"#utility.yul\":20663:20665   */\n      0x40\n        /* \"#utility.yul\":20652:20661   */\n      dup3\n        /* \"#utility.yul\":20648:20666   */\n      add\n        /* \"#utility.yul\":20640:20666   */\n      swap1\n      pop\n        /* \"#utility.yul\":20676:20747   */\n      tag_640\n        /* \"#utility.yul\":20744:20745   */\n      0x00\n        /* \"#utility.yul\":20733:20742   */\n      dup4\n        /* \"#utility.yul\":20729:20746   */\n      add\n        /* \"#utility.yul\":20720:20726   */\n      dup6\n        /* \"#utility.yul\":20676:20747   */\n      tag_410\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":20757:20829   */\n      tag_641\n        /* \"#utility.yul\":20825:20827   */\n      0x20\n        /* \"#utility.yul\":20814:20823   */\n      dup4\n        /* \"#utility.yul\":20810:20828   */\n      add\n        /* \"#utility.yul\":20801:20807   */\n      dup5\n        /* \"#utility.yul\":20757:20829   */\n      tag_389\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":20504:20836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20842:20958   */\n    tag_415:\n        /* \"#utility.yul\":20912:20933   */\n      tag_643\n        /* \"#utility.yul\":20927:20932   */\n      dup2\n        /* \"#utility.yul\":20912:20933   */\n      tag_365\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":20905:20910   */\n      dup2\n        /* \"#utility.yul\":20902:20934   */\n      eq\n        /* \"#utility.yul\":20892:20952   */\n      tag_644\n      jumpi\n        /* \"#utility.yul\":20948:20949   */\n      0x00\n        /* \"#utility.yul\":20945:20946   */\n      dup1\n        /* \"#utility.yul\":20938:20950   */\n      revert\n        /* \"#utility.yul\":20892:20952   */\n    tag_644:\n        /* \"#utility.yul\":20842:20958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20964:21101   */\n    tag_416:\n        /* \"#utility.yul\":21018:21023   */\n      0x00\n        /* \"#utility.yul\":21049:21055   */\n      dup2\n        /* \"#utility.yul\":21043:21056   */\n      mload\n        /* \"#utility.yul\":21034:21056   */\n      swap1\n      pop\n        /* \"#utility.yul\":21065:21095   */\n      tag_646\n        /* \"#utility.yul\":21089:21094   */\n      dup2\n        /* \"#utility.yul\":21065:21095   */\n      tag_415\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":20964:21101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21107:21452   */\n    tag_197:\n        /* \"#utility.yul\":21174:21180   */\n      0x00\n        /* \"#utility.yul\":21223:21225   */\n      0x20\n        /* \"#utility.yul\":21211:21220   */\n      dup3\n        /* \"#utility.yul\":21202:21209   */\n      dup5\n        /* \"#utility.yul\":21198:21221   */\n      sub\n        /* \"#utility.yul\":21194:21226   */\n      slt\n        /* \"#utility.yul\":21191:21310   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":21229:21308   */\n      tag_649\n      tag_360\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":21191:21310   */\n    tag_648:\n        /* \"#utility.yul\":21349:21350   */\n      0x00\n        /* \"#utility.yul\":21374:21435   */\n      tag_650\n        /* \"#utility.yul\":21427:21434   */\n      dup5\n        /* \"#utility.yul\":21418:21424   */\n      dup3\n        /* \"#utility.yul\":21407:21416   */\n      dup6\n        /* \"#utility.yul\":21403:21425   */\n      add\n        /* \"#utility.yul\":21374:21435   */\n      tag_416\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":21364:21435   */\n      swap2\n      pop\n        /* \"#utility.yul\":21320:21445   */\n      pop\n        /* \"#utility.yul\":21107:21452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21458:21638   */\n    tag_417:\n        /* \"#utility.yul\":21506:21583   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21503:21504   */\n      0x00\n        /* \"#utility.yul\":21496:21584   */\n      mstore\n        /* \"#utility.yul\":21603:21607   */\n      0x11\n        /* \"#utility.yul\":21600:21601   */\n      0x04\n        /* \"#utility.yul\":21593:21608   */\n      mstore\n        /* \"#utility.yul\":21627:21631   */\n      0x24\n        /* \"#utility.yul\":21624:21625   */\n      0x00\n        /* \"#utility.yul\":21617:21632   */\n      revert\n        /* \"#utility.yul\":21644:21835   */\n    tag_219:\n        /* \"#utility.yul\":21684:21687   */\n      0x00\n        /* \"#utility.yul\":21703:21723   */\n      tag_653\n        /* \"#utility.yul\":21721:21722   */\n      dup3\n        /* \"#utility.yul\":21703:21723   */\n      tag_388\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":21698:21723   */\n      swap2\n      pop\n        /* \"#utility.yul\":21737:21757   */\n      tag_654\n        /* \"#utility.yul\":21755:21756   */\n      dup4\n        /* \"#utility.yul\":21737:21757   */\n      tag_388\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":21732:21757   */\n      swap3\n      pop\n        /* \"#utility.yul\":21780:21781   */\n      dup3\n        /* \"#utility.yul\":21777:21778   */\n      dup3\n        /* \"#utility.yul\":21773:21782   */\n      add\n        /* \"#utility.yul\":21766:21782   */\n      swap1\n      pop\n        /* \"#utility.yul\":21801:21804   */\n      dup1\n        /* \"#utility.yul\":21798:21799   */\n      dup3\n        /* \"#utility.yul\":21795:21805   */\n      gt\n        /* \"#utility.yul\":21792:21828   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":21808:21826   */\n      tag_656\n      tag_417\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":21792:21828   */\n    tag_655:\n        /* \"#utility.yul\":21644:21835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21841:21984   */\n    tag_418:\n        /* \"#utility.yul\":21898:21903   */\n      0x00\n        /* \"#utility.yul\":21929:21935   */\n      dup2\n        /* \"#utility.yul\":21923:21936   */\n      mload\n        /* \"#utility.yul\":21914:21936   */\n      swap1\n      pop\n        /* \"#utility.yul\":21945:21978   */\n      tag_658\n        /* \"#utility.yul\":21972:21977   */\n      dup2\n        /* \"#utility.yul\":21945:21978   */\n      tag_368\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":21841:21984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21990:22341   */\n    tag_249:\n        /* \"#utility.yul\":22060:22066   */\n      0x00\n        /* \"#utility.yul\":22109:22111   */\n      0x20\n        /* \"#utility.yul\":22097:22106   */\n      dup3\n        /* \"#utility.yul\":22088:22095   */\n      dup5\n        /* \"#utility.yul\":22084:22107   */\n      sub\n        /* \"#utility.yul\":22080:22112   */\n      slt\n        /* \"#utility.yul\":22077:22196   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":22115:22194   */\n      tag_661\n      tag_360\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":22077:22196   */\n    tag_660:\n        /* \"#utility.yul\":22235:22236   */\n      0x00\n        /* \"#utility.yul\":22260:22324   */\n      tag_662\n        /* \"#utility.yul\":22316:22323   */\n      dup5\n        /* \"#utility.yul\":22307:22313   */\n      dup3\n        /* \"#utility.yul\":22296:22305   */\n      dup6\n        /* \"#utility.yul\":22292:22314   */\n      add\n        /* \"#utility.yul\":22260:22324   */\n      tag_418\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":22250:22324   */\n      swap2\n      pop\n        /* \"#utility.yul\":22206:22334   */\n      pop\n        /* \"#utility.yul\":21990:22341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22347:22580   */\n    tag_419:\n        /* \"#utility.yul\":22487:22521   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":22483:22484   */\n      0x00\n        /* \"#utility.yul\":22475:22481   */\n      dup3\n        /* \"#utility.yul\":22471:22485   */\n      add\n        /* \"#utility.yul\":22464:22522   */\n      mstore\n        /* \"#utility.yul\":22556:22572   */\n      0x6f6e206973206e6f742055555053000000000000000000000000000000000000\n        /* \"#utility.yul\":22551:22553   */\n      0x20\n        /* \"#utility.yul\":22543:22549   */\n      dup3\n        /* \"#utility.yul\":22539:22554   */\n      add\n        /* \"#utility.yul\":22532:22573   */\n      mstore\n        /* \"#utility.yul\":22347:22580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22586:22952   */\n    tag_420:\n        /* \"#utility.yul\":22728:22731   */\n      0x00\n        /* \"#utility.yul\":22749:22816   */\n      tag_665\n        /* \"#utility.yul\":22813:22815   */\n      0x2e\n        /* \"#utility.yul\":22808:22811   */\n      dup4\n        /* \"#utility.yul\":22749:22816   */\n      tag_392\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":22742:22816   */\n      swap2\n      pop\n        /* \"#utility.yul\":22825:22918   */\n      tag_666\n        /* \"#utility.yul\":22914:22917   */\n      dup3\n        /* \"#utility.yul\":22825:22918   */\n      tag_419\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":22943:22945   */\n      0x40\n        /* \"#utility.yul\":22938:22941   */\n      dup3\n        /* \"#utility.yul\":22934:22946   */\n      add\n        /* \"#utility.yul\":22927:22946   */\n      swap1\n      pop\n        /* \"#utility.yul\":22586:22952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22958:23377   */\n    tag_255:\n        /* \"#utility.yul\":23124:23128   */\n      0x00\n        /* \"#utility.yul\":23162:23164   */\n      0x20\n        /* \"#utility.yul\":23151:23160   */\n      dup3\n        /* \"#utility.yul\":23147:23165   */\n      add\n        /* \"#utility.yul\":23139:23165   */\n      swap1\n      pop\n        /* \"#utility.yul\":23211:23220   */\n      dup2\n        /* \"#utility.yul\":23205:23209   */\n      dup2\n        /* \"#utility.yul\":23201:23221   */\n      sub\n        /* \"#utility.yul\":23197:23198   */\n      0x00\n        /* \"#utility.yul\":23186:23195   */\n      dup4\n        /* \"#utility.yul\":23182:23199   */\n      add\n        /* \"#utility.yul\":23175:23222   */\n      mstore\n        /* \"#utility.yul\":23239:23370   */\n      tag_668\n        /* \"#utility.yul\":23365:23369   */\n      dup2\n        /* \"#utility.yul\":23239:23370   */\n      tag_420\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":23231:23370   */\n      swap1\n      pop\n        /* \"#utility.yul\":22958:23377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23383:23611   */\n    tag_421:\n        /* \"#utility.yul\":23523:23557   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":23519:23520   */\n      0x00\n        /* \"#utility.yul\":23511:23517   */\n      dup3\n        /* \"#utility.yul\":23507:23521   */\n      add\n        /* \"#utility.yul\":23500:23558   */\n      mstore\n        /* \"#utility.yul\":23592:23603   */\n      0x6961626c65555549440000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23587:23589   */\n      0x20\n        /* \"#utility.yul\":23579:23585   */\n      dup3\n        /* \"#utility.yul\":23575:23590   */\n      add\n        /* \"#utility.yul\":23568:23604   */\n      mstore\n        /* \"#utility.yul\":23383:23611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23617:23983   */\n    tag_422:\n        /* \"#utility.yul\":23759:23762   */\n      0x00\n        /* \"#utility.yul\":23780:23847   */\n      tag_671\n        /* \"#utility.yul\":23844:23846   */\n      0x29\n        /* \"#utility.yul\":23839:23842   */\n      dup4\n        /* \"#utility.yul\":23780:23847   */\n      tag_392\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":23773:23847   */\n      swap2\n      pop\n        /* \"#utility.yul\":23856:23949   */\n      tag_672\n        /* \"#utility.yul\":23945:23948   */\n      dup3\n        /* \"#utility.yul\":23856:23949   */\n      tag_421\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":23974:23976   */\n      0x40\n        /* \"#utility.yul\":23969:23972   */\n      dup3\n        /* \"#utility.yul\":23965:23977   */\n      add\n        /* \"#utility.yul\":23958:23977   */\n      swap1\n      pop\n        /* \"#utility.yul\":23617:23983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23989:24408   */\n    tag_259:\n        /* \"#utility.yul\":24155:24159   */\n      0x00\n        /* \"#utility.yul\":24193:24195   */\n      0x20\n        /* \"#utility.yul\":24182:24191   */\n      dup3\n        /* \"#utility.yul\":24178:24196   */\n      add\n        /* \"#utility.yul\":24170:24196   */\n      swap1\n      pop\n        /* \"#utility.yul\":24242:24251   */\n      dup2\n        /* \"#utility.yul\":24236:24240   */\n      dup2\n        /* \"#utility.yul\":24232:24252   */\n      sub\n        /* \"#utility.yul\":24228:24229   */\n      0x00\n        /* \"#utility.yul\":24217:24226   */\n      dup4\n        /* \"#utility.yul\":24213:24230   */\n      add\n        /* \"#utility.yul\":24206:24253   */\n      mstore\n        /* \"#utility.yul\":24270:24401   */\n      tag_674\n        /* \"#utility.yul\":24396:24400   */\n      dup2\n        /* \"#utility.yul\":24270:24401   */\n      tag_422\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":24262:24401   */\n      swap1\n      pop\n        /* \"#utility.yul\":23989:24408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24414:24562   */\n    tag_423:\n        /* \"#utility.yul\":24516:24527   */\n      0x00\n        /* \"#utility.yul\":24553:24556   */\n      dup2\n        /* \"#utility.yul\":24538:24556   */\n      swap1\n      pop\n        /* \"#utility.yul\":24414:24562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24568:24741   */\n    tag_424:\n        /* \"#utility.yul\":24708:24733   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":24704:24705   */\n      0x00\n        /* \"#utility.yul\":24696:24702   */\n      dup3\n        /* \"#utility.yul\":24692:24706   */\n      add\n        /* \"#utility.yul\":24685:24734   */\n      mstore\n        /* \"#utility.yul\":24568:24741   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24747:25149   */\n    tag_425:\n        /* \"#utility.yul\":24907:24910   */\n      0x00\n        /* \"#utility.yul\":24928:25013   */\n      tag_678\n        /* \"#utility.yul\":25010:25012   */\n      0x17\n        /* \"#utility.yul\":25005:25008   */\n      dup4\n        /* \"#utility.yul\":24928:25013   */\n      tag_423\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":24921:25013   */\n      swap2\n      pop\n        /* \"#utility.yul\":25022:25115   */\n      tag_679\n        /* \"#utility.yul\":25111:25114   */\n      dup3\n        /* \"#utility.yul\":25022:25115   */\n      tag_424\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":25140:25142   */\n      0x17\n        /* \"#utility.yul\":25135:25138   */\n      dup3\n        /* \"#utility.yul\":25131:25143   */\n      add\n        /* \"#utility.yul\":25124:25143   */\n      swap1\n      pop\n        /* \"#utility.yul\":24747:25149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25155:25254   */\n    tag_426:\n        /* \"#utility.yul\":25207:25213   */\n      0x00\n        /* \"#utility.yul\":25241:25246   */\n      dup2\n        /* \"#utility.yul\":25235:25247   */\n      mload\n        /* \"#utility.yul\":25225:25247   */\n      swap1\n      pop\n        /* \"#utility.yul\":25155:25254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25260:25399   */\n    tag_427:\n        /* \"#utility.yul\":25349:25355   */\n      dup3\n        /* \"#utility.yul\":25344:25347   */\n      dup2\n        /* \"#utility.yul\":25339:25342   */\n      dup4\n        /* \"#utility.yul\":25333:25356   */\n      mcopy\n        /* \"#utility.yul\":25390:25391   */\n      0x00\n        /* \"#utility.yul\":25381:25387   */\n      dup4\n        /* \"#utility.yul\":25376:25379   */\n      dup4\n        /* \"#utility.yul\":25372:25388   */\n      add\n        /* \"#utility.yul\":25365:25392   */\n      mstore\n        /* \"#utility.yul\":25260:25399   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25405:25795   */\n    tag_428:\n        /* \"#utility.yul\":25511:25514   */\n      0x00\n        /* \"#utility.yul\":25539:25578   */\n      tag_683\n        /* \"#utility.yul\":25572:25577   */\n      dup3\n        /* \"#utility.yul\":25539:25578   */\n      tag_426\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":25594:25683   */\n      tag_684\n        /* \"#utility.yul\":25676:25682   */\n      dup2\n        /* \"#utility.yul\":25671:25674   */\n      dup6\n        /* \"#utility.yul\":25594:25683   */\n      tag_423\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":25587:25683   */\n      swap4\n      pop\n        /* \"#utility.yul\":25692:25757   */\n      tag_685\n        /* \"#utility.yul\":25750:25756   */\n      dup2\n        /* \"#utility.yul\":25745:25748   */\n      dup6\n        /* \"#utility.yul\":25738:25742   */\n      0x20\n        /* \"#utility.yul\":25731:25736   */\n      dup7\n        /* \"#utility.yul\":25727:25743   */\n      add\n        /* \"#utility.yul\":25692:25757   */\n      tag_427\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":25782:25788   */\n      dup1\n        /* \"#utility.yul\":25777:25780   */\n      dup5\n        /* \"#utility.yul\":25773:25789   */\n      add\n        /* \"#utility.yul\":25766:25789   */\n      swap2\n      pop\n        /* \"#utility.yul\":25515:25795   */\n      pop\n        /* \"#utility.yul\":25405:25795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25801:25968   */\n    tag_429:\n        /* \"#utility.yul\":25941:25960   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":25937:25938   */\n      0x00\n        /* \"#utility.yul\":25929:25935   */\n      dup3\n        /* \"#utility.yul\":25925:25939   */\n      add\n        /* \"#utility.yul\":25918:25961   */\n      mstore\n        /* \"#utility.yul\":25801:25968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25974:26376   */\n    tag_430:\n        /* \"#utility.yul\":26134:26137   */\n      0x00\n        /* \"#utility.yul\":26155:26240   */\n      tag_688\n        /* \"#utility.yul\":26237:26239   */\n      0x11\n        /* \"#utility.yul\":26232:26235   */\n      dup4\n        /* \"#utility.yul\":26155:26240   */\n      tag_423\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":26148:26240   */\n      swap2\n      pop\n        /* \"#utility.yul\":26249:26342   */\n      tag_689\n        /* \"#utility.yul\":26338:26341   */\n      dup3\n        /* \"#utility.yul\":26249:26342   */\n      tag_429\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":26367:26369   */\n      0x11\n        /* \"#utility.yul\":26362:26365   */\n      dup3\n        /* \"#utility.yul\":26358:26370   */\n      add\n        /* \"#utility.yul\":26351:26370   */\n      swap1\n      pop\n        /* \"#utility.yul\":25974:26376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26382:27349   */\n    tag_287:\n        /* \"#utility.yul\":26764:26767   */\n      0x00\n        /* \"#utility.yul\":26786:26934   */\n      tag_691\n        /* \"#utility.yul\":26930:26933   */\n      dup3\n        /* \"#utility.yul\":26786:26934   */\n      tag_425\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":26779:26934   */\n      swap2\n      pop\n        /* \"#utility.yul\":26951:27046   */\n      tag_692\n        /* \"#utility.yul\":27042:27045   */\n      dup3\n        /* \"#utility.yul\":27033:27039   */\n      dup6\n        /* \"#utility.yul\":26951:27046   */\n      tag_428\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":26944:27046   */\n      swap2\n      pop\n        /* \"#utility.yul\":27063:27211   */\n      tag_693\n        /* \"#utility.yul\":27207:27210   */\n      dup3\n        /* \"#utility.yul\":27063:27211   */\n      tag_430\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":27056:27211   */\n      swap2\n      pop\n        /* \"#utility.yul\":27228:27323   */\n      tag_694\n        /* \"#utility.yul\":27319:27322   */\n      dup3\n        /* \"#utility.yul\":27310:27316   */\n      dup5\n        /* \"#utility.yul\":27228:27323   */\n      tag_428\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":27221:27323   */\n      swap2\n      pop\n        /* \"#utility.yul\":27340:27343   */\n      dup2\n        /* \"#utility.yul\":27333:27343   */\n      swap1\n      pop\n        /* \"#utility.yul\":26382:27349   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27355:27732   */\n    tag_431:\n        /* \"#utility.yul\":27443:27446   */\n      0x00\n        /* \"#utility.yul\":27471:27510   */\n      tag_696\n        /* \"#utility.yul\":27504:27509   */\n      dup3\n        /* \"#utility.yul\":27471:27510   */\n      tag_426\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":27526:27597   */\n      tag_697\n        /* \"#utility.yul\":27590:27596   */\n      dup2\n        /* \"#utility.yul\":27585:27588   */\n      dup6\n        /* \"#utility.yul\":27526:27597   */\n      tag_392\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":27519:27597   */\n      swap4\n      pop\n        /* \"#utility.yul\":27606:27671   */\n      tag_698\n        /* \"#utility.yul\":27664:27670   */\n      dup2\n        /* \"#utility.yul\":27659:27662   */\n      dup6\n        /* \"#utility.yul\":27652:27656   */\n      0x20\n        /* \"#utility.yul\":27645:27650   */\n      dup7\n        /* \"#utility.yul\":27641:27657   */\n      add\n        /* \"#utility.yul\":27606:27671   */\n      tag_427\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":27696:27725   */\n      tag_699\n        /* \"#utility.yul\":27718:27724   */\n      dup2\n        /* \"#utility.yul\":27696:27725   */\n      tag_377\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":27691:27694   */\n      dup5\n        /* \"#utility.yul\":27687:27726   */\n      add\n        /* \"#utility.yul\":27680:27726   */\n      swap2\n      pop\n        /* \"#utility.yul\":27447:27732   */\n      pop\n        /* \"#utility.yul\":27355:27732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27738:28051   */\n    tag_289:\n        /* \"#utility.yul\":27851:27855   */\n      0x00\n        /* \"#utility.yul\":27889:27891   */\n      0x20\n        /* \"#utility.yul\":27878:27887   */\n      dup3\n        /* \"#utility.yul\":27874:27892   */\n      add\n        /* \"#utility.yul\":27866:27892   */\n      swap1\n      pop\n        /* \"#utility.yul\":27938:27947   */\n      dup2\n        /* \"#utility.yul\":27932:27936   */\n      dup2\n        /* \"#utility.yul\":27928:27948   */\n      sub\n        /* \"#utility.yul\":27924:27925   */\n      0x00\n        /* \"#utility.yul\":27913:27922   */\n      dup4\n        /* \"#utility.yul\":27909:27926   */\n      add\n        /* \"#utility.yul\":27902:27949   */\n      mstore\n        /* \"#utility.yul\":27966:28044   */\n      tag_701\n        /* \"#utility.yul\":28039:28043   */\n      dup2\n        /* \"#utility.yul\":28030:28036   */\n      dup5\n        /* \"#utility.yul\":27966:28044   */\n      tag_431\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":27958:28044   */\n      swap1\n      pop\n        /* \"#utility.yul\":27738:28051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28057:28289   */\n    tag_432:\n        /* \"#utility.yul\":28197:28231   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":28193:28194   */\n      0x00\n        /* \"#utility.yul\":28185:28191   */\n      dup3\n        /* \"#utility.yul\":28181:28195   */\n      add\n        /* \"#utility.yul\":28174:28232   */\n      mstore\n        /* \"#utility.yul\":28266:28281   */\n      0x6f74206120636f6e747261637400000000000000000000000000000000000000\n        /* \"#utility.yul\":28261:28263   */\n      0x20\n        /* \"#utility.yul\":28253:28259   */\n      dup3\n        /* \"#utility.yul\":28249:28264   */\n      add\n        /* \"#utility.yul\":28242:28282   */\n      mstore\n        /* \"#utility.yul\":28057:28289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28295:28661   */\n    tag_433:\n        /* \"#utility.yul\":28437:28440   */\n      0x00\n        /* \"#utility.yul\":28458:28525   */\n      tag_704\n        /* \"#utility.yul\":28522:28524   */\n      0x2d\n        /* \"#utility.yul\":28517:28520   */\n      dup4\n        /* \"#utility.yul\":28458:28525   */\n      tag_392\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":28451:28525   */\n      swap2\n      pop\n        /* \"#utility.yul\":28534:28627   */\n      tag_705\n        /* \"#utility.yul\":28623:28626   */\n      dup3\n        /* \"#utility.yul\":28534:28627   */\n      tag_432\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":28652:28654   */\n      0x40\n        /* \"#utility.yul\":28647:28650   */\n      dup3\n        /* \"#utility.yul\":28643:28655   */\n      add\n        /* \"#utility.yul\":28636:28655   */\n      swap1\n      pop\n        /* \"#utility.yul\":28295:28661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28667:29086   */\n    tag_296:\n        /* \"#utility.yul\":28833:28837   */\n      0x00\n        /* \"#utility.yul\":28871:28873   */\n      0x20\n        /* \"#utility.yul\":28860:28869   */\n      dup3\n        /* \"#utility.yul\":28856:28874   */\n      add\n        /* \"#utility.yul\":28848:28874   */\n      swap1\n      pop\n        /* \"#utility.yul\":28920:28929   */\n      dup2\n        /* \"#utility.yul\":28914:28918   */\n      dup2\n        /* \"#utility.yul\":28910:28930   */\n      sub\n        /* \"#utility.yul\":28906:28907   */\n      0x00\n        /* \"#utility.yul\":28895:28904   */\n      dup4\n        /* \"#utility.yul\":28891:28908   */\n      add\n        /* \"#utility.yul\":28884:28931   */\n      mstore\n        /* \"#utility.yul\":28948:29079   */\n      tag_707\n        /* \"#utility.yul\":29074:29078   */\n      dup2\n        /* \"#utility.yul\":28948:29079   */\n      tag_433\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":28940:29079   */\n      swap1\n      pop\n        /* \"#utility.yul\":28667:29086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29092:29502   */\n    tag_309:\n        /* \"#utility.yul\":29132:29139   */\n      0x00\n        /* \"#utility.yul\":29155:29175   */\n      tag_709\n        /* \"#utility.yul\":29173:29174   */\n      dup3\n        /* \"#utility.yul\":29155:29175   */\n      tag_388\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":29150:29175   */\n      swap2\n      pop\n        /* \"#utility.yul\":29189:29209   */\n      tag_710\n        /* \"#utility.yul\":29207:29208   */\n      dup4\n        /* \"#utility.yul\":29189:29209   */\n      tag_388\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":29184:29209   */\n      swap3\n      pop\n        /* \"#utility.yul\":29244:29245   */\n      dup3\n        /* \"#utility.yul\":29241:29242   */\n      dup3\n        /* \"#utility.yul\":29237:29246   */\n      mul\n        /* \"#utility.yul\":29266:29296   */\n      tag_711\n        /* \"#utility.yul\":29284:29295   */\n      dup2\n        /* \"#utility.yul\":29266:29296   */\n      tag_388\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":29255:29296   */\n      swap2\n      pop\n        /* \"#utility.yul\":29445:29446   */\n      dup3\n        /* \"#utility.yul\":29436:29443   */\n      dup3\n        /* \"#utility.yul\":29432:29447   */\n      div\n        /* \"#utility.yul\":29429:29430   */\n      dup5\n        /* \"#utility.yul\":29426:29448   */\n      eq\n        /* \"#utility.yul\":29406:29407   */\n      dup4\n        /* \"#utility.yul\":29399:29408   */\n      iszero\n        /* \"#utility.yul\":29379:29462   */\n      or\n        /* \"#utility.yul\":29356:29495   */\n      tag_712\n      jumpi\n        /* \"#utility.yul\":29475:29493   */\n      tag_713\n      tag_417\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":29356:29495   */\n    tag_712:\n        /* \"#utility.yul\":29140:29502   */\n      pop\n        /* \"#utility.yul\":29092:29502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29508:29679   */\n    tag_328:\n        /* \"#utility.yul\":29547:29550   */\n      0x00\n        /* \"#utility.yul\":29570:29594   */\n      tag_715\n        /* \"#utility.yul\":29588:29593   */\n      dup3\n        /* \"#utility.yul\":29570:29594   */\n      tag_388\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":29561:29594   */\n      swap2\n      pop\n        /* \"#utility.yul\":29616:29620   */\n      0x00\n        /* \"#utility.yul\":29609:29614   */\n      dup3\n        /* \"#utility.yul\":29606:29621   */\n      sub\n        /* \"#utility.yul\":29603:29644   */\n      tag_716\n      jumpi\n        /* \"#utility.yul\":29624:29642   */\n      tag_717\n      tag_417\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":29603:29644   */\n    tag_716:\n        /* \"#utility.yul\":29671:29672   */\n      0x01\n        /* \"#utility.yul\":29664:29669   */\n      dup3\n        /* \"#utility.yul\":29660:29673   */\n      sub\n        /* \"#utility.yul\":29653:29673   */\n      swap1\n      pop\n        /* \"#utility.yul\":29508:29679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29685:29867   */\n    tag_434:\n        /* \"#utility.yul\":29825:29859   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":29821:29822   */\n      0x00\n        /* \"#utility.yul\":29813:29819   */\n      dup3\n        /* \"#utility.yul\":29809:29823   */\n      add\n        /* \"#utility.yul\":29802:29860   */\n      mstore\n        /* \"#utility.yul\":29685:29867   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29873:30239   */\n    tag_435:\n        /* \"#utility.yul\":30015:30018   */\n      0x00\n        /* \"#utility.yul\":30036:30103   */\n      tag_720\n        /* \"#utility.yul\":30100:30102   */\n      0x20\n        /* \"#utility.yul\":30095:30098   */\n      dup4\n        /* \"#utility.yul\":30036:30103   */\n      tag_392\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":30029:30103   */\n      swap2\n      pop\n        /* \"#utility.yul\":30112:30205   */\n      tag_721\n        /* \"#utility.yul\":30201:30204   */\n      dup3\n        /* \"#utility.yul\":30112:30205   */\n      tag_434\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":30230:30232   */\n      0x20\n        /* \"#utility.yul\":30225:30228   */\n      dup3\n        /* \"#utility.yul\":30221:30233   */\n      add\n        /* \"#utility.yul\":30214:30233   */\n      swap1\n      pop\n        /* \"#utility.yul\":29873:30239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30245:30664   */\n    tag_331:\n        /* \"#utility.yul\":30411:30415   */\n      0x00\n        /* \"#utility.yul\":30449:30451   */\n      0x20\n        /* \"#utility.yul\":30438:30447   */\n      dup3\n        /* \"#utility.yul\":30434:30452   */\n      add\n        /* \"#utility.yul\":30426:30452   */\n      swap1\n      pop\n        /* \"#utility.yul\":30498:30507   */\n      dup2\n        /* \"#utility.yul\":30492:30496   */\n      dup2\n        /* \"#utility.yul\":30488:30508   */\n      sub\n        /* \"#utility.yul\":30484:30485   */\n      0x00\n        /* \"#utility.yul\":30473:30482   */\n      dup4\n        /* \"#utility.yul\":30469:30486   */\n      add\n        /* \"#utility.yul\":30462:30509   */\n      mstore\n        /* \"#utility.yul\":30526:30657   */\n      tag_723\n        /* \"#utility.yul\":30652:30656   */\n      dup2\n        /* \"#utility.yul\":30526:30657   */\n      tag_435\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":30518:30657   */\n      swap1\n      pop\n        /* \"#utility.yul\":30245:30664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30670:30768   */\n    tag_436:\n        /* \"#utility.yul\":30721:30727   */\n      0x00\n        /* \"#utility.yul\":30755:30760   */\n      dup2\n        /* \"#utility.yul\":30749:30761   */\n      mload\n        /* \"#utility.yul\":30739:30761   */\n      swap1\n      pop\n        /* \"#utility.yul\":30670:30768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30774:30921   */\n    tag_437:\n        /* \"#utility.yul\":30875:30886   */\n      0x00\n        /* \"#utility.yul\":30912:30915   */\n      dup2\n        /* \"#utility.yul\":30897:30915   */\n      swap1\n      pop\n        /* \"#utility.yul\":30774:30921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30927:31313   */\n    tag_438:\n        /* \"#utility.yul\":31031:31034   */\n      0x00\n        /* \"#utility.yul\":31059:31097   */\n      tag_727\n        /* \"#utility.yul\":31091:31096   */\n      dup3\n        /* \"#utility.yul\":31059:31097   */\n      tag_436\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":31113:31201   */\n      tag_728\n        /* \"#utility.yul\":31194:31200   */\n      dup2\n        /* \"#utility.yul\":31189:31192   */\n      dup6\n        /* \"#utility.yul\":31113:31201   */\n      tag_437\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":31106:31201   */\n      swap4\n      pop\n        /* \"#utility.yul\":31210:31275   */\n      tag_729\n        /* \"#utility.yul\":31268:31274   */\n      dup2\n        /* \"#utility.yul\":31263:31266   */\n      dup6\n        /* \"#utility.yul\":31256:31260   */\n      0x20\n        /* \"#utility.yul\":31249:31254   */\n      dup7\n        /* \"#utility.yul\":31245:31261   */\n      add\n        /* \"#utility.yul\":31210:31275   */\n      tag_427\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":31300:31306   */\n      dup1\n        /* \"#utility.yul\":31295:31298   */\n      dup5\n        /* \"#utility.yul\":31291:31307   */\n      add\n        /* \"#utility.yul\":31284:31307   */\n      swap2\n      pop\n        /* \"#utility.yul\":31035:31313   */\n      pop\n        /* \"#utility.yul\":30927:31313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31319:31590   */\n    tag_339:\n        /* \"#utility.yul\":31449:31452   */\n      0x00\n        /* \"#utility.yul\":31471:31564   */\n      tag_731\n        /* \"#utility.yul\":31560:31563   */\n      dup3\n        /* \"#utility.yul\":31551:31557   */\n      dup5\n        /* \"#utility.yul\":31471:31564   */\n      tag_438\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":31464:31564   */\n      swap2\n      pop\n        /* \"#utility.yul\":31581:31584   */\n      dup2\n        /* \"#utility.yul\":31574:31584   */\n      swap1\n      pop\n        /* \"#utility.yul\":31319:31590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31596:31775   */\n    tag_439:\n        /* \"#utility.yul\":31736:31767   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":31732:31733   */\n      0x00\n        /* \"#utility.yul\":31724:31730   */\n      dup3\n        /* \"#utility.yul\":31720:31734   */\n      add\n        /* \"#utility.yul\":31713:31768   */\n      mstore\n        /* \"#utility.yul\":31596:31775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31781:32147   */\n    tag_440:\n        /* \"#utility.yul\":31923:31926   */\n      0x00\n        /* \"#utility.yul\":31944:32011   */\n      tag_734\n        /* \"#utility.yul\":32008:32010   */\n      0x1d\n        /* \"#utility.yul\":32003:32006   */\n      dup4\n        /* \"#utility.yul\":31944:32011   */\n      tag_392\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":31937:32011   */\n      swap2\n      pop\n        /* \"#utility.yul\":32020:32113   */\n      tag_735\n        /* \"#utility.yul\":32109:32112   */\n      dup3\n        /* \"#utility.yul\":32020:32113   */\n      tag_439\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":32138:32140   */\n      0x20\n        /* \"#utility.yul\":32133:32136   */\n      dup3\n        /* \"#utility.yul\":32129:32141   */\n      add\n        /* \"#utility.yul\":32122:32141   */\n      swap1\n      pop\n        /* \"#utility.yul\":31781:32147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32153:32572   */\n    tag_351:\n        /* \"#utility.yul\":32319:32323   */\n      0x00\n        /* \"#utility.yul\":32357:32359   */\n      0x20\n        /* \"#utility.yul\":32346:32355   */\n      dup3\n        /* \"#utility.yul\":32342:32360   */\n      add\n        /* \"#utility.yul\":32334:32360   */\n      swap1\n      pop\n        /* \"#utility.yul\":32406:32415   */\n      dup2\n        /* \"#utility.yul\":32400:32404   */\n      dup2\n        /* \"#utility.yul\":32396:32416   */\n      sub\n        /* \"#utility.yul\":32392:32393   */\n      0x00\n        /* \"#utility.yul\":32381:32390   */\n      dup4\n        /* \"#utility.yul\":32377:32394   */\n      add\n        /* \"#utility.yul\":32370:32417   */\n      mstore\n        /* \"#utility.yul\":32434:32565   */\n      tag_737\n        /* \"#utility.yul\":32560:32564   */\n      dup2\n        /* \"#utility.yul\":32434:32565   */\n      tag_440\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":32426:32565   */\n      swap1\n      pop\n        /* \"#utility.yul\":32153:32572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220e1c4874ad6f32b1b31904c46d059eda3c3faa2354e79c921b30cac71597a0c9364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f80fd5b50608051612c926100765f395f81816104ea01528181610578015281816107ee0152818161087c015261092b0152612c925ff3fe6080604052600436106100f2575f3560e01c8063542e37cc11610089578063b88a802f11610058578063b88a802f1461030c578063bb6ceb4f14610322578063d547741f1461035e578063f396d89914610386576100f2565b8063542e37cc14610254578063651f066a1461027c57806391d14854146102a6578063a217fddf146102e2576100f2565b80633659cfe6116100c55780633659cfe6146101be578063485cc955146101e65780634f1ef2861461020e57806352d1902d1461022a576100f2565b806301ffc9a7146100f6578063248a9ca3146101325780632f2ff15d1461016e57806336568abe14610196575b5f80fd5b348015610101575f80fd5b5061011c60048036038101906101179190611c2f565b6103ae565b6040516101299190611c74565b60405180910390f35b34801561013d575f80fd5b5061015860048036038101906101539190611cc0565b610427565b6040516101659190611cfa565b60405180910390f35b348015610179575f80fd5b50610194600480360381019061018f9190611d6d565b610444565b005b3480156101a1575f80fd5b506101bc60048036038101906101b79190611d6d565b610465565b005b3480156101c9575f80fd5b506101e460048036038101906101df9190611dab565b6104e8565b005b3480156101f1575f80fd5b5061020c60048036038101906102079190611dd6565b61066e565b005b61022860048036038101906102239190611f50565b6107ec565b005b348015610235575f80fd5b5061023e610928565b60405161024b9190611cfa565b60405180910390f35b34801561025f575f80fd5b5061027a6004803603810190610275919061206e565b6109df565b005b348015610287575f80fd5b50610290610a2b565b60405161029d91906120cd565b60405180910390f35b3480156102b1575f80fd5b506102cc60048036038101906102c79190611d6d565b610a6f565b6040516102d99190611c74565b60405180910390f35b3480156102ed575f80fd5b506102f6610ad3565b6040516103039190611cfa565b60405180910390f35b348015610317575f80fd5b50610320610ad9565b005b34801561032d575f80fd5b5061034860048036038101906103439190611dab565b610dcc565b60405161035591906120cd565b60405180910390f35b348015610369575f80fd5b50610384600480360381019061037f9190611d6d565b610e1f565b005b348015610391575f80fd5b506103ac60048036038101906103a7919061213f565b610e40565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610420575061041f82610f04565b5b9050919050565b5f60c95f8381526020019081526020015f20600101549050919050565b61044d82610427565b61045681610f6d565b6104608383610f81565b505050565b61046d61105c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d19061220a565b60405180910390fd5b6104e48282611063565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90612298565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105b561113e565b73ffffffffffffffffffffffffffffffffffffffff161461060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290612326565b60405180910390fd5b61061481611191565b61066b815f67ffffffffffffffff81111561063257610631611e2c565b5b6040519080825280601f01601f1916602001820160405280156106645781602001600182028036833780820191505090505b505f6111a1565b50565b5f8060019054906101000a900460ff1615905080801561069d575060015f8054906101000a900460ff1660ff16105b806106c957506106ac3061130b565b1580156106c8575060015f8054906101000a900460ff1660ff16145b5b610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff906123b4565b60405180910390fd5b60015f806101000a81548160ff021916908360ff16021790555080156107435760015f60016101000a81548160ff0219169083151502179055505b8260fb5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061078f5f801b8361132d565b80156107e7575f8060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516107de9190612420565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087190612298565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108b961113e565b73ffffffffffffffffffffffffffffffffffffffff161461090f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090690612326565b60405180910390fd5b61091882611191565b610924828260016111a1565b5050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146109b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ae906124a9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f801b6109eb81610f6d565b5f5b8251811015610a2657610a19838281518110610a0c57610a0b6124c7565b5b602002602001015161133b565b80806001019150506109ed565b505050565b5f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f9061253e565b60405180910390fd5b60fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bb2919061256b565b602060405180830381865afa158015610bcd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf191906125ae565b60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541115610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790612649565b60405180910390fd5b5f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d4f929190612667565b6020604051808303815f875af1158015610d6b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d8f91906126b8565b507fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e3382604051610dc1929190612667565b60405180910390a150565b5f805f1b610dd981610f6d565b60fc5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610e2882610427565b610e3181610f6d565b610e3b8383611063565b505050565b5f801b610e4c81610f6d565b5f5b83839050811015610efe57838382818110610e6c57610e6b6124c7565b5b9050604002016020013560fc5f868685818110610e8c57610e8b6124c7565b5b9050604002015f016020810190610ea39190611dab565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610eea9190612710565b925050819055508080600101915050610e4e565b50505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610f7e81610f7961105c565b61162f565b50565b610f8b8282610a6f565b61105857600160c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ffd61105c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b61106d8282610a6f565b1561113a575f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506110df61105c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f61116a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6116b3565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f801b61119d81610f6d565b5050565b6111cc7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435f1b6116bc565b5f015f9054906101000a900460ff16156111ee576111e9836116c5565b611306565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561125657506040513d601f19601f820116820180604052508101906112539190612757565b60015b611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128c906127f2565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146112f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f090612880565b60405180910390fd5b5061130583838361177b565b5b505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6113378282610f81565b5050565b5f60fc5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b19061253e565b60405180910390fd5b60fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611414919061256b565b602060405180830381865afa15801561142f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061145391906125ae565b60fc5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411156114d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c990612649565b60405180910390fd5b5f60fc5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60fc5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016115b1929190612667565b6020604051808303815f875af11580156115cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f191906126b8565b507fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e8282604051611623929190612667565b60405180910390a15050565b6116398282610a6f565b6116af57611646816117a6565b611653835f1c60206117d3565b604051602001611664929190612984565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a691906129f5565b60405180910390fd5b5050565b5f819050919050565b5f819050919050565b6116ce8161130b565b61170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170490612a85565b60405180910390fd5b806117397f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6116b3565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61178483611a08565b5f825111806117905750805b156117a15761179f8383611a57565b505b505050565b60606117cc8273ffffffffffffffffffffffffffffffffffffffff16601460ff166117d3565b9050919050565b60605f60028360026117e59190612aa3565b6117ef9190612710565b67ffffffffffffffff81111561180857611807611e2c565b5b6040519080825280601f01601f19166020018201604052801561183a5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f81518110611871576118706124c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106118d4576118d36124c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f60018460026119129190612aa3565b61191c9190612710565b90505b60018111156119bb577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061195e5761195d6124c7565b5b1a60f81b828281518110611975576119746124c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c9450806119b490612ae4565b905061191f565b505f84146119fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f590612b55565b60405180910390fd5b8091505092915050565b611a11816116c5565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611a7c8383604051806060016040528060278152602001612c3660279139611a84565b905092915050565b60605f808573ffffffffffffffffffffffffffffffffffffffff1685604051611aad9190612bb7565b5f60405180830381855af49150503d805f8114611ae5576040519150601f19603f3d011682016040523d82523d5f602084013e611aea565b606091505b5091509150611afb86838387611b06565b925050509392505050565b60608315611b67575f835103611b5f57611b1f8561130b565b611b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5590612c17565b60405180910390fd5b5b829050611b72565b611b718383611b7a565b5b949350505050565b5f82511115611b8c5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc091906129f5565b60405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c0e81611bda565b8114611c18575f80fd5b50565b5f81359050611c2981611c05565b92915050565b5f60208284031215611c4457611c43611bd2565b5b5f611c5184828501611c1b565b91505092915050565b5f8115159050919050565b611c6e81611c5a565b82525050565b5f602082019050611c875f830184611c65565b92915050565b5f819050919050565b611c9f81611c8d565b8114611ca9575f80fd5b50565b5f81359050611cba81611c96565b92915050565b5f60208284031215611cd557611cd4611bd2565b5b5f611ce284828501611cac565b91505092915050565b611cf481611c8d565b82525050565b5f602082019050611d0d5f830184611ceb565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d3c82611d13565b9050919050565b611d4c81611d32565b8114611d56575f80fd5b50565b5f81359050611d6781611d43565b92915050565b5f8060408385031215611d8357611d82611bd2565b5b5f611d9085828601611cac565b9250506020611da185828601611d59565b9150509250929050565b5f60208284031215611dc057611dbf611bd2565b5b5f611dcd84828501611d59565b91505092915050565b5f8060408385031215611dec57611deb611bd2565b5b5f611df985828601611d59565b9250506020611e0a85828601611d59565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e6282611e1c565b810181811067ffffffffffffffff82111715611e8157611e80611e2c565b5b80604052505050565b5f611e93611bc9565b9050611e9f8282611e59565b919050565b5f67ffffffffffffffff821115611ebe57611ebd611e2c565b5b611ec782611e1c565b9050602081019050919050565b828183375f83830152505050565b5f611ef4611eef84611ea4565b611e8a565b905082815260208101848484011115611f1057611f0f611e18565b5b611f1b848285611ed4565b509392505050565b5f82601f830112611f3757611f36611e14565b5b8135611f47848260208601611ee2565b91505092915050565b5f8060408385031215611f6657611f65611bd2565b5b5f611f7385828601611d59565b925050602083013567ffffffffffffffff811115611f9457611f93611bd6565b5b611fa085828601611f23565b9150509250929050565b5f67ffffffffffffffff821115611fc457611fc3611e2c565b5b602082029050602081019050919050565b5f80fd5b5f611feb611fe684611faa565b611e8a565b9050808382526020820190506020840283018581111561200e5761200d611fd5565b5b835b8181101561203757806120238882611d59565b845260208401935050602081019050612010565b5050509392505050565b5f82601f83011261205557612054611e14565b5b8135612065848260208601611fd9565b91505092915050565b5f6020828403121561208357612082611bd2565b5b5f82013567ffffffffffffffff8111156120a05761209f611bd6565b5b6120ac84828501612041565b91505092915050565b5f819050919050565b6120c7816120b5565b82525050565b5f6020820190506120e05f8301846120be565b92915050565b5f80fd5b5f8083601f8401126120ff576120fe611e14565b5b8235905067ffffffffffffffff81111561211c5761211b6120e6565b5b60208301915083604082028301111561213857612137611fd5565b5b9250929050565b5f806020838503121561215557612154611bd2565b5b5f83013567ffffffffffffffff81111561217257612171611bd6565b5b61217e858286016120ea565b92509250509250929050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f6121f4602f8361218a565b91506121ff8261219a565b604082019050919050565b5f6020820190508181035f830152612221816121e8565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b5f612282602c8361218a565b915061228d82612228565b604082019050919050565b5f6020820190508181035f8301526122af81612276565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b5f612310602c8361218a565b915061231b826122b6565b604082019050919050565b5f6020820190508181035f83015261233d81612304565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f61239e602e8361218a565b91506123a982612344565b604082019050919050565b5f6020820190508181035f8301526123cb81612392565b9050919050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61240a612405612400846123d2565b6123e7565b6123db565b9050919050565b61241a816123f0565b82525050565b5f6020820190506124335f830184612411565b92915050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c5f8201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b5f61249360388361218a565b915061249e82612439565b604082019050919050565b5f6020820190508181035f8301526124c081612487565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f596f7520646f6e2774206861766520616e7920726577617264000000000000005f82015250565b5f61252860198361218a565b9150612533826124f4565b602082019050919050565b5f6020820190508181035f8301526125558161251c565b9050919050565b61256581611d32565b82525050565b5f60208201905061257e5f83018461255c565b92915050565b61258d816120b5565b8114612597575f80fd5b50565b5f815190506125a881612584565b92915050565b5f602082840312156125c3576125c2611bd2565b5b5f6125d08482850161259a565b91505092915050565b7f596f752063616e27742077697468647261772061742074686973206d6f6d656e5f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f61263360218361218a565b915061263e826125d9565b604082019050919050565b5f6020820190508181035f83015261266081612627565b9050919050565b5f60408201905061267a5f83018561255c565b61268760208301846120be565b9392505050565b61269781611c5a565b81146126a1575f80fd5b50565b5f815190506126b28161268e565b92915050565b5f602082840312156126cd576126cc611bd2565b5b5f6126da848285016126a4565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61271a826120b5565b9150612725836120b5565b925082820190508082111561273d5761273c6126e3565b5b92915050565b5f8151905061275181611c96565b92915050565b5f6020828403121561276c5761276b611bd2565b5b5f61277984828501612743565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e746174695f8201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b5f6127dc602e8361218a565b91506127e782612782565b604082019050919050565b5f6020820190508181035f830152612809816127d0565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f785f8201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b5f61286a60298361218a565b915061287582612810565b604082019050919050565b5f6020820190508181035f8301526128978161285e565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f6128dc60178361289e565b91506128e7826128a8565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f612914826128f2565b61291e818561289e565b935061292e8185602086016128fc565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f61296e60118361289e565b91506129798261293a565b601182019050919050565b5f61298e826128d0565b915061299a828561290a565b91506129a582612962565b91506129b1828461290a565b91508190509392505050565b5f6129c7826128f2565b6129d1818561218a565b93506129e18185602086016128fc565b6129ea81611e1c565b840191505092915050565b5f6020820190508181035f830152612a0d81846129bd565b905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f612a6f602d8361218a565b9150612a7a82612a15565b604082019050919050565b5f6020820190508181035f830152612a9c81612a63565b9050919050565b5f612aad826120b5565b9150612ab8836120b5565b9250828202612ac6816120b5565b91508282048414831517612add57612adc6126e3565b5b5092915050565b5f612aee826120b5565b91505f8203612b0057612aff6126e3565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f612b3f60208361218a565b9150612b4a82612b0b565b602082019050919050565b5f6020820190508181035f830152612b6c81612b33565b9050919050565b5f81519050919050565b5f81905092915050565b5f612b9182612b73565b612b9b8185612b7d565b9350612bab8185602086016128fc565b80840191505092915050565b5f612bc28284612b87565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f612c01601d8361218a565b9150612c0c82612bcd565b602082019050919050565b5f6020820190508181035f830152612c2e81612bf5565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e1c4874ad6f32b1b31904c46d059eda3c3faa2354e79c921b30cac71597a0c9364736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x2C92 PUSH2 0x76 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x4EA ADD MSTORE DUP2 DUP2 PUSH2 0x578 ADD MSTORE DUP2 DUP2 PUSH2 0x7EE ADD MSTORE DUP2 DUP2 PUSH2 0x87C ADD MSTORE PUSH2 0x92B ADD MSTORE PUSH2 0x2C92 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x542E37CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xBB6CEB4F EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xF396D899 EQ PUSH2 0x386 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x542E37CC EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x651F066A EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E2 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x22A JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0xAD9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xE1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x420 JUMPI POP PUSH2 0x41F DUP3 PUSH2 0xF04 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44D DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH2 0x456 DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x460 DUP4 DUP4 PUSH2 0xF81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x46D PUSH2 0x105C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E4 DUP3 DUP3 PUSH2 0x1063 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56D SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B5 PUSH2 0x113E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x66B DUP2 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x632 JUMPI PUSH2 0x631 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x664 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH0 PUSH2 0x11A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x69D JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x6C9 JUMPI POP PUSH2 0x6AC ADDRESS PUSH2 0x130B JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0xFB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x78F PUSH0 DUP1 SHL DUP4 PUSH2 0x132D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x2420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x871 SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B9 PUSH2 0x113E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 DUP3 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x924 DUP3 DUP3 PUSH1 0x1 PUSH2 0x11A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x9EB DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA26 JUMPI PUSH2 0xA19 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x133B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB2 SWAP2 SWAP1 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBCD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x25AE JUMP JUMPDEST PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP1 PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4F SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST POP PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC1 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SHL PUSH2 0xDD9 DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0xFC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE28 DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH2 0xE31 DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xE3B DUP4 DUP4 PUSH2 0x1063 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xE4C DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xEFE JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xE6C JUMPI PUSH2 0xE6B PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFC PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEA3 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0xF79 PUSH2 0x105C JUMP JUMPDEST PUSH2 0x162F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF8B DUP3 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x1 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFFD PUSH2 0x105C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x106D DUP3 DUP3 PUSH2 0xA6F JUMP JUMPDEST ISZERO PUSH2 0x113A JUMPI PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10DF PUSH2 0x105C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x116A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x16B3 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x119D DUP2 PUSH2 0xF6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11CC PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH0 SHL PUSH2 0x16BC JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11EE JUMPI PUSH2 0x11E9 DUP4 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1256 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP1 PUSH2 0x27F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F0 SWAP1 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1305 DUP4 DUP4 DUP4 PUSH2 0x177B JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1337 DUP3 DUP3 PUSH2 0xF81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x25AE JUMP JUMPDEST PUSH1 0xFC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C9 SWAP1 PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xFC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xFC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B1 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F1 SWAP2 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST POP PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1623 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1639 DUP3 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x16AF JUMPI PUSH2 0x1646 DUP2 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x1653 DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1664 SWAP3 SWAP2 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CE DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x170D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1704 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1739 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x16B3 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1784 DUP4 PUSH2 0x1A08 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x1790 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x179F DUP4 DUP4 PUSH2 0x1A57 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17CC DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x17E5 SWAP2 SWAP1 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x17EF SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1808 JUMPI PUSH2 0x1807 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x183A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x18D4 JUMPI PUSH2 0x18D3 PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x191C SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19BB JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x195E JUMPI PUSH2 0x195D PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x19B4 SWAP1 PUSH2 0x2AE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x191F JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x19FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F5 SWAP1 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A11 DUP2 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A7C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C36 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1AAD SWAP2 SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AE5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1AFB DUP7 DUP4 DUP4 DUP8 PUSH2 0x1B06 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B67 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x1B5F JUMPI PUSH2 0x1B1F DUP6 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x1B5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B55 SWAP1 PUSH2 0x2C17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1B71 DUP4 DUP4 PUSH2 0x1B7A JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1B8C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC0 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0E DUP2 PUSH2 0x1BDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C29 DUP2 PUSH2 0x1C05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C44 JUMPI PUSH2 0x1C43 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C51 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6E DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C87 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9F DUP2 PUSH2 0x1C8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CBA DUP2 PUSH2 0x1C96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CF4 DUP2 PUSH2 0x1C8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0D PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3C DUP3 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D4C DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D67 DUP2 PUSH2 0x1D43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D83 JUMPI PUSH2 0x1D82 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D90 DUP6 DUP3 DUP7 ADD PUSH2 0x1CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DBF PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCD DUP5 DUP3 DUP6 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DEC JUMPI PUSH2 0x1DEB PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E0A DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E62 DUP3 PUSH2 0x1E1C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E81 JUMPI PUSH2 0x1E80 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E93 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E9F DUP3 DUP3 PUSH2 0x1E59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EBE JUMPI PUSH2 0x1EBD PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH2 0x1EC7 DUP3 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF4 PUSH2 0x1EEF DUP5 PUSH2 0x1EA4 JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F10 JUMPI PUSH2 0x1F0F PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH2 0x1F1B DUP5 DUP3 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F37 JUMPI PUSH2 0x1F36 PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F47 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F73 DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F94 JUMPI PUSH2 0x1F93 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH2 0x1FA0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FC4 JUMPI PUSH2 0x1FC3 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1FEB PUSH2 0x1FE6 DUP5 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x200E JUMPI PUSH2 0x200D PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2037 JUMPI DUP1 PUSH2 0x2023 DUP9 DUP3 PUSH2 0x1D59 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2010 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2055 JUMPI PUSH2 0x2054 PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2065 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x209F PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH2 0x20AC DUP5 DUP3 DUP6 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x20B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20FF JUMPI PUSH2 0x20FE PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x211C JUMPI PUSH2 0x211B PUSH2 0x20E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2138 JUMPI PUSH2 0x2137 PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH2 0x217E DUP6 DUP3 DUP7 ADD PUSH2 0x20EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F4 PUSH1 0x2F DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x21FF DUP3 PUSH2 0x219A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2221 DUP2 PUSH2 0x21E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2282 PUSH1 0x2C DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x228D DUP3 PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AF DUP2 PUSH2 0x2276 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2310 PUSH1 0x2C DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x231B DUP3 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233D DUP2 PUSH2 0x2304 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x239E PUSH1 0x2E DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x23A9 DUP3 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23CB DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x240A PUSH2 0x2405 PUSH2 0x2400 DUP5 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x23DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x241A DUP2 PUSH2 0x23F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2433 PUSH0 DUP4 ADD DUP5 PUSH2 0x2411 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2493 PUSH1 0x38 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x249E DUP3 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24C0 DUP2 PUSH2 0x2487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x596F7520646F6E2774206861766520616E792072657761726400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2528 PUSH1 0x19 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2533 DUP3 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x251C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2565 DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257E PUSH0 DUP4 ADD DUP5 PUSH2 0x255C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x20B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A8 DUP2 PUSH2 0x2584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C3 JUMPI PUSH2 0x25C2 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25D0 DUP5 DUP3 DUP6 ADD PUSH2 0x259A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E27742077697468647261772061742074686973206D6F6D656E PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2633 PUSH1 0x21 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x263E DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2660 DUP2 PUSH2 0x2627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x267A PUSH0 DUP4 ADD DUP6 PUSH2 0x255C JUMP JUMPDEST PUSH2 0x2687 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2697 DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x26A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B2 DUP2 PUSH2 0x268E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CD JUMPI PUSH2 0x26CC PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26DA DUP5 DUP3 DUP6 ADD PUSH2 0x26A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x271A DUP3 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2725 DUP4 PUSH2 0x20B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x273D JUMPI PUSH2 0x273C PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2751 DUP2 PUSH2 0x1C96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276C JUMPI PUSH2 0x276B PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2779 DUP5 DUP3 DUP6 ADD PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27DC PUSH1 0x2E DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x27E7 DUP3 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2809 DUP2 PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x286A PUSH1 0x29 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2875 DUP3 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2897 DUP2 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28DC PUSH1 0x17 DUP4 PUSH2 0x289E JUMP JUMPDEST SWAP2 POP PUSH2 0x28E7 DUP3 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2914 DUP3 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x291E DUP2 DUP6 PUSH2 0x289E JUMP JUMPDEST SWAP4 POP PUSH2 0x292E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x296E PUSH1 0x11 DUP4 PUSH2 0x289E JUMP JUMPDEST SWAP2 POP PUSH2 0x2979 DUP3 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x298E DUP3 PUSH2 0x28D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x299A DUP3 DUP6 PUSH2 0x290A JUMP JUMPDEST SWAP2 POP PUSH2 0x29A5 DUP3 PUSH2 0x2962 JUMP JUMPDEST SWAP2 POP PUSH2 0x29B1 DUP3 DUP5 PUSH2 0x290A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29C7 DUP3 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x29D1 DUP2 DUP6 PUSH2 0x218A JUMP JUMPDEST SWAP4 POP PUSH2 0x29E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x29EA DUP2 PUSH2 0x1E1C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A0D DUP2 DUP5 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A6F PUSH1 0x2D DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7A DUP3 PUSH2 0x2A15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 PUSH2 0x2A63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AAD DUP3 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB8 DUP4 PUSH2 0x20B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2AC6 DUP2 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ADD JUMPI PUSH2 0x2ADC PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEE DUP3 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x2B00 JUMPI PUSH2 0x2AFF PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3F PUSH1 0x20 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4A DUP3 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6C DUP2 PUSH2 0x2B33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B91 DUP3 PUSH2 0x2B73 JUMP JUMPDEST PUSH2 0x2B9B DUP2 DUP6 PUSH2 0x2B7D JUMP JUMPDEST SWAP4 POP PUSH2 0x2BAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BC2 DUP3 DUP5 PUSH2 0x2B87 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C01 PUSH1 0x1D DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0C DUP3 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2E DUP2 PUSH2 0x2BF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220E1C487 BLOBBASEFEE 0xD6 RETURN 0x2B SHL BALANCE SWAP1 0x4C CHAINID 0xD0 MSIZE 0xED LOG3 0xC3 STATICCALL LOG2 CALLDATALOAD 0x4E PUSH26 0xC921B30CAC71597A0C9364736F6C634300081A00330000000000 ",
							"sourceMap": "381:2276:19:-:0;;;1332:4:7;1289:48;;;;;;;;;381:2276:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_42": {
									"entryPoint": 2771,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3578": {
									"entryPoint": 4497,
									"id": 3578,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_107": {
									"entryPoint": 3949,
									"id": 107,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_146": {
									"entryPoint": 5679,
									"id": 146,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getImplementation_484": {
									"entryPoint": 4414,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_298": {
									"entryPoint": 3969,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1925": {
									"entryPoint": 4188,
									"id": 1925,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1897": {
									"entryPoint": 7034,
									"id": 1897,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_329": {
									"entryPoint": 4195,
									"id": 329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_508": {
									"entryPoint": 5829,
									"id": 508,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setupRole_238": {
									"entryPoint": 4909,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_606": {
									"entryPoint": 4513,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_553": {
									"entryPoint": 6011,
									"id": 553,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_523": {
									"entryPoint": 6664,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimRewardAdminList_3542": {
									"entryPoint": 2527,
									"id": 3542,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimRewardAdmin_3513": {
									"entryPoint": 4923,
									"id": 3513,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_3459": {
									"entryPoint": 2777,
									"id": 3459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1785": {
									"entryPoint": 6743,
									"id": 1785,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1814": {
									"entryPoint": 6788,
									"id": 1814,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1972": {
									"entryPoint": 5811,
									"id": 1972,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1983": {
									"entryPoint": 5820,
									"id": 1983,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_161": {
									"entryPoint": 1063,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_181": {
									"entryPoint": 1092,
									"id": 181,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_94": {
									"entryPoint": 2671,
									"id": 94,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_3365": {
									"entryPoint": 1646,
									"id": 3365,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_1586": {
									"entryPoint": 4875,
									"id": 1586,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@playerBalanceAdmin_3568": {
									"entryPoint": 3532,
									"id": 3568,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@playerBalance_3553": {
									"entryPoint": 2603,
									"id": 3553,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@playersReward_3401": {
									"entryPoint": 3648,
									"id": 3401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@proxiableUUID_1023": {
									"entryPoint": 2344,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_224": {
									"entryPoint": 1125,
									"id": 224,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_201": {
									"entryPoint": 3615,
									"id": 201,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2317": {
									"entryPoint": 3844,
									"id": 2317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 942,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_2233": {
									"entryPoint": 6099,
									"id": 2233,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_2253": {
									"entryPoint": 6054,
									"id": 2253,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_1066": {
									"entryPoint": 2028,
									"id": 1066,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_1045": {
									"entryPoint": 1256,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1853": {
									"entryPoint": 6918,
									"id": 1853,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 8511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 10071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 9233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10628,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9831,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 9200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 10980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7704,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 11019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4": {
									"entryPoint": 9273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c": {
									"entryPoint": 10256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24": {
									"entryPoint": 10114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65": {
									"entryPoint": 10773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3": {
									"entryPoint": 9689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 11213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 10408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 10554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:32575:20",
										"nodeType": "YulBlock",
										"src": "0:32575:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:20",
													"nodeType": "YulBlock",
													"src": "47:35:20",
													"statements": [
														{
															"nativeSrc": "57:19:20",
															"nodeType": "YulAssignment",
															"src": "57:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:20",
																		"nodeType": "YulLiteral",
																		"src": "73:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:20"
																},
																"nativeSrc": "67:9:20",
																"nodeType": "YulFunctionCall",
																"src": "67:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:20",
														"nodeType": "YulTypedName",
														"src": "40:6:20",
														"type": ""
													}
												],
												"src": "7:75:20"
											},
											{
												"body": {
													"nativeSrc": "177:28:20",
													"nodeType": "YulBlock",
													"src": "177:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:20",
																		"nodeType": "YulLiteral",
																		"src": "194:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:20",
																		"nodeType": "YulLiteral",
																		"src": "197:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:20"
																},
																"nativeSrc": "187:12:20",
																"nodeType": "YulFunctionCall",
																"src": "187:12:20"
															},
															"nativeSrc": "187:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:20"
											},
											{
												"body": {
													"nativeSrc": "300:28:20",
													"nodeType": "YulBlock",
													"src": "300:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:20",
																		"nodeType": "YulLiteral",
																		"src": "317:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:20",
																		"nodeType": "YulLiteral",
																		"src": "320:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:20"
																},
																"nativeSrc": "310:12:20",
																"nodeType": "YulFunctionCall",
																"src": "310:12:20"
															},
															"nativeSrc": "310:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:20"
											},
											{
												"body": {
													"nativeSrc": "378:105:20",
													"nodeType": "YulBlock",
													"src": "378:105:20",
													"statements": [
														{
															"nativeSrc": "388:89:20",
															"nodeType": "YulAssignment",
															"src": "388:89:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:20",
																		"nodeType": "YulLiteral",
																		"src": "410:66:20",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:20"
																},
																"nativeSrc": "399:78:20",
																"nodeType": "YulFunctionCall",
																"src": "399:78:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:20",
														"nodeType": "YulTypedName",
														"src": "360:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:20",
														"nodeType": "YulTypedName",
														"src": "370:7:20",
														"type": ""
													}
												],
												"src": "334:149:20"
											},
											{
												"body": {
													"nativeSrc": "531:78:20",
													"nodeType": "YulBlock",
													"src": "531:78:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:20",
																"nodeType": "YulBlock",
																"src": "587:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:20",
																					"nodeType": "YulLiteral",
																					"src": "596:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:20",
																					"nodeType": "YulLiteral",
																					"src": "599:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:20"
																			},
																			"nativeSrc": "589:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:20"
																		},
																		"nativeSrc": "589:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:20",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:20"
																				},
																				"nativeSrc": "561:23:20",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:20"
																		},
																		"nativeSrc": "551:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:20"
																},
																"nativeSrc": "544:42:20",
																"nodeType": "YulFunctionCall",
																"src": "544:42:20"
															},
															"nativeSrc": "541:62:20",
															"nodeType": "YulIf",
															"src": "541:62:20"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:20",
														"nodeType": "YulTypedName",
														"src": "524:5:20",
														"type": ""
													}
												],
												"src": "489:120:20"
											},
											{
												"body": {
													"nativeSrc": "666:86:20",
													"nodeType": "YulBlock",
													"src": "666:86:20",
													"statements": [
														{
															"nativeSrc": "676:29:20",
															"nodeType": "YulAssignment",
															"src": "676:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:20"
																},
																"nativeSrc": "685:20:20",
																"nodeType": "YulFunctionCall",
																"src": "685:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:20"
																},
																"nativeSrc": "714:32:20",
																"nodeType": "YulFunctionCall",
																"src": "714:32:20"
															},
															"nativeSrc": "714:32:20",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:20"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:20",
														"nodeType": "YulTypedName",
														"src": "644:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:20",
														"nodeType": "YulTypedName",
														"src": "652:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:20",
														"nodeType": "YulTypedName",
														"src": "660:5:20",
														"type": ""
													}
												],
												"src": "615:137:20"
											},
											{
												"body": {
													"nativeSrc": "823:262:20",
													"nodeType": "YulBlock",
													"src": "823:262:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:20",
																"nodeType": "YulBlock",
																"src": "869:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:20"
																			},
																			"nativeSrc": "871:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:20"
																		},
																		"nativeSrc": "871:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:20"
																		},
																		"nativeSrc": "840:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:20",
																		"nodeType": "YulLiteral",
																		"src": "865:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:20"
																},
																"nativeSrc": "836:32:20",
																"nodeType": "YulFunctionCall",
																"src": "836:32:20"
															},
															"nativeSrc": "833:119:20",
															"nodeType": "YulIf",
															"src": "833:119:20"
														},
														{
															"nativeSrc": "962:116:20",
															"nodeType": "YulBlock",
															"src": "962:116:20",
															"statements": [
																{
																	"nativeSrc": "977:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:20",
																		"nodeType": "YulLiteral",
																		"src": "991:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:20",
																			"nodeType": "YulTypedName",
																			"src": "981:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:20",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:20"
																				},
																				"nativeSrc": "1036:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:20",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:20"
																		},
																		"nativeSrc": "1016:52:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:20",
														"nodeType": "YulTypedName",
														"src": "793:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:20",
														"nodeType": "YulTypedName",
														"src": "804:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:20",
														"nodeType": "YulTypedName",
														"src": "816:6:20",
														"type": ""
													}
												],
												"src": "758:327:20"
											},
											{
												"body": {
													"nativeSrc": "1133:48:20",
													"nodeType": "YulBlock",
													"src": "1133:48:20",
													"statements": [
														{
															"nativeSrc": "1143:32:20",
															"nodeType": "YulAssignment",
															"src": "1143:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:20"
																		},
																		"nativeSrc": "1161:13:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:20"
																},
																"nativeSrc": "1154:21:20",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:20",
														"nodeType": "YulTypedName",
														"src": "1115:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:20",
														"nodeType": "YulTypedName",
														"src": "1125:7:20",
														"type": ""
													}
												],
												"src": "1091:90:20"
											},
											{
												"body": {
													"nativeSrc": "1246:50:20",
													"nodeType": "YulBlock",
													"src": "1246:50:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:20",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:20"
																		},
																		"nativeSrc": "1268:21:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:20"
																},
																"nativeSrc": "1256:34:20",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:20"
															},
															"nativeSrc": "1256:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:20"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:20",
														"nodeType": "YulTypedName",
														"src": "1234:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:20",
														"nodeType": "YulTypedName",
														"src": "1241:3:20",
														"type": ""
													}
												],
												"src": "1187:109:20"
											},
											{
												"body": {
													"nativeSrc": "1394:118:20",
													"nodeType": "YulBlock",
													"src": "1394:118:20",
													"statements": [
														{
															"nativeSrc": "1404:26:20",
															"nodeType": "YulAssignment",
															"src": "1404:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:20"
																},
																"nativeSrc": "1412:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:20"
																		},
																		"nativeSrc": "1487:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:20",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:20"
																},
																"nativeSrc": "1440:65:20",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:20"
															},
															"nativeSrc": "1440:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:20",
														"nodeType": "YulTypedName",
														"src": "1366:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:20",
														"nodeType": "YulTypedName",
														"src": "1378:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:20",
														"nodeType": "YulTypedName",
														"src": "1389:4:20",
														"type": ""
													}
												],
												"src": "1302:210:20"
											},
											{
												"body": {
													"nativeSrc": "1563:32:20",
													"nodeType": "YulBlock",
													"src": "1563:32:20",
													"statements": [
														{
															"nativeSrc": "1573:16:20",
															"nodeType": "YulAssignment",
															"src": "1573:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:20",
																"nodeType": "YulIdentifier",
																"src": "1584:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:20",
														"nodeType": "YulTypedName",
														"src": "1545:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:20",
														"nodeType": "YulTypedName",
														"src": "1555:7:20",
														"type": ""
													}
												],
												"src": "1518:77:20"
											},
											{
												"body": {
													"nativeSrc": "1644:79:20",
													"nodeType": "YulBlock",
													"src": "1644:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:20",
																"nodeType": "YulBlock",
																"src": "1701:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:20"
																			},
																			"nativeSrc": "1703:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:20"
																		},
																		"nativeSrc": "1703:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:20"
																				},
																				"nativeSrc": "1674:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:20"
																		},
																		"nativeSrc": "1664:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:20"
																},
																"nativeSrc": "1657:43:20",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:20"
															},
															"nativeSrc": "1654:63:20",
															"nodeType": "YulIf",
															"src": "1654:63:20"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:20",
														"nodeType": "YulTypedName",
														"src": "1637:5:20",
														"type": ""
													}
												],
												"src": "1601:122:20"
											},
											{
												"body": {
													"nativeSrc": "1781:87:20",
													"nodeType": "YulBlock",
													"src": "1781:87:20",
													"statements": [
														{
															"nativeSrc": "1791:29:20",
															"nodeType": "YulAssignment",
															"src": "1791:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:20"
																},
																"nativeSrc": "1800:20:20",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:20"
																},
																"nativeSrc": "1829:33:20",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:20"
															},
															"nativeSrc": "1829:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:20",
														"nodeType": "YulTypedName",
														"src": "1759:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:20",
														"nodeType": "YulTypedName",
														"src": "1767:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:20",
														"nodeType": "YulTypedName",
														"src": "1775:5:20",
														"type": ""
													}
												],
												"src": "1729:139:20"
											},
											{
												"body": {
													"nativeSrc": "1940:263:20",
													"nodeType": "YulBlock",
													"src": "1940:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:20",
																"nodeType": "YulBlock",
																"src": "1986:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:20"
																			},
																			"nativeSrc": "1988:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:20"
																		},
																		"nativeSrc": "1988:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:20"
																		},
																		"nativeSrc": "1957:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:20"
																},
																"nativeSrc": "1953:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:20"
															},
															"nativeSrc": "1950:119:20",
															"nodeType": "YulIf",
															"src": "1950:119:20"
														},
														{
															"nativeSrc": "2079:117:20",
															"nodeType": "YulBlock",
															"src": "2079:117:20",
															"statements": [
																{
																	"nativeSrc": "2094:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:20",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:20"
																				},
																				"nativeSrc": "2154:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:20"
																		},
																		"nativeSrc": "2133:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:20",
														"nodeType": "YulTypedName",
														"src": "1910:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:20",
														"nodeType": "YulTypedName",
														"src": "1921:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:20",
														"nodeType": "YulTypedName",
														"src": "1933:6:20",
														"type": ""
													}
												],
												"src": "1874:329:20"
											},
											{
												"body": {
													"nativeSrc": "2274:53:20",
													"nodeType": "YulBlock",
													"src": "2274:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:20"
																		},
																		"nativeSrc": "2296:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:20"
																},
																"nativeSrc": "2284:37:20",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:20"
															},
															"nativeSrc": "2284:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:20",
														"nodeType": "YulTypedName",
														"src": "2262:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:20",
														"nodeType": "YulTypedName",
														"src": "2269:3:20",
														"type": ""
													}
												],
												"src": "2209:118:20"
											},
											{
												"body": {
													"nativeSrc": "2431:124:20",
													"nodeType": "YulBlock",
													"src": "2431:124:20",
													"statements": [
														{
															"nativeSrc": "2441:26:20",
															"nodeType": "YulAssignment",
															"src": "2441:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:20"
																},
																"nativeSrc": "2449:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:20",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:20"
																		},
																		"nativeSrc": "2530:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:20"
																},
																"nativeSrc": "2477:71:20",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:20"
															},
															"nativeSrc": "2477:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:20",
														"nodeType": "YulTypedName",
														"src": "2403:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:20",
														"nodeType": "YulTypedName",
														"src": "2415:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:20",
														"nodeType": "YulTypedName",
														"src": "2426:4:20",
														"type": ""
													}
												],
												"src": "2333:222:20"
											},
											{
												"body": {
													"nativeSrc": "2606:81:20",
													"nodeType": "YulBlock",
													"src": "2606:81:20",
													"statements": [
														{
															"nativeSrc": "2616:65:20",
															"nodeType": "YulAssignment",
															"src": "2616:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:20",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:20"
																},
																"nativeSrc": "2627:54:20",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:20",
														"nodeType": "YulTypedName",
														"src": "2588:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:20",
														"nodeType": "YulTypedName",
														"src": "2598:7:20",
														"type": ""
													}
												],
												"src": "2561:126:20"
											},
											{
												"body": {
													"nativeSrc": "2738:51:20",
													"nodeType": "YulBlock",
													"src": "2738:51:20",
													"statements": [
														{
															"nativeSrc": "2748:35:20",
															"nodeType": "YulAssignment",
															"src": "2748:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:20"
																},
																"nativeSrc": "2759:24:20",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:20",
														"nodeType": "YulTypedName",
														"src": "2720:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:20",
														"nodeType": "YulTypedName",
														"src": "2730:7:20",
														"type": ""
													}
												],
												"src": "2693:96:20"
											},
											{
												"body": {
													"nativeSrc": "2838:79:20",
													"nodeType": "YulBlock",
													"src": "2838:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:20",
																"nodeType": "YulBlock",
																"src": "2895:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:20"
																			},
																			"nativeSrc": "2897:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:20"
																		},
																		"nativeSrc": "2897:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:20"
																				},
																				"nativeSrc": "2868:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:20"
																		},
																		"nativeSrc": "2858:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:20"
																},
																"nativeSrc": "2851:43:20",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:20"
															},
															"nativeSrc": "2848:63:20",
															"nodeType": "YulIf",
															"src": "2848:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:20",
														"nodeType": "YulTypedName",
														"src": "2831:5:20",
														"type": ""
													}
												],
												"src": "2795:122:20"
											},
											{
												"body": {
													"nativeSrc": "2975:87:20",
													"nodeType": "YulBlock",
													"src": "2975:87:20",
													"statements": [
														{
															"nativeSrc": "2985:29:20",
															"nodeType": "YulAssignment",
															"src": "2985:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:20"
																},
																"nativeSrc": "2994:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:20"
																},
																"nativeSrc": "3023:33:20",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:20"
															},
															"nativeSrc": "3023:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:20",
														"nodeType": "YulTypedName",
														"src": "2953:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:20",
														"nodeType": "YulTypedName",
														"src": "2961:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:20",
														"nodeType": "YulTypedName",
														"src": "2969:5:20",
														"type": ""
													}
												],
												"src": "2923:139:20"
											},
											{
												"body": {
													"nativeSrc": "3151:391:20",
													"nodeType": "YulBlock",
													"src": "3151:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:20",
																"nodeType": "YulBlock",
																"src": "3197:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:20"
																			},
																			"nativeSrc": "3199:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:20"
																		},
																		"nativeSrc": "3199:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:20"
																		},
																		"nativeSrc": "3168:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:20"
																},
																"nativeSrc": "3164:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:20"
															},
															"nativeSrc": "3161:119:20",
															"nodeType": "YulIf",
															"src": "3161:119:20"
														},
														{
															"nativeSrc": "3290:117:20",
															"nodeType": "YulBlock",
															"src": "3290:117:20",
															"statements": [
																{
																	"nativeSrc": "3305:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:20",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:20"
																				},
																				"nativeSrc": "3365:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:20"
																		},
																		"nativeSrc": "3344:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:20",
															"nodeType": "YulBlock",
															"src": "3417:118:20",
															"statements": [
																{
																	"nativeSrc": "3432:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:20"
																				},
																				"nativeSrc": "3493:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:20"
																		},
																		"nativeSrc": "3472:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:20",
														"nodeType": "YulTypedName",
														"src": "3113:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:20",
														"nodeType": "YulTypedName",
														"src": "3124:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:20",
														"nodeType": "YulTypedName",
														"src": "3136:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:20",
														"nodeType": "YulTypedName",
														"src": "3144:6:20",
														"type": ""
													}
												],
												"src": "3068:474:20"
											},
											{
												"body": {
													"nativeSrc": "3614:263:20",
													"nodeType": "YulBlock",
													"src": "3614:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3660:83:20",
																"nodeType": "YulBlock",
																"src": "3660:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3662:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3662:77:20"
																			},
																			"nativeSrc": "3662:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3662:79:20"
																		},
																		"nativeSrc": "3662:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3662:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3635:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3635:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3644:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3631:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:20"
																		},
																		"nativeSrc": "3631:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3631:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3656:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3627:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:20"
																},
																"nativeSrc": "3627:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3627:32:20"
															},
															"nativeSrc": "3624:119:20",
															"nodeType": "YulIf",
															"src": "3624:119:20"
														},
														{
															"nativeSrc": "3753:117:20",
															"nodeType": "YulBlock",
															"src": "3753:117:20",
															"statements": [
																{
																	"nativeSrc": "3768:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3768:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3782:1:20",
																		"nodeType": "YulLiteral",
																		"src": "3782:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3772:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3772:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3797:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3797:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3832:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3843:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:20"
																				},
																				"nativeSrc": "3828:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3852:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3807:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:20"
																		},
																		"nativeSrc": "3807:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3797:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3548:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3584:9:20",
														"nodeType": "YulTypedName",
														"src": "3584:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3595:7:20",
														"nodeType": "YulTypedName",
														"src": "3595:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3607:6:20",
														"nodeType": "YulTypedName",
														"src": "3607:6:20",
														"type": ""
													}
												],
												"src": "3548:329:20"
											},
											{
												"body": {
													"nativeSrc": "3966:391:20",
													"nodeType": "YulBlock",
													"src": "3966:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4012:83:20",
																"nodeType": "YulBlock",
																"src": "4012:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4014:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "4014:77:20"
																			},
																			"nativeSrc": "4014:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4014:79:20"
																		},
																		"nativeSrc": "4014:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4014:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3987:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3987:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3996:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3983:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:20"
																		},
																		"nativeSrc": "3983:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3983:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4008:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3979:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:20"
																},
																"nativeSrc": "3979:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3979:32:20"
															},
															"nativeSrc": "3976:119:20",
															"nodeType": "YulIf",
															"src": "3976:119:20"
														},
														{
															"nativeSrc": "4105:117:20",
															"nodeType": "YulBlock",
															"src": "4105:117:20",
															"statements": [
																{
																	"nativeSrc": "4120:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4120:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4134:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4134:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4124:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4124:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4149:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4149:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4184:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4184:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4195:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4195:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4180:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4180:3:20"
																				},
																				"nativeSrc": "4180:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4180:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4204:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4204:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4159:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4159:20:20"
																		},
																		"nativeSrc": "4159:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4159:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4149:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4149:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4232:118:20",
															"nodeType": "YulBlock",
															"src": "4232:118:20",
															"statements": [
																{
																	"nativeSrc": "4247:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4247:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4261:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4251:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4251:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4277:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4277:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4312:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4312:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4323:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4323:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4308:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4308:3:20"
																				},
																				"nativeSrc": "4308:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4308:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4332:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4332:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4287:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4287:20:20"
																		},
																		"nativeSrc": "4287:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4287:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4277:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4277:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3883:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3928:9:20",
														"nodeType": "YulTypedName",
														"src": "3928:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3939:7:20",
														"nodeType": "YulTypedName",
														"src": "3939:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3951:6:20",
														"nodeType": "YulTypedName",
														"src": "3951:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3959:6:20",
														"nodeType": "YulTypedName",
														"src": "3959:6:20",
														"type": ""
													}
												],
												"src": "3883:474:20"
											},
											{
												"body": {
													"nativeSrc": "4452:28:20",
													"nodeType": "YulBlock",
													"src": "4452:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4469:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4469:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4472:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4472:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4462:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4462:6:20"
																},
																"nativeSrc": "4462:12:20",
																"nodeType": "YulFunctionCall",
																"src": "4462:12:20"
															},
															"nativeSrc": "4462:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "4462:12:20"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4363:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "4363:117:20"
											},
											{
												"body": {
													"nativeSrc": "4575:28:20",
													"nodeType": "YulBlock",
													"src": "4575:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4592:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4592:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4595:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4595:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4585:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:20"
																},
																"nativeSrc": "4585:12:20",
																"nodeType": "YulFunctionCall",
																"src": "4585:12:20"
															},
															"nativeSrc": "4585:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "4585:12:20"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4486:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "4486:117:20"
											},
											{
												"body": {
													"nativeSrc": "4657:54:20",
													"nodeType": "YulBlock",
													"src": "4657:54:20",
													"statements": [
														{
															"nativeSrc": "4667:38:20",
															"nodeType": "YulAssignment",
															"src": "4667:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4685:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4685:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4692:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4681:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:20"
																		},
																		"nativeSrc": "4681:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4681:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4701:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4701:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4697:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:20"
																		},
																		"nativeSrc": "4697:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4697:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4677:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4677:3:20"
																},
																"nativeSrc": "4677:28:20",
																"nodeType": "YulFunctionCall",
																"src": "4677:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4667:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4609:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4640:5:20",
														"nodeType": "YulTypedName",
														"src": "4640:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4650:6:20",
														"nodeType": "YulTypedName",
														"src": "4650:6:20",
														"type": ""
													}
												],
												"src": "4609:102:20"
											},
											{
												"body": {
													"nativeSrc": "4745:152:20",
													"nodeType": "YulBlock",
													"src": "4745:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4762:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4762:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4765:77:20",
																		"nodeType": "YulLiteral",
																		"src": "4765:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:20"
																},
																"nativeSrc": "4755:88:20",
																"nodeType": "YulFunctionCall",
																"src": "4755:88:20"
															},
															"nativeSrc": "4755:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "4755:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4859:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4859:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4862:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4862:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4852:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:20"
																},
																"nativeSrc": "4852:15:20",
																"nodeType": "YulFunctionCall",
																"src": "4852:15:20"
															},
															"nativeSrc": "4852:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "4852:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4883:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4883:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4886:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4886:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4876:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:20"
																},
																"nativeSrc": "4876:15:20",
																"nodeType": "YulFunctionCall",
																"src": "4876:15:20"
															},
															"nativeSrc": "4876:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "4876:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4717:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "4717:180:20"
											},
											{
												"body": {
													"nativeSrc": "4946:238:20",
													"nodeType": "YulBlock",
													"src": "4946:238:20",
													"statements": [
														{
															"nativeSrc": "4956:58:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4956:58:20",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4978:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4978:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5008:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "5008:4:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4986:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "4986:21:20"
																		},
																		"nativeSrc": "4986:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:27:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4974:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:20"
																},
																"nativeSrc": "4974:40:20",
																"nodeType": "YulFunctionCall",
																"src": "4974:40:20"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4960:10:20",
																	"nodeType": "YulTypedName",
																	"src": "4960:10:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5125:22:20",
																"nodeType": "YulBlock",
																"src": "5125:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5127:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "5127:16:20"
																			},
																			"nativeSrc": "5127:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5127:18:20"
																		},
																		"nativeSrc": "5127:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5127:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5068:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "5068:10:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5080:18:20",
																				"nodeType": "YulLiteral",
																				"src": "5080:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5065:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "5065:2:20"
																		},
																		"nativeSrc": "5065:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5065:34:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5104:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "5104:10:20"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5116:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5116:6:20"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5101:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "5101:2:20"
																		},
																		"nativeSrc": "5101:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5101:22:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5062:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "5062:2:20"
																},
																"nativeSrc": "5062:62:20",
																"nodeType": "YulFunctionCall",
																"src": "5062:62:20"
															},
															"nativeSrc": "5059:88:20",
															"nodeType": "YulIf",
															"src": "5059:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5163:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5163:2:20",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5167:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "5167:10:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:20"
																},
																"nativeSrc": "5156:22:20",
																"nodeType": "YulFunctionCall",
																"src": "5156:22:20"
															},
															"nativeSrc": "5156:22:20",
															"nodeType": "YulExpressionStatement",
															"src": "5156:22:20"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4903:281:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4932:6:20",
														"nodeType": "YulTypedName",
														"src": "4932:6:20",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4940:4:20",
														"nodeType": "YulTypedName",
														"src": "4940:4:20",
														"type": ""
													}
												],
												"src": "4903:281:20"
											},
											{
												"body": {
													"nativeSrc": "5231:88:20",
													"nodeType": "YulBlock",
													"src": "5231:88:20",
													"statements": [
														{
															"nativeSrc": "5241:30:20",
															"nodeType": "YulAssignment",
															"src": "5241:30:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5251:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "5251:18:20"
																},
																"nativeSrc": "5251:20:20",
																"nodeType": "YulFunctionCall",
																"src": "5251:20:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5241:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5300:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5300:6:20"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5308:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "5308:4:20"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5280:19:20",
																	"nodeType": "YulIdentifier",
																	"src": "5280:19:20"
																},
																"nativeSrc": "5280:33:20",
																"nodeType": "YulFunctionCall",
																"src": "5280:33:20"
															},
															"nativeSrc": "5280:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "5280:33:20"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5190:129:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5215:4:20",
														"nodeType": "YulTypedName",
														"src": "5215:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5224:6:20",
														"nodeType": "YulTypedName",
														"src": "5224:6:20",
														"type": ""
													}
												],
												"src": "5190:129:20"
											},
											{
												"body": {
													"nativeSrc": "5391:241:20",
													"nodeType": "YulBlock",
													"src": "5391:241:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "5496:22:20",
																"nodeType": "YulBlock",
																"src": "5496:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5498:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "5498:16:20"
																			},
																			"nativeSrc": "5498:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5498:18:20"
																		},
																		"nativeSrc": "5498:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5498:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5468:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5468:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5476:18:20",
																		"nodeType": "YulLiteral",
																		"src": "5476:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5465:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "5465:2:20"
																},
																"nativeSrc": "5465:30:20",
																"nodeType": "YulFunctionCall",
																"src": "5465:30:20"
															},
															"nativeSrc": "5462:56:20",
															"nodeType": "YulIf",
															"src": "5462:56:20"
														},
														{
															"nativeSrc": "5528:37:20",
															"nodeType": "YulAssignment",
															"src": "5528:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5558:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5558:6:20"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5536:21:20",
																	"nodeType": "YulIdentifier",
																	"src": "5536:21:20"
																},
																"nativeSrc": "5536:29:20",
																"nodeType": "YulFunctionCall",
																"src": "5536:29:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5528:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5528:4:20"
																}
															]
														},
														{
															"nativeSrc": "5602:23:20",
															"nodeType": "YulAssignment",
															"src": "5602:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5614:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "5614:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5620:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5620:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5610:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:20"
																},
																"nativeSrc": "5610:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5610:15:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5602:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5602:4:20"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "5325:307:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5375:6:20",
														"nodeType": "YulTypedName",
														"src": "5375:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5386:4:20",
														"nodeType": "YulTypedName",
														"src": "5386:4:20",
														"type": ""
													}
												],
												"src": "5325:307:20"
											},
											{
												"body": {
													"nativeSrc": "5702:84:20",
													"nodeType": "YulBlock",
													"src": "5702:84:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5726:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5726:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5731:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5731:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5736:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5736:6:20"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5713:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "5713:12:20"
																},
																"nativeSrc": "5713:30:20",
																"nodeType": "YulFunctionCall",
																"src": "5713:30:20"
															},
															"nativeSrc": "5713:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "5713:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5763:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "5763:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5768:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5768:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5759:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:20"
																		},
																		"nativeSrc": "5759:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5759:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5777:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5777:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5752:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5752:6:20"
																},
																"nativeSrc": "5752:27:20",
																"nodeType": "YulFunctionCall",
																"src": "5752:27:20"
															},
															"nativeSrc": "5752:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "5752:27:20"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5638:148:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5684:3:20",
														"nodeType": "YulTypedName",
														"src": "5684:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5689:3:20",
														"nodeType": "YulTypedName",
														"src": "5689:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5694:6:20",
														"nodeType": "YulTypedName",
														"src": "5694:6:20",
														"type": ""
													}
												],
												"src": "5638:148:20"
											},
											{
												"body": {
													"nativeSrc": "5875:340:20",
													"nodeType": "YulBlock",
													"src": "5875:340:20",
													"statements": [
														{
															"nativeSrc": "5885:74:20",
															"nodeType": "YulAssignment",
															"src": "5885:74:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5951:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5951:6:20"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "5910:40:20",
																			"nodeType": "YulIdentifier",
																			"src": "5910:40:20"
																		},
																		"nativeSrc": "5910:48:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5910:48:20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5894:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "5894:15:20"
																},
																"nativeSrc": "5894:65:20",
																"nodeType": "YulFunctionCall",
																"src": "5894:65:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5885:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "5885:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5975:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5975:5:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5982:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5982:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5968:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5968:6:20"
																},
																"nativeSrc": "5968:21:20",
																"nodeType": "YulFunctionCall",
																"src": "5968:21:20"
															},
															"nativeSrc": "5968:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "5968:21:20"
														},
														{
															"nativeSrc": "5998:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "5998:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6013:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "6013:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6020:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6020:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6009:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6009:3:20"
																},
																"nativeSrc": "6009:16:20",
																"nodeType": "YulFunctionCall",
																"src": "6009:16:20"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6002:3:20",
																	"nodeType": "YulTypedName",
																	"src": "6002:3:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6063:83:20",
																"nodeType": "YulBlock",
																"src": "6063:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6065:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6065:77:20"
																			},
																			"nativeSrc": "6065:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6065:79:20"
																		},
																		"nativeSrc": "6065:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6065:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6044:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "6044:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6049:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6049:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6040:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:20"
																		},
																		"nativeSrc": "6040:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6040:16:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6058:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6058:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6037:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "6037:2:20"
																},
																"nativeSrc": "6037:25:20",
																"nodeType": "YulFunctionCall",
																"src": "6037:25:20"
															},
															"nativeSrc": "6034:112:20",
															"nodeType": "YulIf",
															"src": "6034:112:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6192:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6192:3:20"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6197:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6197:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6202:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6202:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6155:36:20",
																	"nodeType": "YulIdentifier",
																	"src": "6155:36:20"
																},
																"nativeSrc": "6155:54:20",
																"nodeType": "YulFunctionCall",
																"src": "6155:54:20"
															},
															"nativeSrc": "6155:54:20",
															"nodeType": "YulExpressionStatement",
															"src": "6155:54:20"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "5792:423:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5848:3:20",
														"nodeType": "YulTypedName",
														"src": "5848:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5853:6:20",
														"nodeType": "YulTypedName",
														"src": "5853:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5861:3:20",
														"nodeType": "YulTypedName",
														"src": "5861:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5869:5:20",
														"nodeType": "YulTypedName",
														"src": "5869:5:20",
														"type": ""
													}
												],
												"src": "5792:423:20"
											},
											{
												"body": {
													"nativeSrc": "6295:277:20",
													"nodeType": "YulBlock",
													"src": "6295:277:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6344:83:20",
																"nodeType": "YulBlock",
																"src": "6344:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6346:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6346:77:20"
																			},
																			"nativeSrc": "6346:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6346:79:20"
																		},
																		"nativeSrc": "6346:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6323:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "6323:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6331:4:20",
																						"nodeType": "YulLiteral",
																						"src": "6331:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6319:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6319:3:20"
																				},
																				"nativeSrc": "6319:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6319:17:20"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6338:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "6338:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6315:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:20"
																		},
																		"nativeSrc": "6315:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6308:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:20"
																},
																"nativeSrc": "6308:35:20",
																"nodeType": "YulFunctionCall",
																"src": "6308:35:20"
															},
															"nativeSrc": "6305:122:20",
															"nodeType": "YulIf",
															"src": "6305:122:20"
														},
														{
															"nativeSrc": "6436:34:20",
															"nodeType": "YulVariableDeclaration",
															"src": "6436:34:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6463:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6463:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6450:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "6450:12:20"
																},
																"nativeSrc": "6450:20:20",
																"nodeType": "YulFunctionCall",
																"src": "6450:20:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6440:6:20",
																	"nodeType": "YulTypedName",
																	"src": "6440:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6479:87:20",
															"nodeType": "YulAssignment",
															"src": "6479:87:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6539:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6539:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6547:4:20",
																				"nodeType": "YulLiteral",
																				"src": "6547:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6535:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6535:3:20"
																		},
																		"nativeSrc": "6535:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6535:17:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6554:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6554:6:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6562:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6562:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "6488:46:20",
																	"nodeType": "YulIdentifier",
																	"src": "6488:46:20"
																},
																"nativeSrc": "6488:78:20",
																"nodeType": "YulFunctionCall",
																"src": "6488:78:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6479:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "6479:5:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "6234:338:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6273:6:20",
														"nodeType": "YulTypedName",
														"src": "6273:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6281:3:20",
														"nodeType": "YulTypedName",
														"src": "6281:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6289:5:20",
														"nodeType": "YulTypedName",
														"src": "6289:5:20",
														"type": ""
													}
												],
												"src": "6234:338:20"
											},
											{
												"body": {
													"nativeSrc": "6670:560:20",
													"nodeType": "YulBlock",
													"src": "6670:560:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6716:83:20",
																"nodeType": "YulBlock",
																"src": "6716:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6718:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6718:77:20"
																			},
																			"nativeSrc": "6718:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6718:79:20"
																		},
																		"nativeSrc": "6718:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6718:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6691:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6691:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6700:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6700:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6687:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:20"
																		},
																		"nativeSrc": "6687:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6687:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6712:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6683:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6683:3:20"
																},
																"nativeSrc": "6683:32:20",
																"nodeType": "YulFunctionCall",
																"src": "6683:32:20"
															},
															"nativeSrc": "6680:119:20",
															"nodeType": "YulIf",
															"src": "6680:119:20"
														},
														{
															"nativeSrc": "6809:117:20",
															"nodeType": "YulBlock",
															"src": "6809:117:20",
															"statements": [
																{
																	"nativeSrc": "6824:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:1:20",
																		"nodeType": "YulLiteral",
																		"src": "6838:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:20",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6853:63:20",
																	"nodeType": "YulAssignment",
																	"src": "6853:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6888:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "6888:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6899:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "6899:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6884:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6884:3:20"
																				},
																				"nativeSrc": "6884:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6884:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6908:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6908:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6863:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "6863:20:20"
																		},
																		"nativeSrc": "6863:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6863:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6853:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "6853:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6936:287:20",
															"nodeType": "YulBlock",
															"src": "6936:287:20",
															"statements": [
																{
																	"nativeSrc": "6951:46:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6951:46:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6982:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "6982:9:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6993:2:20",
																						"nodeType": "YulLiteral",
																						"src": "6993:2:20",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6978:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6978:3:20"
																				},
																				"nativeSrc": "6978:18:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6978:18:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6965:12:20",
																			"nodeType": "YulIdentifier",
																			"src": "6965:12:20"
																		},
																		"nativeSrc": "6965:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6965:32:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6955:6:20",
																			"nodeType": "YulTypedName",
																			"src": "6955:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7044:83:20",
																		"nodeType": "YulBlock",
																		"src": "7044:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7046:77:20",
																						"nodeType": "YulIdentifier",
																						"src": "7046:77:20"
																					},
																					"nativeSrc": "7046:79:20",
																					"nodeType": "YulFunctionCall",
																					"src": "7046:79:20"
																				},
																				"nativeSrc": "7046:79:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "7046:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7016:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7016:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7024:18:20",
																				"nodeType": "YulLiteral",
																				"src": "7024:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7013:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "7013:2:20"
																		},
																		"nativeSrc": "7013:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:30:20"
																	},
																	"nativeSrc": "7010:117:20",
																	"nodeType": "YulIf",
																	"src": "7010:117:20"
																},
																{
																	"nativeSrc": "7141:72:20",
																	"nodeType": "YulAssignment",
																	"src": "7141:72:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7185:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "7185:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7196:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "7196:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7181:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7181:3:20"
																				},
																				"nativeSrc": "7181:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7181:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7205:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "7205:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "7151:29:20",
																			"nodeType": "YulIdentifier",
																			"src": "7151:29:20"
																		},
																		"nativeSrc": "7151:62:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7151:62:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7141:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "7141:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "6578:652:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6632:9:20",
														"nodeType": "YulTypedName",
														"src": "6632:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6643:7:20",
														"nodeType": "YulTypedName",
														"src": "6643:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6655:6:20",
														"nodeType": "YulTypedName",
														"src": "6655:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6663:6:20",
														"nodeType": "YulTypedName",
														"src": "6663:6:20",
														"type": ""
													}
												],
												"src": "6578:652:20"
											},
											{
												"body": {
													"nativeSrc": "7318:229:20",
													"nodeType": "YulBlock",
													"src": "7318:229:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "7423:22:20",
																"nodeType": "YulBlock",
																"src": "7423:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7425:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "7425:16:20"
																			},
																			"nativeSrc": "7425:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7425:18:20"
																		},
																		"nativeSrc": "7425:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7425:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7395:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7395:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7403:18:20",
																		"nodeType": "YulLiteral",
																		"src": "7403:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7392:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7392:2:20"
																},
																"nativeSrc": "7392:30:20",
																"nodeType": "YulFunctionCall",
																"src": "7392:30:20"
															},
															"nativeSrc": "7389:56:20",
															"nodeType": "YulIf",
															"src": "7389:56:20"
														},
														{
															"nativeSrc": "7455:25:20",
															"nodeType": "YulAssignment",
															"src": "7455:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7467:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7467:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7475:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7463:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:20"
																},
																"nativeSrc": "7463:17:20",
																"nodeType": "YulFunctionCall",
																"src": "7463:17:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7455:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7455:4:20"
																}
															]
														},
														{
															"nativeSrc": "7517:23:20",
															"nodeType": "YulAssignment",
															"src": "7517:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7529:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7529:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7535:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7535:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7525:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:20"
																},
																"nativeSrc": "7525:15:20",
																"nodeType": "YulFunctionCall",
																"src": "7525:15:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7517:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7517:4:20"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7236:311:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7302:6:20",
														"nodeType": "YulTypedName",
														"src": "7302:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7313:4:20",
														"nodeType": "YulTypedName",
														"src": "7313:4:20",
														"type": ""
													}
												],
												"src": "7236:311:20"
											},
											{
												"body": {
													"nativeSrc": "7642:28:20",
													"nodeType": "YulBlock",
													"src": "7642:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7659:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7659:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7662:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7662:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7652:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7652:6:20"
																},
																"nativeSrc": "7652:12:20",
																"nodeType": "YulFunctionCall",
																"src": "7652:12:20"
															},
															"nativeSrc": "7652:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "7652:12:20"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7553:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "7553:117:20"
											},
											{
												"body": {
													"nativeSrc": "7795:608:20",
													"nodeType": "YulBlock",
													"src": "7795:608:20",
													"statements": [
														{
															"nativeSrc": "7805:90:20",
															"nodeType": "YulAssignment",
															"src": "7805:90:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7887:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7887:6:20"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "7830:56:20",
																			"nodeType": "YulIdentifier",
																			"src": "7830:56:20"
																		},
																		"nativeSrc": "7830:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7830:64:20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7814:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "7814:15:20"
																},
																"nativeSrc": "7814:81:20",
																"nodeType": "YulFunctionCall",
																"src": "7814:81:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7805:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7805:5:20"
																}
															]
														},
														{
															"nativeSrc": "7904:16:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7904:16:20",
															"value": {
																"name": "array",
																"nativeSrc": "7915:5:20",
																"nodeType": "YulIdentifier",
																"src": "7915:5:20"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7908:3:20",
																	"nodeType": "YulTypedName",
																	"src": "7908:3:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7937:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7937:5:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7944:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7944:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7930:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7930:6:20"
																},
																"nativeSrc": "7930:21:20",
																"nodeType": "YulFunctionCall",
																"src": "7930:21:20"
															},
															"nativeSrc": "7930:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "7930:21:20"
														},
														{
															"nativeSrc": "7960:23:20",
															"nodeType": "YulAssignment",
															"src": "7960:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7971:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7971:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7978:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7978:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7967:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7967:3:20"
																},
																"nativeSrc": "7967:16:20",
																"nodeType": "YulFunctionCall",
																"src": "7967:16:20"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7960:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7960:3:20"
																}
															]
														},
														{
															"nativeSrc": "7993:44:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7993:44:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8011:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8011:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8023:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8023:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8031:4:20",
																				"nodeType": "YulLiteral",
																				"src": "8031:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8019:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8019:3:20"
																		},
																		"nativeSrc": "8019:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8019:17:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8007:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8007:3:20"
																},
																"nativeSrc": "8007:30:20",
																"nodeType": "YulFunctionCall",
																"src": "8007:30:20"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7997:6:20",
																	"nodeType": "YulTypedName",
																	"src": "7997:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8065:103:20",
																"nodeType": "YulBlock",
																"src": "8065:103:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8079:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "8079:77:20"
																			},
																			"nativeSrc": "8079:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:79:20"
																		},
																		"nativeSrc": "8079:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8079:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8052:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8052:6:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8060:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8060:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8049:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "8049:2:20"
																},
																"nativeSrc": "8049:15:20",
																"nodeType": "YulFunctionCall",
																"src": "8049:15:20"
															},
															"nativeSrc": "8046:122:20",
															"nodeType": "YulIf",
															"src": "8046:122:20"
														},
														{
															"body": {
																"nativeSrc": "8253:144:20",
																"nodeType": "YulBlock",
																"src": "8253:144:20",
																"statements": [
																	{
																		"nativeSrc": "8268:21:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8268:21:20",
																		"value": {
																			"name": "src",
																			"nativeSrc": "8286:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:20"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "8272:10:20",
																				"nodeType": "YulTypedName",
																				"src": "8272:10:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8310:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "8310:3:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "8336:10:20",
																							"nodeType": "YulIdentifier",
																							"src": "8336:10:20"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "8348:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "8348:3:20"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "8315:20:20",
																						"nodeType": "YulIdentifier",
																						"src": "8315:20:20"
																					},
																					"nativeSrc": "8315:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "8315:37:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8303:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8303:6:20"
																			},
																			"nativeSrc": "8303:50:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8303:50:20"
																		},
																		"nativeSrc": "8303:50:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8303:50:20"
																	},
																	{
																		"nativeSrc": "8366:21:20",
																		"nodeType": "YulAssignment",
																		"src": "8366:21:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8377:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "8377:3:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8382:4:20",
																					"nodeType": "YulLiteral",
																					"src": "8382:4:20",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8373:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "8373:3:20"
																			},
																			"nativeSrc": "8373:14:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8373:14:20"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8366:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "8366:3:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8206:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8206:3:20"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8211:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8211:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8203:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "8203:2:20"
																},
																"nativeSrc": "8203:15:20",
																"nodeType": "YulFunctionCall",
																"src": "8203:15:20"
															},
															"nativeSrc": "8177:220:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8219:25:20",
																"nodeType": "YulBlock",
																"src": "8219:25:20",
																"statements": [
																	{
																		"nativeSrc": "8221:21:20",
																		"nodeType": "YulAssignment",
																		"src": "8221:21:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8232:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "8232:3:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8237:4:20",
																					"nodeType": "YulLiteral",
																					"src": "8237:4:20",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8228:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:20"
																			},
																			"nativeSrc": "8228:14:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8228:14:20"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "8221:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "8221:3:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8181:21:20",
																"nodeType": "YulBlock",
																"src": "8181:21:20",
																"statements": [
																	{
																		"nativeSrc": "8183:17:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8183:17:20",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "8194:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "8194:6:20"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "8187:3:20",
																				"nodeType": "YulTypedName",
																				"src": "8187:3:20",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8177:220:20"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7693:710:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7765:6:20",
														"nodeType": "YulTypedName",
														"src": "7765:6:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7773:6:20",
														"nodeType": "YulTypedName",
														"src": "7773:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7781:3:20",
														"nodeType": "YulTypedName",
														"src": "7781:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7789:5:20",
														"nodeType": "YulTypedName",
														"src": "7789:5:20",
														"type": ""
													}
												],
												"src": "7693:710:20"
											},
											{
												"body": {
													"nativeSrc": "8503:293:20",
													"nodeType": "YulBlock",
													"src": "8503:293:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "8552:83:20",
																"nodeType": "YulBlock",
																"src": "8552:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8554:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "8554:77:20"
																			},
																			"nativeSrc": "8554:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8554:79:20"
																		},
																		"nativeSrc": "8554:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8554:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8531:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "8531:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8539:4:20",
																						"nodeType": "YulLiteral",
																						"src": "8539:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8527:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "8527:3:20"
																				},
																				"nativeSrc": "8527:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "8527:17:20"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8546:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "8546:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8523:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:20"
																		},
																		"nativeSrc": "8523:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8523:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8516:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8516:6:20"
																},
																"nativeSrc": "8516:35:20",
																"nodeType": "YulFunctionCall",
																"src": "8516:35:20"
															},
															"nativeSrc": "8513:122:20",
															"nodeType": "YulIf",
															"src": "8513:122:20"
														},
														{
															"nativeSrc": "8644:34:20",
															"nodeType": "YulVariableDeclaration",
															"src": "8644:34:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8671:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8671:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8658:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "8658:12:20"
																},
																"nativeSrc": "8658:20:20",
																"nodeType": "YulFunctionCall",
																"src": "8658:20:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8648:6:20",
																	"nodeType": "YulTypedName",
																	"src": "8648:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8687:103:20",
															"nodeType": "YulAssignment",
															"src": "8687:103:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8763:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8763:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8771:4:20",
																				"nodeType": "YulLiteral",
																				"src": "8771:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8759:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8759:3:20"
																		},
																		"nativeSrc": "8759:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8759:17:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8778:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8778:6:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8786:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8786:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8696:62:20",
																	"nodeType": "YulIdentifier",
																	"src": "8696:62:20"
																},
																"nativeSrc": "8696:94:20",
																"nodeType": "YulFunctionCall",
																"src": "8696:94:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8687:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "8687:5:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8426:370:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8481:6:20",
														"nodeType": "YulTypedName",
														"src": "8481:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8489:3:20",
														"nodeType": "YulTypedName",
														"src": "8489:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8497:5:20",
														"nodeType": "YulTypedName",
														"src": "8497:5:20",
														"type": ""
													}
												],
												"src": "8426:370:20"
											},
											{
												"body": {
													"nativeSrc": "8893:448:20",
													"nodeType": "YulBlock",
													"src": "8893:448:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "8939:83:20",
																"nodeType": "YulBlock",
																"src": "8939:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8941:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "8941:77:20"
																			},
																			"nativeSrc": "8941:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8941:79:20"
																		},
																		"nativeSrc": "8941:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8941:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8914:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "8914:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8923:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8923:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8910:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8910:3:20"
																		},
																		"nativeSrc": "8910:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8910:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8935:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8935:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8906:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8906:3:20"
																},
																"nativeSrc": "8906:32:20",
																"nodeType": "YulFunctionCall",
																"src": "8906:32:20"
															},
															"nativeSrc": "8903:119:20",
															"nodeType": "YulIf",
															"src": "8903:119:20"
														},
														{
															"nativeSrc": "9032:302:20",
															"nodeType": "YulBlock",
															"src": "9032:302:20",
															"statements": [
																{
																	"nativeSrc": "9047:45:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9047:45:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9078:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9078:9:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9089:1:20",
																						"nodeType": "YulLiteral",
																						"src": "9089:1:20",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9074:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9074:3:20"
																				},
																				"nativeSrc": "9074:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9074:17:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9061:12:20",
																			"nodeType": "YulIdentifier",
																			"src": "9061:12:20"
																		},
																		"nativeSrc": "9061:31:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9061:31:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9051:6:20",
																			"nodeType": "YulTypedName",
																			"src": "9051:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9139:83:20",
																		"nodeType": "YulBlock",
																		"src": "9139:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9141:77:20",
																						"nodeType": "YulIdentifier",
																						"src": "9141:77:20"
																					},
																					"nativeSrc": "9141:79:20",
																					"nodeType": "YulFunctionCall",
																					"src": "9141:79:20"
																				},
																				"nativeSrc": "9141:79:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "9141:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9111:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9111:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9119:18:20",
																				"nodeType": "YulLiteral",
																				"src": "9119:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9108:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "9108:2:20"
																		},
																		"nativeSrc": "9108:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9108:30:20"
																	},
																	"nativeSrc": "9105:117:20",
																	"nodeType": "YulIf",
																	"src": "9105:117:20"
																},
																{
																	"nativeSrc": "9236:88:20",
																	"nodeType": "YulAssignment",
																	"src": "9236:88:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9296:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9296:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9307:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9307:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9292:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9292:3:20"
																				},
																				"nativeSrc": "9292:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9292:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9316:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9316:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "9246:45:20",
																			"nodeType": "YulIdentifier",
																			"src": "9246:45:20"
																		},
																		"nativeSrc": "9246:78:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9246:78:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9236:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "9236:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8802:539:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8863:9:20",
														"nodeType": "YulTypedName",
														"src": "8863:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8874:7:20",
														"nodeType": "YulTypedName",
														"src": "8874:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8886:6:20",
														"nodeType": "YulTypedName",
														"src": "8886:6:20",
														"type": ""
													}
												],
												"src": "8802:539:20"
											},
											{
												"body": {
													"nativeSrc": "9392:32:20",
													"nodeType": "YulBlock",
													"src": "9392:32:20",
													"statements": [
														{
															"nativeSrc": "9402:16:20",
															"nodeType": "YulAssignment",
															"src": "9402:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "9413:5:20",
																"nodeType": "YulIdentifier",
																"src": "9413:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9402:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "9402:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "9347:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9374:5:20",
														"nodeType": "YulTypedName",
														"src": "9374:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9384:7:20",
														"nodeType": "YulTypedName",
														"src": "9384:7:20",
														"type": ""
													}
												],
												"src": "9347:77:20"
											},
											{
												"body": {
													"nativeSrc": "9495:53:20",
													"nodeType": "YulBlock",
													"src": "9495:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9512:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9512:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9535:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "9535:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9517:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "9517:17:20"
																		},
																		"nativeSrc": "9517:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9517:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9505:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9505:6:20"
																},
																"nativeSrc": "9505:37:20",
																"nodeType": "YulFunctionCall",
																"src": "9505:37:20"
															},
															"nativeSrc": "9505:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "9505:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9430:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9483:5:20",
														"nodeType": "YulTypedName",
														"src": "9483:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9490:3:20",
														"nodeType": "YulTypedName",
														"src": "9490:3:20",
														"type": ""
													}
												],
												"src": "9430:118:20"
											},
											{
												"body": {
													"nativeSrc": "9652:124:20",
													"nodeType": "YulBlock",
													"src": "9652:124:20",
													"statements": [
														{
															"nativeSrc": "9662:26:20",
															"nodeType": "YulAssignment",
															"src": "9662:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9674:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9674:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9685:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9685:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9670:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9670:3:20"
																},
																"nativeSrc": "9670:18:20",
																"nodeType": "YulFunctionCall",
																"src": "9670:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9662:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9662:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9742:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9742:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9755:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9755:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9766:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9766:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9751:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9751:3:20"
																		},
																		"nativeSrc": "9751:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9751:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9698:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9698:43:20"
																},
																"nativeSrc": "9698:71:20",
																"nodeType": "YulFunctionCall",
																"src": "9698:71:20"
															},
															"nativeSrc": "9698:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "9698:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9554:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9624:9:20",
														"nodeType": "YulTypedName",
														"src": "9624:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9636:6:20",
														"nodeType": "YulTypedName",
														"src": "9636:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9647:4:20",
														"nodeType": "YulTypedName",
														"src": "9647:4:20",
														"type": ""
													}
												],
												"src": "9554:222:20"
											},
											{
												"body": {
													"nativeSrc": "9871:28:20",
													"nodeType": "YulBlock",
													"src": "9871:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9888:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9888:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9891:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9891:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9881:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9881:6:20"
																},
																"nativeSrc": "9881:12:20",
																"nodeType": "YulFunctionCall",
																"src": "9881:12:20"
															},
															"nativeSrc": "9881:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "9881:12:20"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "9782:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "9782:117:20"
											},
											{
												"body": {
													"nativeSrc": "10062:478:20",
													"nodeType": "YulBlock",
													"src": "10062:478:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "10111:83:20",
																"nodeType": "YulBlock",
																"src": "10111:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10113:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "10113:77:20"
																			},
																			"nativeSrc": "10113:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10113:79:20"
																		},
																		"nativeSrc": "10113:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10113:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10090:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10090:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10098:4:20",
																						"nodeType": "YulLiteral",
																						"src": "10098:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10086:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10086:3:20"
																				},
																				"nativeSrc": "10086:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10086:17:20"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10105:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "10105:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10082:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10082:3:20"
																		},
																		"nativeSrc": "10082:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10082:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10075:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:20"
																},
																"nativeSrc": "10075:35:20",
																"nodeType": "YulFunctionCall",
																"src": "10075:35:20"
															},
															"nativeSrc": "10072:122:20",
															"nodeType": "YulIf",
															"src": "10072:122:20"
														},
														{
															"nativeSrc": "10203:30:20",
															"nodeType": "YulAssignment",
															"src": "10203:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10226:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10226:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10213:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "10213:12:20"
																},
																"nativeSrc": "10213:20:20",
																"nodeType": "YulFunctionCall",
																"src": "10213:20:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10203:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10203:6:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10276:83:20",
																"nodeType": "YulBlock",
																"src": "10276:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "10278:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "10278:77:20"
																			},
																			"nativeSrc": "10278:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10278:79:20"
																		},
																		"nativeSrc": "10278:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10278:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10248:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10248:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10256:18:20",
																		"nodeType": "YulLiteral",
																		"src": "10256:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10245:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "10245:2:20"
																},
																"nativeSrc": "10245:30:20",
																"nodeType": "YulFunctionCall",
																"src": "10245:30:20"
															},
															"nativeSrc": "10242:117:20",
															"nodeType": "YulIf",
															"src": "10242:117:20"
														},
														{
															"nativeSrc": "10368:29:20",
															"nodeType": "YulAssignment",
															"src": "10368:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10384:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10384:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10392:4:20",
																		"nodeType": "YulLiteral",
																		"src": "10392:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10380:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10380:3:20"
																},
																"nativeSrc": "10380:17:20",
																"nodeType": "YulFunctionCall",
																"src": "10380:17:20"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "10368:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "10368:8:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10451:83:20",
																"nodeType": "YulBlock",
																"src": "10451:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10453:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "10453:77:20"
																			},
																			"nativeSrc": "10453:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10453:79:20"
																		},
																		"nativeSrc": "10453:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10453:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "10416:8:20",
																				"nodeType": "YulIdentifier",
																				"src": "10416:8:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10430:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10430:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10438:4:20",
																						"nodeType": "YulLiteral",
																						"src": "10438:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10426:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10426:3:20"
																				},
																				"nativeSrc": "10426:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10426:17:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10412:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10412:3:20"
																		},
																		"nativeSrc": "10412:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10412:32:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10446:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10446:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10409:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "10409:2:20"
																},
																"nativeSrc": "10409:41:20",
																"nodeType": "YulFunctionCall",
																"src": "10409:41:20"
															},
															"nativeSrc": "10406:128:20",
															"nodeType": "YulIf",
															"src": "10406:128:20"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "9942:598:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10029:6:20",
														"nodeType": "YulTypedName",
														"src": "10029:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10037:3:20",
														"nodeType": "YulTypedName",
														"src": "10037:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "10045:8:20",
														"nodeType": "YulTypedName",
														"src": "10045:8:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10055:6:20",
														"nodeType": "YulTypedName",
														"src": "10055:6:20",
														"type": ""
													}
												],
												"src": "9942:598:20"
											},
											{
												"body": {
													"nativeSrc": "10677:488:20",
													"nodeType": "YulBlock",
													"src": "10677:488:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "10723:83:20",
																"nodeType": "YulBlock",
																"src": "10723:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10725:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "10725:77:20"
																			},
																			"nativeSrc": "10725:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10725:79:20"
																		},
																		"nativeSrc": "10725:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10725:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10698:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10698:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10707:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10707:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10694:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10694:3:20"
																		},
																		"nativeSrc": "10694:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10694:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10719:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10719:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10690:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10690:3:20"
																},
																"nativeSrc": "10690:32:20",
																"nodeType": "YulFunctionCall",
																"src": "10690:32:20"
															},
															"nativeSrc": "10687:119:20",
															"nodeType": "YulIf",
															"src": "10687:119:20"
														},
														{
															"nativeSrc": "10816:342:20",
															"nodeType": "YulBlock",
															"src": "10816:342:20",
															"statements": [
																{
																	"nativeSrc": "10831:45:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10831:45:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10862:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10862:9:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10873:1:20",
																						"nodeType": "YulLiteral",
																						"src": "10873:1:20",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10858:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10858:3:20"
																				},
																				"nativeSrc": "10858:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10858:17:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10845:12:20",
																			"nodeType": "YulIdentifier",
																			"src": "10845:12:20"
																		},
																		"nativeSrc": "10845:31:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10845:31:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10835:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10835:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10923:83:20",
																		"nodeType": "YulBlock",
																		"src": "10923:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10925:77:20",
																						"nodeType": "YulIdentifier",
																						"src": "10925:77:20"
																					},
																					"nativeSrc": "10925:79:20",
																					"nodeType": "YulFunctionCall",
																					"src": "10925:79:20"
																				},
																				"nativeSrc": "10925:79:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "10925:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10895:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10895:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10903:18:20",
																				"nodeType": "YulLiteral",
																				"src": "10903:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10892:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "10892:2:20"
																		},
																		"nativeSrc": "10892:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10892:30:20"
																	},
																	"nativeSrc": "10889:117:20",
																	"nodeType": "YulIf",
																	"src": "10889:117:20"
																},
																{
																	"nativeSrc": "11020:128:20",
																	"nodeType": "YulAssignment",
																	"src": "11020:128:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11120:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "11120:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11131:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11131:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11116:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11116:3:20"
																				},
																				"nativeSrc": "11116:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11116:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11140:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11140:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr",
																			"nativeSrc": "11038:77:20",
																			"nodeType": "YulIdentifier",
																			"src": "11038:77:20"
																		},
																		"nativeSrc": "11038:110:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11038:110:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11020:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "11020:6:20"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "11028:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "11028:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "10546:619:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10639:9:20",
														"nodeType": "YulTypedName",
														"src": "10639:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10650:7:20",
														"nodeType": "YulTypedName",
														"src": "10650:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10662:6:20",
														"nodeType": "YulTypedName",
														"src": "10662:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10670:6:20",
														"nodeType": "YulTypedName",
														"src": "10670:6:20",
														"type": ""
													}
												],
												"src": "10546:619:20"
											},
											{
												"body": {
													"nativeSrc": "11267:73:20",
													"nodeType": "YulBlock",
													"src": "11267:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11284:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11284:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11289:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11289:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11277:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11277:6:20"
																},
																"nativeSrc": "11277:19:20",
																"nodeType": "YulFunctionCall",
																"src": "11277:19:20"
															},
															"nativeSrc": "11277:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "11277:19:20"
														},
														{
															"nativeSrc": "11305:29:20",
															"nodeType": "YulAssignment",
															"src": "11305:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11324:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11324:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11329:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11329:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11320:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11320:3:20"
																},
																"nativeSrc": "11320:14:20",
																"nodeType": "YulFunctionCall",
																"src": "11320:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11305:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "11305:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11171:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11239:3:20",
														"nodeType": "YulTypedName",
														"src": "11239:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11244:6:20",
														"nodeType": "YulTypedName",
														"src": "11244:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11255:11:20",
														"nodeType": "YulTypedName",
														"src": "11255:11:20",
														"type": ""
													}
												],
												"src": "11171:169:20"
											},
											{
												"body": {
													"nativeSrc": "11452:128:20",
													"nodeType": "YulBlock",
													"src": "11452:128:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11474:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11474:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11482:1:20",
																				"nodeType": "YulLiteral",
																				"src": "11482:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11470:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11470:3:20"
																		},
																		"nativeSrc": "11470:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11470:14:20"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "11486:34:20",
																		"nodeType": "YulLiteral",
																		"src": "11486:34:20",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11463:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11463:6:20"
																},
																"nativeSrc": "11463:58:20",
																"nodeType": "YulFunctionCall",
																"src": "11463:58:20"
															},
															"nativeSrc": "11463:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "11463:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11542:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11542:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11550:2:20",
																				"nodeType": "YulLiteral",
																				"src": "11550:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11538:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11538:3:20"
																		},
																		"nativeSrc": "11538:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11538:15:20"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "11555:17:20",
																		"nodeType": "YulLiteral",
																		"src": "11555:17:20",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11531:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11531:6:20"
																},
																"nativeSrc": "11531:42:20",
																"nodeType": "YulFunctionCall",
																"src": "11531:42:20"
															},
															"nativeSrc": "11531:42:20",
															"nodeType": "YulExpressionStatement",
															"src": "11531:42:20"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nativeSrc": "11346:234:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11444:6:20",
														"nodeType": "YulTypedName",
														"src": "11444:6:20",
														"type": ""
													}
												],
												"src": "11346:234:20"
											},
											{
												"body": {
													"nativeSrc": "11732:220:20",
													"nodeType": "YulBlock",
													"src": "11732:220:20",
													"statements": [
														{
															"nativeSrc": "11742:74:20",
															"nodeType": "YulAssignment",
															"src": "11742:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11808:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11808:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11813:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11813:2:20",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11749:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "11749:58:20"
																},
																"nativeSrc": "11749:67:20",
																"nodeType": "YulFunctionCall",
																"src": "11749:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11742:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11742:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11914:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11914:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nativeSrc": "11825:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "11825:88:20"
																},
																"nativeSrc": "11825:93:20",
																"nodeType": "YulFunctionCall",
																"src": "11825:93:20"
															},
															"nativeSrc": "11825:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "11825:93:20"
														},
														{
															"nativeSrc": "11927:19:20",
															"nodeType": "YulAssignment",
															"src": "11927:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11938:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11943:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11943:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11934:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11934:3:20"
																},
																"nativeSrc": "11934:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11934:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11927:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11927:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11586:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11720:3:20",
														"nodeType": "YulTypedName",
														"src": "11720:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11728:3:20",
														"nodeType": "YulTypedName",
														"src": "11728:3:20",
														"type": ""
													}
												],
												"src": "11586:366:20"
											},
											{
												"body": {
													"nativeSrc": "12129:248:20",
													"nodeType": "YulBlock",
													"src": "12129:248:20",
													"statements": [
														{
															"nativeSrc": "12139:26:20",
															"nodeType": "YulAssignment",
															"src": "12139:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12151:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12151:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12162:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12162:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12147:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12147:3:20"
																},
																"nativeSrc": "12147:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12147:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12139:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12139:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12186:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12186:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12197:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12197:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12182:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12182:3:20"
																		},
																		"nativeSrc": "12182:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12182:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12205:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "12205:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12211:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12211:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12201:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12201:3:20"
																		},
																		"nativeSrc": "12201:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12201:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12175:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12175:6:20"
																},
																"nativeSrc": "12175:47:20",
																"nodeType": "YulFunctionCall",
																"src": "12175:47:20"
															},
															"nativeSrc": "12175:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "12175:47:20"
														},
														{
															"nativeSrc": "12231:139:20",
															"nodeType": "YulAssignment",
															"src": "12231:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12365:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "12365:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12239:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "12239:124:20"
																},
																"nativeSrc": "12239:131:20",
																"nodeType": "YulFunctionCall",
																"src": "12239:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12231:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12231:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11958:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12109:9:20",
														"nodeType": "YulTypedName",
														"src": "12109:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12124:4:20",
														"nodeType": "YulTypedName",
														"src": "12124:4:20",
														"type": ""
													}
												],
												"src": "11958:419:20"
											},
											{
												"body": {
													"nativeSrc": "12489:125:20",
													"nodeType": "YulBlock",
													"src": "12489:125:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12511:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12511:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12519:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12519:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12507:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12507:3:20"
																		},
																		"nativeSrc": "12507:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12507:14:20"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "12523:34:20",
																		"nodeType": "YulLiteral",
																		"src": "12523:34:20",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12500:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12500:6:20"
																},
																"nativeSrc": "12500:58:20",
																"nodeType": "YulFunctionCall",
																"src": "12500:58:20"
															},
															"nativeSrc": "12500:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "12500:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12579:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12579:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12587:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12587:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12575:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12575:3:20"
																		},
																		"nativeSrc": "12575:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12575:15:20"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "12592:14:20",
																		"nodeType": "YulLiteral",
																		"src": "12592:14:20",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12568:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12568:6:20"
																},
																"nativeSrc": "12568:39:20",
																"nodeType": "YulFunctionCall",
																"src": "12568:39:20"
															},
															"nativeSrc": "12568:39:20",
															"nodeType": "YulExpressionStatement",
															"src": "12568:39:20"
														}
													]
												},
												"name": "store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
												"nativeSrc": "12383:231:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12481:6:20",
														"nodeType": "YulTypedName",
														"src": "12481:6:20",
														"type": ""
													}
												],
												"src": "12383:231:20"
											},
											{
												"body": {
													"nativeSrc": "12766:220:20",
													"nodeType": "YulBlock",
													"src": "12766:220:20",
													"statements": [
														{
															"nativeSrc": "12776:74:20",
															"nodeType": "YulAssignment",
															"src": "12776:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12842:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "12842:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12847:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12847:2:20",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12783:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "12783:58:20"
																},
																"nativeSrc": "12783:67:20",
																"nodeType": "YulFunctionCall",
																"src": "12783:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12776:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12776:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12948:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "12948:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																	"nativeSrc": "12859:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "12859:88:20"
																},
																"nativeSrc": "12859:93:20",
																"nodeType": "YulFunctionCall",
																"src": "12859:93:20"
															},
															"nativeSrc": "12859:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "12859:93:20"
														},
														{
															"nativeSrc": "12961:19:20",
															"nodeType": "YulAssignment",
															"src": "12961:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12972:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "12972:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12977:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12977:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12968:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12968:3:20"
																},
																"nativeSrc": "12968:12:20",
																"nodeType": "YulFunctionCall",
																"src": "12968:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12961:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12961:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12620:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12754:3:20",
														"nodeType": "YulTypedName",
														"src": "12754:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12762:3:20",
														"nodeType": "YulTypedName",
														"src": "12762:3:20",
														"type": ""
													}
												],
												"src": "12620:366:20"
											},
											{
												"body": {
													"nativeSrc": "13163:248:20",
													"nodeType": "YulBlock",
													"src": "13163:248:20",
													"statements": [
														{
															"nativeSrc": "13173:26:20",
															"nodeType": "YulAssignment",
															"src": "13173:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13185:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "13185:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13196:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13196:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13181:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13181:3:20"
																},
																"nativeSrc": "13181:18:20",
																"nodeType": "YulFunctionCall",
																"src": "13181:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13173:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13173:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13220:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13220:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13231:1:20",
																				"nodeType": "YulLiteral",
																				"src": "13231:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13216:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13216:3:20"
																		},
																		"nativeSrc": "13216:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13216:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13239:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "13239:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13245:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13245:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13235:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13235:3:20"
																		},
																		"nativeSrc": "13235:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13235:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13209:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13209:6:20"
																},
																"nativeSrc": "13209:47:20",
																"nodeType": "YulFunctionCall",
																"src": "13209:47:20"
															},
															"nativeSrc": "13209:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "13209:47:20"
														},
														{
															"nativeSrc": "13265:139:20",
															"nodeType": "YulAssignment",
															"src": "13265:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13399:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "13399:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13273:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "13273:124:20"
																},
																"nativeSrc": "13273:131:20",
																"nodeType": "YulFunctionCall",
																"src": "13273:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13265:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13265:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12992:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13143:9:20",
														"nodeType": "YulTypedName",
														"src": "13143:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13158:4:20",
														"nodeType": "YulTypedName",
														"src": "13158:4:20",
														"type": ""
													}
												],
												"src": "12992:419:20"
											},
											{
												"body": {
													"nativeSrc": "13523:125:20",
													"nodeType": "YulBlock",
													"src": "13523:125:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13545:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "13545:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13553:1:20",
																				"nodeType": "YulLiteral",
																				"src": "13553:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13541:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13541:3:20"
																		},
																		"nativeSrc": "13541:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13541:14:20"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "13557:34:20",
																		"nodeType": "YulLiteral",
																		"src": "13557:34:20",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13534:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13534:6:20"
																},
																"nativeSrc": "13534:58:20",
																"nodeType": "YulFunctionCall",
																"src": "13534:58:20"
															},
															"nativeSrc": "13534:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "13534:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13613:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13621:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13621:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13609:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13609:3:20"
																		},
																		"nativeSrc": "13609:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13609:15:20"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nativeSrc": "13626:14:20",
																		"nodeType": "YulLiteral",
																		"src": "13626:14:20",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13602:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13602:6:20"
																},
																"nativeSrc": "13602:39:20",
																"nodeType": "YulFunctionCall",
																"src": "13602:39:20"
															},
															"nativeSrc": "13602:39:20",
															"nodeType": "YulExpressionStatement",
															"src": "13602:39:20"
														}
													]
												},
												"name": "store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
												"nativeSrc": "13417:231:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13515:6:20",
														"nodeType": "YulTypedName",
														"src": "13515:6:20",
														"type": ""
													}
												],
												"src": "13417:231:20"
											},
											{
												"body": {
													"nativeSrc": "13800:220:20",
													"nodeType": "YulBlock",
													"src": "13800:220:20",
													"statements": [
														{
															"nativeSrc": "13810:74:20",
															"nodeType": "YulAssignment",
															"src": "13810:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13876:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "13876:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13881:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13881:2:20",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13817:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "13817:58:20"
																},
																"nativeSrc": "13817:67:20",
																"nodeType": "YulFunctionCall",
																"src": "13817:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13810:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13810:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13982:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "13982:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																	"nativeSrc": "13893:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "13893:88:20"
																},
																"nativeSrc": "13893:93:20",
																"nodeType": "YulFunctionCall",
																"src": "13893:93:20"
															},
															"nativeSrc": "13893:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "13893:93:20"
														},
														{
															"nativeSrc": "13995:19:20",
															"nodeType": "YulAssignment",
															"src": "13995:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14006:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "14006:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14011:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14011:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14002:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14002:3:20"
																},
																"nativeSrc": "14002:12:20",
																"nodeType": "YulFunctionCall",
																"src": "14002:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13995:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13995:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13654:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13788:3:20",
														"nodeType": "YulTypedName",
														"src": "13788:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13796:3:20",
														"nodeType": "YulTypedName",
														"src": "13796:3:20",
														"type": ""
													}
												],
												"src": "13654:366:20"
											},
											{
												"body": {
													"nativeSrc": "14197:248:20",
													"nodeType": "YulBlock",
													"src": "14197:248:20",
													"statements": [
														{
															"nativeSrc": "14207:26:20",
															"nodeType": "YulAssignment",
															"src": "14207:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14219:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "14219:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14230:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14230:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14215:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14215:3:20"
																},
																"nativeSrc": "14215:18:20",
																"nodeType": "YulFunctionCall",
																"src": "14215:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14207:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "14207:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14254:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14254:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14265:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14265:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14250:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14250:3:20"
																		},
																		"nativeSrc": "14250:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14250:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14273:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "14273:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14279:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14279:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14269:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14269:3:20"
																		},
																		"nativeSrc": "14269:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14269:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14243:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14243:6:20"
																},
																"nativeSrc": "14243:47:20",
																"nodeType": "YulFunctionCall",
																"src": "14243:47:20"
															},
															"nativeSrc": "14243:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "14243:47:20"
														},
														{
															"nativeSrc": "14299:139:20",
															"nodeType": "YulAssignment",
															"src": "14299:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14433:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "14433:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14307:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "14307:124:20"
																},
																"nativeSrc": "14307:131:20",
																"nodeType": "YulFunctionCall",
																"src": "14307:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14299:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "14299:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14026:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14177:9:20",
														"nodeType": "YulTypedName",
														"src": "14177:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14192:4:20",
														"nodeType": "YulTypedName",
														"src": "14192:4:20",
														"type": ""
													}
												],
												"src": "14026:419:20"
											},
											{
												"body": {
													"nativeSrc": "14557:127:20",
													"nodeType": "YulBlock",
													"src": "14557:127:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14579:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14579:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14587:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14587:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14575:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14575:3:20"
																		},
																		"nativeSrc": "14575:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14575:14:20"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "14591:34:20",
																		"nodeType": "YulLiteral",
																		"src": "14591:34:20",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14568:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14568:6:20"
																},
																"nativeSrc": "14568:58:20",
																"nodeType": "YulFunctionCall",
																"src": "14568:58:20"
															},
															"nativeSrc": "14568:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "14568:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14647:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14647:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14655:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14655:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14643:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14643:3:20"
																		},
																		"nativeSrc": "14643:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14643:15:20"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "14660:16:20",
																		"nodeType": "YulLiteral",
																		"src": "14660:16:20",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14636:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14636:6:20"
																},
																"nativeSrc": "14636:41:20",
																"nodeType": "YulFunctionCall",
																"src": "14636:41:20"
															},
															"nativeSrc": "14636:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "14636:41:20"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nativeSrc": "14451:233:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14549:6:20",
														"nodeType": "YulTypedName",
														"src": "14549:6:20",
														"type": ""
													}
												],
												"src": "14451:233:20"
											},
											{
												"body": {
													"nativeSrc": "14836:220:20",
													"nodeType": "YulBlock",
													"src": "14836:220:20",
													"statements": [
														{
															"nativeSrc": "14846:74:20",
															"nodeType": "YulAssignment",
															"src": "14846:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14912:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "14912:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14917:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14917:2:20",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14853:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "14853:58:20"
																},
																"nativeSrc": "14853:67:20",
																"nodeType": "YulFunctionCall",
																"src": "14853:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14846:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14846:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15018:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "15018:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nativeSrc": "14929:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "14929:88:20"
																},
																"nativeSrc": "14929:93:20",
																"nodeType": "YulFunctionCall",
																"src": "14929:93:20"
															},
															"nativeSrc": "14929:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "14929:93:20"
														},
														{
															"nativeSrc": "15031:19:20",
															"nodeType": "YulAssignment",
															"src": "15031:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15042:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "15042:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15047:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15047:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15038:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15038:3:20"
																},
																"nativeSrc": "15038:12:20",
																"nodeType": "YulFunctionCall",
																"src": "15038:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15031:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15031:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14690:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14824:3:20",
														"nodeType": "YulTypedName",
														"src": "14824:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14832:3:20",
														"nodeType": "YulTypedName",
														"src": "14832:3:20",
														"type": ""
													}
												],
												"src": "14690:366:20"
											},
											{
												"body": {
													"nativeSrc": "15233:248:20",
													"nodeType": "YulBlock",
													"src": "15233:248:20",
													"statements": [
														{
															"nativeSrc": "15243:26:20",
															"nodeType": "YulAssignment",
															"src": "15243:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15255:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "15255:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15266:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15266:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15251:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15251:3:20"
																},
																"nativeSrc": "15251:18:20",
																"nodeType": "YulFunctionCall",
																"src": "15251:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15243:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15243:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15290:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15290:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15301:1:20",
																				"nodeType": "YulLiteral",
																				"src": "15301:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15286:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15286:3:20"
																		},
																		"nativeSrc": "15286:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15286:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15309:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "15309:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15315:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15315:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15305:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15305:3:20"
																		},
																		"nativeSrc": "15305:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15305:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15279:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "15279:6:20"
																},
																"nativeSrc": "15279:47:20",
																"nodeType": "YulFunctionCall",
																"src": "15279:47:20"
															},
															"nativeSrc": "15279:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "15279:47:20"
														},
														{
															"nativeSrc": "15335:139:20",
															"nodeType": "YulAssignment",
															"src": "15335:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15469:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "15469:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15343:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "15343:124:20"
																},
																"nativeSrc": "15343:131:20",
																"nodeType": "YulFunctionCall",
																"src": "15343:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15335:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15335:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15062:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15213:9:20",
														"nodeType": "YulTypedName",
														"src": "15213:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15228:4:20",
														"nodeType": "YulTypedName",
														"src": "15228:4:20",
														"type": ""
													}
												],
												"src": "15062:419:20"
											},
											{
												"body": {
													"nativeSrc": "15540:32:20",
													"nodeType": "YulBlock",
													"src": "15540:32:20",
													"statements": [
														{
															"nativeSrc": "15550:16:20",
															"nodeType": "YulAssignment",
															"src": "15550:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "15561:5:20",
																"nodeType": "YulIdentifier",
																"src": "15561:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15550:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "15550:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "15487:85:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15522:5:20",
														"nodeType": "YulTypedName",
														"src": "15522:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15532:7:20",
														"nodeType": "YulTypedName",
														"src": "15532:7:20",
														"type": ""
													}
												],
												"src": "15487:85:20"
											},
											{
												"body": {
													"nativeSrc": "15621:43:20",
													"nodeType": "YulBlock",
													"src": "15621:43:20",
													"statements": [
														{
															"nativeSrc": "15631:27:20",
															"nodeType": "YulAssignment",
															"src": "15631:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15646:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "15646:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15653:4:20",
																		"nodeType": "YulLiteral",
																		"src": "15653:4:20",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15642:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15642:3:20"
																},
																"nativeSrc": "15642:16:20",
																"nodeType": "YulFunctionCall",
																"src": "15642:16:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15631:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "15631:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "15578:86:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15603:5:20",
														"nodeType": "YulTypedName",
														"src": "15603:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15613:7:20",
														"nodeType": "YulTypedName",
														"src": "15613:7:20",
														"type": ""
													}
												],
												"src": "15578:86:20"
											},
											{
												"body": {
													"nativeSrc": "15702:28:20",
													"nodeType": "YulBlock",
													"src": "15702:28:20",
													"statements": [
														{
															"nativeSrc": "15712:12:20",
															"nodeType": "YulAssignment",
															"src": "15712:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "15719:5:20",
																"nodeType": "YulIdentifier",
																"src": "15719:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15712:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15712:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15670:60:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15688:5:20",
														"nodeType": "YulTypedName",
														"src": "15688:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15698:3:20",
														"nodeType": "YulTypedName",
														"src": "15698:3:20",
														"type": ""
													}
												],
												"src": "15670:60:20"
											},
											{
												"body": {
													"nativeSrc": "15802:88:20",
													"nodeType": "YulBlock",
													"src": "15802:88:20",
													"statements": [
														{
															"nativeSrc": "15812:72:20",
															"nodeType": "YulAssignment",
															"src": "15812:72:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15876:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "15876:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "15850:25:20",
																					"nodeType": "YulIdentifier",
																					"src": "15850:25:20"
																				},
																				"nativeSrc": "15850:32:20",
																				"nodeType": "YulFunctionCall",
																				"src": "15850:32:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15841:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "15841:8:20"
																		},
																		"nativeSrc": "15841:42:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15841:42:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15825:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "15825:15:20"
																},
																"nativeSrc": "15825:59:20",
																"nodeType": "YulFunctionCall",
																"src": "15825:59:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15812:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "15812:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nativeSrc": "15736:154:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15782:5:20",
														"nodeType": "YulTypedName",
														"src": "15782:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15792:9:20",
														"nodeType": "YulTypedName",
														"src": "15792:9:20",
														"type": ""
													}
												],
												"src": "15736:154:20"
											},
											{
												"body": {
													"nativeSrc": "15967:72:20",
													"nodeType": "YulBlock",
													"src": "15967:72:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15984:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "15984:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16026:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "16026:5:20"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nativeSrc": "15989:36:20",
																			"nodeType": "YulIdentifier",
																			"src": "15989:36:20"
																		},
																		"nativeSrc": "15989:43:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15989:43:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15977:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "15977:6:20"
																},
																"nativeSrc": "15977:56:20",
																"nodeType": "YulFunctionCall",
																"src": "15977:56:20"
															},
															"nativeSrc": "15977:56:20",
															"nodeType": "YulExpressionStatement",
															"src": "15977:56:20"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nativeSrc": "15896:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15955:5:20",
														"nodeType": "YulTypedName",
														"src": "15955:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15962:3:20",
														"nodeType": "YulTypedName",
														"src": "15962:3:20",
														"type": ""
													}
												],
												"src": "15896:143:20"
											},
											{
												"body": {
													"nativeSrc": "16149:130:20",
													"nodeType": "YulBlock",
													"src": "16149:130:20",
													"statements": [
														{
															"nativeSrc": "16159:26:20",
															"nodeType": "YulAssignment",
															"src": "16159:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16171:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "16171:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16182:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16182:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16167:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16167:3:20"
																},
																"nativeSrc": "16167:18:20",
																"nodeType": "YulFunctionCall",
																"src": "16167:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16159:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "16159:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16245:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "16245:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16258:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "16258:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16269:1:20",
																				"nodeType": "YulLiteral",
																				"src": "16269:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16254:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16254:3:20"
																		},
																		"nativeSrc": "16254:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16254:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "16195:49:20",
																	"nodeType": "YulIdentifier",
																	"src": "16195:49:20"
																},
																"nativeSrc": "16195:77:20",
																"nodeType": "YulFunctionCall",
																"src": "16195:77:20"
															},
															"nativeSrc": "16195:77:20",
															"nodeType": "YulExpressionStatement",
															"src": "16195:77:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "16045:234:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16121:9:20",
														"nodeType": "YulTypedName",
														"src": "16121:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16133:6:20",
														"nodeType": "YulTypedName",
														"src": "16133:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16144:4:20",
														"nodeType": "YulTypedName",
														"src": "16144:4:20",
														"type": ""
													}
												],
												"src": "16045:234:20"
											},
											{
												"body": {
													"nativeSrc": "16391:137:20",
													"nodeType": "YulBlock",
													"src": "16391:137:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16413:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "16413:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16421:1:20",
																				"nodeType": "YulLiteral",
																				"src": "16421:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16409:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16409:3:20"
																		},
																		"nativeSrc": "16409:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16409:14:20"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nativeSrc": "16425:34:20",
																		"nodeType": "YulLiteral",
																		"src": "16425:34:20",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16402:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16402:6:20"
																},
																"nativeSrc": "16402:58:20",
																"nodeType": "YulFunctionCall",
																"src": "16402:58:20"
															},
															"nativeSrc": "16402:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "16402:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16481:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "16481:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16489:2:20",
																				"nodeType": "YulLiteral",
																				"src": "16489:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16477:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16477:3:20"
																		},
																		"nativeSrc": "16477:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16477:15:20"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "16494:26:20",
																		"nodeType": "YulLiteral",
																		"src": "16494:26:20",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16470:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16470:6:20"
																},
																"nativeSrc": "16470:51:20",
																"nodeType": "YulFunctionCall",
																"src": "16470:51:20"
															},
															"nativeSrc": "16470:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "16470:51:20"
														}
													]
												},
												"name": "store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
												"nativeSrc": "16285:243:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16383:6:20",
														"nodeType": "YulTypedName",
														"src": "16383:6:20",
														"type": ""
													}
												],
												"src": "16285:243:20"
											},
											{
												"body": {
													"nativeSrc": "16680:220:20",
													"nodeType": "YulBlock",
													"src": "16680:220:20",
													"statements": [
														{
															"nativeSrc": "16690:74:20",
															"nodeType": "YulAssignment",
															"src": "16690:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16756:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16756:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16761:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16761:2:20",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16697:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "16697:58:20"
																},
																"nativeSrc": "16697:67:20",
																"nodeType": "YulFunctionCall",
																"src": "16697:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16690:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16690:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16862:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16862:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																	"nativeSrc": "16773:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "16773:88:20"
																},
																"nativeSrc": "16773:93:20",
																"nodeType": "YulFunctionCall",
																"src": "16773:93:20"
															},
															"nativeSrc": "16773:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "16773:93:20"
														},
														{
															"nativeSrc": "16875:19:20",
															"nodeType": "YulAssignment",
															"src": "16875:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16886:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16886:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16891:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16891:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16882:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16882:3:20"
																},
																"nativeSrc": "16882:12:20",
																"nodeType": "YulFunctionCall",
																"src": "16882:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16875:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16875:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16534:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16668:3:20",
														"nodeType": "YulTypedName",
														"src": "16668:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16676:3:20",
														"nodeType": "YulTypedName",
														"src": "16676:3:20",
														"type": ""
													}
												],
												"src": "16534:366:20"
											},
											{
												"body": {
													"nativeSrc": "17077:248:20",
													"nodeType": "YulBlock",
													"src": "17077:248:20",
													"statements": [
														{
															"nativeSrc": "17087:26:20",
															"nodeType": "YulAssignment",
															"src": "17087:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17099:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "17099:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17110:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17110:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17095:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17095:3:20"
																},
																"nativeSrc": "17095:18:20",
																"nodeType": "YulFunctionCall",
																"src": "17095:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17087:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17087:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17134:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17134:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17145:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17145:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17130:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17130:3:20"
																		},
																		"nativeSrc": "17130:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17130:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17153:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "17153:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17159:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17159:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17149:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17149:3:20"
																		},
																		"nativeSrc": "17149:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17149:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17123:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17123:6:20"
																},
																"nativeSrc": "17123:47:20",
																"nodeType": "YulFunctionCall",
																"src": "17123:47:20"
															},
															"nativeSrc": "17123:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "17123:47:20"
														},
														{
															"nativeSrc": "17179:139:20",
															"nodeType": "YulAssignment",
															"src": "17179:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17313:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "17313:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17187:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "17187:124:20"
																},
																"nativeSrc": "17187:131:20",
																"nodeType": "YulFunctionCall",
																"src": "17187:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17179:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17179:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16906:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17057:9:20",
														"nodeType": "YulTypedName",
														"src": "17057:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17072:4:20",
														"nodeType": "YulTypedName",
														"src": "17072:4:20",
														"type": ""
													}
												],
												"src": "16906:419:20"
											},
											{
												"body": {
													"nativeSrc": "17359:152:20",
													"nodeType": "YulBlock",
													"src": "17359:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17376:1:20",
																		"nodeType": "YulLiteral",
																		"src": "17376:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17379:77:20",
																		"nodeType": "YulLiteral",
																		"src": "17379:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17369:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17369:6:20"
																},
																"nativeSrc": "17369:88:20",
																"nodeType": "YulFunctionCall",
																"src": "17369:88:20"
															},
															"nativeSrc": "17369:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "17369:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17473:1:20",
																		"nodeType": "YulLiteral",
																		"src": "17473:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17476:4:20",
																		"nodeType": "YulLiteral",
																		"src": "17476:4:20",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17466:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17466:6:20"
																},
																"nativeSrc": "17466:15:20",
																"nodeType": "YulFunctionCall",
																"src": "17466:15:20"
															},
															"nativeSrc": "17466:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "17466:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17497:1:20",
																		"nodeType": "YulLiteral",
																		"src": "17497:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17500:4:20",
																		"nodeType": "YulLiteral",
																		"src": "17500:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17490:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17490:6:20"
																},
																"nativeSrc": "17490:15:20",
																"nodeType": "YulFunctionCall",
																"src": "17490:15:20"
															},
															"nativeSrc": "17490:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "17490:15:20"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17331:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "17331:180:20"
											},
											{
												"body": {
													"nativeSrc": "17623:69:20",
													"nodeType": "YulBlock",
													"src": "17623:69:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17645:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "17645:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17653:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17653:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17641:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17641:3:20"
																		},
																		"nativeSrc": "17641:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17641:14:20"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520616e7920726577617264",
																		"kind": "string",
																		"nativeSrc": "17657:27:20",
																		"nodeType": "YulLiteral",
																		"src": "17657:27:20",
																		"type": "",
																		"value": "You don't have any reward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17634:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17634:6:20"
																},
																"nativeSrc": "17634:51:20",
																"nodeType": "YulFunctionCall",
																"src": "17634:51:20"
															},
															"nativeSrc": "17634:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "17634:51:20"
														}
													]
												},
												"name": "store_literal_in_memory_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b",
												"nativeSrc": "17517:175:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17615:6:20",
														"nodeType": "YulTypedName",
														"src": "17615:6:20",
														"type": ""
													}
												],
												"src": "17517:175:20"
											},
											{
												"body": {
													"nativeSrc": "17844:220:20",
													"nodeType": "YulBlock",
													"src": "17844:220:20",
													"statements": [
														{
															"nativeSrc": "17854:74:20",
															"nodeType": "YulAssignment",
															"src": "17854:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17920:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17920:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17925:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17925:2:20",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17861:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "17861:58:20"
																},
																"nativeSrc": "17861:67:20",
																"nodeType": "YulFunctionCall",
																"src": "17861:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17854:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17854:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18026:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "18026:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b",
																	"nativeSrc": "17937:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "17937:88:20"
																},
																"nativeSrc": "17937:93:20",
																"nodeType": "YulFunctionCall",
																"src": "17937:93:20"
															},
															"nativeSrc": "17937:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "17937:93:20"
														},
														{
															"nativeSrc": "18039:19:20",
															"nodeType": "YulAssignment",
															"src": "18039:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18050:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "18050:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18055:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18055:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18046:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18046:3:20"
																},
																"nativeSrc": "18046:12:20",
																"nodeType": "YulFunctionCall",
																"src": "18046:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18039:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18039:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17698:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17832:3:20",
														"nodeType": "YulTypedName",
														"src": "17832:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17840:3:20",
														"nodeType": "YulTypedName",
														"src": "17840:3:20",
														"type": ""
													}
												],
												"src": "17698:366:20"
											},
											{
												"body": {
													"nativeSrc": "18241:248:20",
													"nodeType": "YulBlock",
													"src": "18241:248:20",
													"statements": [
														{
															"nativeSrc": "18251:26:20",
															"nodeType": "YulAssignment",
															"src": "18251:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18263:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "18263:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18274:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18274:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18259:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18259:3:20"
																},
																"nativeSrc": "18259:18:20",
																"nodeType": "YulFunctionCall",
																"src": "18259:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18251:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "18251:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18298:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18298:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18309:1:20",
																				"nodeType": "YulLiteral",
																				"src": "18309:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18294:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18294:3:20"
																		},
																		"nativeSrc": "18294:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18294:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18317:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "18317:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18323:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18323:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18313:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18313:3:20"
																		},
																		"nativeSrc": "18313:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18313:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18287:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18287:6:20"
																},
																"nativeSrc": "18287:47:20",
																"nodeType": "YulFunctionCall",
																"src": "18287:47:20"
															},
															"nativeSrc": "18287:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "18287:47:20"
														},
														{
															"nativeSrc": "18343:139:20",
															"nodeType": "YulAssignment",
															"src": "18343:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18477:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "18477:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18351:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "18351:124:20"
																},
																"nativeSrc": "18351:131:20",
																"nodeType": "YulFunctionCall",
																"src": "18351:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18343:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "18343:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18070:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18221:9:20",
														"nodeType": "YulTypedName",
														"src": "18221:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18236:4:20",
														"nodeType": "YulTypedName",
														"src": "18236:4:20",
														"type": ""
													}
												],
												"src": "18070:419:20"
											},
											{
												"body": {
													"nativeSrc": "18560:53:20",
													"nodeType": "YulBlock",
													"src": "18560:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18577:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "18577:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18600:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "18600:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "18582:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "18582:17:20"
																		},
																		"nativeSrc": "18582:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18582:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18570:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18570:6:20"
																},
																"nativeSrc": "18570:37:20",
																"nodeType": "YulFunctionCall",
																"src": "18570:37:20"
															},
															"nativeSrc": "18570:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "18570:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "18495:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18548:5:20",
														"nodeType": "YulTypedName",
														"src": "18548:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18555:3:20",
														"nodeType": "YulTypedName",
														"src": "18555:3:20",
														"type": ""
													}
												],
												"src": "18495:118:20"
											},
											{
												"body": {
													"nativeSrc": "18717:124:20",
													"nodeType": "YulBlock",
													"src": "18717:124:20",
													"statements": [
														{
															"nativeSrc": "18727:26:20",
															"nodeType": "YulAssignment",
															"src": "18727:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18739:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "18739:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18750:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18750:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18735:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18735:3:20"
																},
																"nativeSrc": "18735:18:20",
																"nodeType": "YulFunctionCall",
																"src": "18735:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18727:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "18727:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18807:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18807:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18820:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18820:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18831:1:20",
																				"nodeType": "YulLiteral",
																				"src": "18831:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18816:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18816:3:20"
																		},
																		"nativeSrc": "18816:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18816:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18763:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18763:43:20"
																},
																"nativeSrc": "18763:71:20",
																"nodeType": "YulFunctionCall",
																"src": "18763:71:20"
															},
															"nativeSrc": "18763:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "18763:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "18619:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18689:9:20",
														"nodeType": "YulTypedName",
														"src": "18689:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18701:6:20",
														"nodeType": "YulTypedName",
														"src": "18701:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18712:4:20",
														"nodeType": "YulTypedName",
														"src": "18712:4:20",
														"type": ""
													}
												],
												"src": "18619:222:20"
											},
											{
												"body": {
													"nativeSrc": "18890:79:20",
													"nodeType": "YulBlock",
													"src": "18890:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "18947:16:20",
																"nodeType": "YulBlock",
																"src": "18947:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18956:1:20",
																					"nodeType": "YulLiteral",
																					"src": "18956:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18959:1:20",
																					"nodeType": "YulLiteral",
																					"src": "18959:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18949:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "18949:6:20"
																			},
																			"nativeSrc": "18949:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "18949:12:20"
																		},
																		"nativeSrc": "18949:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "18949:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18913:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "18913:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18938:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "18938:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "18920:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "18920:17:20"
																				},
																				"nativeSrc": "18920:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "18920:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18910:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "18910:2:20"
																		},
																		"nativeSrc": "18910:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18910:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18903:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18903:6:20"
																},
																"nativeSrc": "18903:43:20",
																"nodeType": "YulFunctionCall",
																"src": "18903:43:20"
															},
															"nativeSrc": "18900:63:20",
															"nodeType": "YulIf",
															"src": "18900:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "18847:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18883:5:20",
														"nodeType": "YulTypedName",
														"src": "18883:5:20",
														"type": ""
													}
												],
												"src": "18847:122:20"
											},
											{
												"body": {
													"nativeSrc": "19038:80:20",
													"nodeType": "YulBlock",
													"src": "19038:80:20",
													"statements": [
														{
															"nativeSrc": "19048:22:20",
															"nodeType": "YulAssignment",
															"src": "19048:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19063:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19063:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19057:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "19057:5:20"
																},
																"nativeSrc": "19057:13:20",
																"nodeType": "YulFunctionCall",
																"src": "19057:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19048:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "19048:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19106:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "19106:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "19079:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "19079:26:20"
																},
																"nativeSrc": "19079:33:20",
																"nodeType": "YulFunctionCall",
																"src": "19079:33:20"
															},
															"nativeSrc": "19079:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "19079:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "18975:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19016:6:20",
														"nodeType": "YulTypedName",
														"src": "19016:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19024:3:20",
														"nodeType": "YulTypedName",
														"src": "19024:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19032:5:20",
														"nodeType": "YulTypedName",
														"src": "19032:5:20",
														"type": ""
													}
												],
												"src": "18975:143:20"
											},
											{
												"body": {
													"nativeSrc": "19201:274:20",
													"nodeType": "YulBlock",
													"src": "19201:274:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "19247:83:20",
																"nodeType": "YulBlock",
																"src": "19247:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19249:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "19249:77:20"
																			},
																			"nativeSrc": "19249:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "19249:79:20"
																		},
																		"nativeSrc": "19249:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "19249:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19222:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "19222:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19231:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19231:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19218:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19218:3:20"
																		},
																		"nativeSrc": "19218:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19218:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19243:2:20",
																		"nodeType": "YulLiteral",
																		"src": "19243:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19214:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19214:3:20"
																},
																"nativeSrc": "19214:32:20",
																"nodeType": "YulFunctionCall",
																"src": "19214:32:20"
															},
															"nativeSrc": "19211:119:20",
															"nodeType": "YulIf",
															"src": "19211:119:20"
														},
														{
															"nativeSrc": "19340:128:20",
															"nodeType": "YulBlock",
															"src": "19340:128:20",
															"statements": [
																{
																	"nativeSrc": "19355:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19355:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19369:1:20",
																		"nodeType": "YulLiteral",
																		"src": "19369:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19359:6:20",
																			"nodeType": "YulTypedName",
																			"src": "19359:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19384:74:20",
																	"nodeType": "YulAssignment",
																	"src": "19384:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19430:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "19430:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19441:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "19441:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19426:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "19426:3:20"
																				},
																				"nativeSrc": "19426:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "19426:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19450:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "19450:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19394:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "19394:31:20"
																		},
																		"nativeSrc": "19394:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19394:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19384:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "19384:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "19124:351:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19171:9:20",
														"nodeType": "YulTypedName",
														"src": "19171:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19182:7:20",
														"nodeType": "YulTypedName",
														"src": "19182:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19194:6:20",
														"nodeType": "YulTypedName",
														"src": "19194:6:20",
														"type": ""
													}
												],
												"src": "19124:351:20"
											},
											{
												"body": {
													"nativeSrc": "19587:114:20",
													"nodeType": "YulBlock",
													"src": "19587:114:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19609:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "19609:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19617:1:20",
																				"nodeType": "YulLiteral",
																				"src": "19617:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19605:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19605:3:20"
																		},
																		"nativeSrc": "19605:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19605:14:20"
																	},
																	{
																		"hexValue": "596f752063616e27742077697468647261772061742074686973206d6f6d656e",
																		"kind": "string",
																		"nativeSrc": "19621:34:20",
																		"nodeType": "YulLiteral",
																		"src": "19621:34:20",
																		"type": "",
																		"value": "You can't withdraw at this momen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19598:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "19598:6:20"
																},
																"nativeSrc": "19598:58:20",
																"nodeType": "YulFunctionCall",
																"src": "19598:58:20"
															},
															"nativeSrc": "19598:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "19598:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19677:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "19677:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19685:2:20",
																				"nodeType": "YulLiteral",
																				"src": "19685:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19673:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19673:3:20"
																		},
																		"nativeSrc": "19673:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19673:15:20"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nativeSrc": "19690:3:20",
																		"nodeType": "YulLiteral",
																		"src": "19690:3:20",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19666:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "19666:6:20"
																},
																"nativeSrc": "19666:28:20",
																"nodeType": "YulFunctionCall",
																"src": "19666:28:20"
															},
															"nativeSrc": "19666:28:20",
															"nodeType": "YulExpressionStatement",
															"src": "19666:28:20"
														}
													]
												},
												"name": "store_literal_in_memory_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3",
												"nativeSrc": "19481:220:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19579:6:20",
														"nodeType": "YulTypedName",
														"src": "19579:6:20",
														"type": ""
													}
												],
												"src": "19481:220:20"
											},
											{
												"body": {
													"nativeSrc": "19853:220:20",
													"nodeType": "YulBlock",
													"src": "19853:220:20",
													"statements": [
														{
															"nativeSrc": "19863:74:20",
															"nodeType": "YulAssignment",
															"src": "19863:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19929:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19929:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19934:2:20",
																		"nodeType": "YulLiteral",
																		"src": "19934:2:20",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19870:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "19870:58:20"
																},
																"nativeSrc": "19870:67:20",
																"nodeType": "YulFunctionCall",
																"src": "19870:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19863:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19863:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20035:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20035:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3",
																	"nativeSrc": "19946:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "19946:88:20"
																},
																"nativeSrc": "19946:93:20",
																"nodeType": "YulFunctionCall",
																"src": "19946:93:20"
															},
															"nativeSrc": "19946:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "19946:93:20"
														},
														{
															"nativeSrc": "20048:19:20",
															"nodeType": "YulAssignment",
															"src": "20048:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20059:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20059:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20064:2:20",
																		"nodeType": "YulLiteral",
																		"src": "20064:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20055:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20055:3:20"
																},
																"nativeSrc": "20055:12:20",
																"nodeType": "YulFunctionCall",
																"src": "20055:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20048:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20048:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19707:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19841:3:20",
														"nodeType": "YulTypedName",
														"src": "19841:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19849:3:20",
														"nodeType": "YulTypedName",
														"src": "19849:3:20",
														"type": ""
													}
												],
												"src": "19707:366:20"
											},
											{
												"body": {
													"nativeSrc": "20250:248:20",
													"nodeType": "YulBlock",
													"src": "20250:248:20",
													"statements": [
														{
															"nativeSrc": "20260:26:20",
															"nodeType": "YulAssignment",
															"src": "20260:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20272:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "20272:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20283:2:20",
																		"nodeType": "YulLiteral",
																		"src": "20283:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20268:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20268:3:20"
																},
																"nativeSrc": "20268:18:20",
																"nodeType": "YulFunctionCall",
																"src": "20268:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20260:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "20260:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20307:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20307:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20318:1:20",
																				"nodeType": "YulLiteral",
																				"src": "20318:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20303:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20303:3:20"
																		},
																		"nativeSrc": "20303:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20303:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20326:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "20326:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20332:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20332:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20322:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20322:3:20"
																		},
																		"nativeSrc": "20322:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20322:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20296:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "20296:6:20"
																},
																"nativeSrc": "20296:47:20",
																"nodeType": "YulFunctionCall",
																"src": "20296:47:20"
															},
															"nativeSrc": "20296:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "20296:47:20"
														},
														{
															"nativeSrc": "20352:139:20",
															"nodeType": "YulAssignment",
															"src": "20352:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20486:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "20486:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20360:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "20360:124:20"
																},
																"nativeSrc": "20360:131:20",
																"nodeType": "YulFunctionCall",
																"src": "20360:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20352:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "20352:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20079:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20230:9:20",
														"nodeType": "YulTypedName",
														"src": "20230:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20245:4:20",
														"nodeType": "YulTypedName",
														"src": "20245:4:20",
														"type": ""
													}
												],
												"src": "20079:419:20"
											},
											{
												"body": {
													"nativeSrc": "20630:206:20",
													"nodeType": "YulBlock",
													"src": "20630:206:20",
													"statements": [
														{
															"nativeSrc": "20640:26:20",
															"nodeType": "YulAssignment",
															"src": "20640:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20652:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "20652:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20663:2:20",
																		"nodeType": "YulLiteral",
																		"src": "20663:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20648:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20648:3:20"
																},
																"nativeSrc": "20648:18:20",
																"nodeType": "YulFunctionCall",
																"src": "20648:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20640:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "20640:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20720:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20720:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20733:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20733:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20744:1:20",
																				"nodeType": "YulLiteral",
																				"src": "20744:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20729:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20729:3:20"
																		},
																		"nativeSrc": "20729:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20729:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20676:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "20676:43:20"
																},
																"nativeSrc": "20676:71:20",
																"nodeType": "YulFunctionCall",
																"src": "20676:71:20"
															},
															"nativeSrc": "20676:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "20676:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20801:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20801:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20814:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20814:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20825:2:20",
																				"nodeType": "YulLiteral",
																				"src": "20825:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20810:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20810:3:20"
																		},
																		"nativeSrc": "20810:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20810:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20757:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "20757:43:20"
																},
																"nativeSrc": "20757:72:20",
																"nodeType": "YulFunctionCall",
																"src": "20757:72:20"
															},
															"nativeSrc": "20757:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "20757:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20504:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20594:9:20",
														"nodeType": "YulTypedName",
														"src": "20594:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20606:6:20",
														"nodeType": "YulTypedName",
														"src": "20606:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20614:6:20",
														"nodeType": "YulTypedName",
														"src": "20614:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20625:4:20",
														"nodeType": "YulTypedName",
														"src": "20625:4:20",
														"type": ""
													}
												],
												"src": "20504:332:20"
											},
											{
												"body": {
													"nativeSrc": "20882:76:20",
													"nodeType": "YulBlock",
													"src": "20882:76:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "20936:16:20",
																"nodeType": "YulBlock",
																"src": "20936:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20945:1:20",
																					"nodeType": "YulLiteral",
																					"src": "20945:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20948:1:20",
																					"nodeType": "YulLiteral",
																					"src": "20948:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20938:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "20938:6:20"
																			},
																			"nativeSrc": "20938:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "20938:12:20"
																		},
																		"nativeSrc": "20938:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "20938:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20905:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "20905:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20927:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "20927:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "20912:14:20",
																					"nodeType": "YulIdentifier",
																					"src": "20912:14:20"
																				},
																				"nativeSrc": "20912:21:20",
																				"nodeType": "YulFunctionCall",
																				"src": "20912:21:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20902:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "20902:2:20"
																		},
																		"nativeSrc": "20902:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20902:32:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20895:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "20895:6:20"
																},
																"nativeSrc": "20895:40:20",
																"nodeType": "YulFunctionCall",
																"src": "20895:40:20"
															},
															"nativeSrc": "20892:60:20",
															"nodeType": "YulIf",
															"src": "20892:60:20"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "20842:116:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20875:5:20",
														"nodeType": "YulTypedName",
														"src": "20875:5:20",
														"type": ""
													}
												],
												"src": "20842:116:20"
											},
											{
												"body": {
													"nativeSrc": "21024:77:20",
													"nodeType": "YulBlock",
													"src": "21024:77:20",
													"statements": [
														{
															"nativeSrc": "21034:22:20",
															"nodeType": "YulAssignment",
															"src": "21034:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21049:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21049:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21043:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "21043:5:20"
																},
																"nativeSrc": "21043:13:20",
																"nodeType": "YulFunctionCall",
																"src": "21043:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21034:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "21034:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21089:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "21089:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "21065:23:20",
																	"nodeType": "YulIdentifier",
																	"src": "21065:23:20"
																},
																"nativeSrc": "21065:30:20",
																"nodeType": "YulFunctionCall",
																"src": "21065:30:20"
															},
															"nativeSrc": "21065:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "21065:30:20"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20964:137:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21002:6:20",
														"nodeType": "YulTypedName",
														"src": "21002:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21010:3:20",
														"nodeType": "YulTypedName",
														"src": "21010:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21018:5:20",
														"nodeType": "YulTypedName",
														"src": "21018:5:20",
														"type": ""
													}
												],
												"src": "20964:137:20"
											},
											{
												"body": {
													"nativeSrc": "21181:271:20",
													"nodeType": "YulBlock",
													"src": "21181:271:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "21227:83:20",
																"nodeType": "YulBlock",
																"src": "21227:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21229:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "21229:77:20"
																			},
																			"nativeSrc": "21229:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "21229:79:20"
																		},
																		"nativeSrc": "21229:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "21229:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21202:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "21202:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21211:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "21211:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21198:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21198:3:20"
																		},
																		"nativeSrc": "21198:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21198:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21223:2:20",
																		"nodeType": "YulLiteral",
																		"src": "21223:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21194:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21194:3:20"
																},
																"nativeSrc": "21194:32:20",
																"nodeType": "YulFunctionCall",
																"src": "21194:32:20"
															},
															"nativeSrc": "21191:119:20",
															"nodeType": "YulIf",
															"src": "21191:119:20"
														},
														{
															"nativeSrc": "21320:125:20",
															"nodeType": "YulBlock",
															"src": "21320:125:20",
															"statements": [
																{
																	"nativeSrc": "21335:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21335:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21349:1:20",
																		"nodeType": "YulLiteral",
																		"src": "21349:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21339:6:20",
																			"nodeType": "YulTypedName",
																			"src": "21339:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21364:71:20",
																	"nodeType": "YulAssignment",
																	"src": "21364:71:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21407:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "21407:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21418:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "21418:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21403:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "21403:3:20"
																				},
																				"nativeSrc": "21403:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "21403:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21427:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "21427:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "21374:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "21374:28:20"
																		},
																		"nativeSrc": "21374:61:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21374:61:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21364:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "21364:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "21107:345:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21151:9:20",
														"nodeType": "YulTypedName",
														"src": "21151:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21162:7:20",
														"nodeType": "YulTypedName",
														"src": "21162:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21174:6:20",
														"nodeType": "YulTypedName",
														"src": "21174:6:20",
														"type": ""
													}
												],
												"src": "21107:345:20"
											},
											{
												"body": {
													"nativeSrc": "21486:152:20",
													"nodeType": "YulBlock",
													"src": "21486:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21503:1:20",
																		"nodeType": "YulLiteral",
																		"src": "21503:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21506:77:20",
																		"nodeType": "YulLiteral",
																		"src": "21506:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21496:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21496:6:20"
																},
																"nativeSrc": "21496:88:20",
																"nodeType": "YulFunctionCall",
																"src": "21496:88:20"
															},
															"nativeSrc": "21496:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "21496:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21600:1:20",
																		"nodeType": "YulLiteral",
																		"src": "21600:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21603:4:20",
																		"nodeType": "YulLiteral",
																		"src": "21603:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21593:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21593:6:20"
																},
																"nativeSrc": "21593:15:20",
																"nodeType": "YulFunctionCall",
																"src": "21593:15:20"
															},
															"nativeSrc": "21593:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "21593:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21624:1:20",
																		"nodeType": "YulLiteral",
																		"src": "21624:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21627:4:20",
																		"nodeType": "YulLiteral",
																		"src": "21627:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21617:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21617:6:20"
																},
																"nativeSrc": "21617:15:20",
																"nodeType": "YulFunctionCall",
																"src": "21617:15:20"
															},
															"nativeSrc": "21617:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "21617:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "21458:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "21458:180:20"
											},
											{
												"body": {
													"nativeSrc": "21688:147:20",
													"nodeType": "YulBlock",
													"src": "21688:147:20",
													"statements": [
														{
															"nativeSrc": "21698:25:20",
															"nodeType": "YulAssignment",
															"src": "21698:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21721:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "21721:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21703:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "21703:17:20"
																},
																"nativeSrc": "21703:20:20",
																"nodeType": "YulFunctionCall",
																"src": "21703:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21698:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "21698:1:20"
																}
															]
														},
														{
															"nativeSrc": "21732:25:20",
															"nodeType": "YulAssignment",
															"src": "21732:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21755:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "21755:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21737:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "21737:17:20"
																},
																"nativeSrc": "21737:20:20",
																"nodeType": "YulFunctionCall",
																"src": "21737:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21732:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "21732:1:20"
																}
															]
														},
														{
															"nativeSrc": "21766:16:20",
															"nodeType": "YulAssignment",
															"src": "21766:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21777:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "21777:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21780:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "21780:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21773:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21773:3:20"
																},
																"nativeSrc": "21773:9:20",
																"nodeType": "YulFunctionCall",
																"src": "21773:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21766:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21766:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21806:22:20",
																"nodeType": "YulBlock",
																"src": "21806:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21808:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "21808:16:20"
																			},
																			"nativeSrc": "21808:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "21808:18:20"
																		},
																		"nativeSrc": "21808:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "21808:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21798:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "21798:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21801:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "21801:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21795:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "21795:2:20"
																},
																"nativeSrc": "21795:10:20",
																"nodeType": "YulFunctionCall",
																"src": "21795:10:20"
															},
															"nativeSrc": "21792:36:20",
															"nodeType": "YulIf",
															"src": "21792:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21644:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21675:1:20",
														"nodeType": "YulTypedName",
														"src": "21675:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21678:1:20",
														"nodeType": "YulTypedName",
														"src": "21678:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21684:3:20",
														"nodeType": "YulTypedName",
														"src": "21684:3:20",
														"type": ""
													}
												],
												"src": "21644:191:20"
											},
											{
												"body": {
													"nativeSrc": "21904:80:20",
													"nodeType": "YulBlock",
													"src": "21904:80:20",
													"statements": [
														{
															"nativeSrc": "21914:22:20",
															"nodeType": "YulAssignment",
															"src": "21914:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21929:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21929:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21923:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "21923:5:20"
																},
																"nativeSrc": "21923:13:20",
																"nodeType": "YulFunctionCall",
																"src": "21923:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21914:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "21914:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21972:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "21972:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "21945:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "21945:26:20"
																},
																"nativeSrc": "21945:33:20",
																"nodeType": "YulFunctionCall",
																"src": "21945:33:20"
															},
															"nativeSrc": "21945:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "21945:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "21841:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21882:6:20",
														"nodeType": "YulTypedName",
														"src": "21882:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21890:3:20",
														"nodeType": "YulTypedName",
														"src": "21890:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21898:5:20",
														"nodeType": "YulTypedName",
														"src": "21898:5:20",
														"type": ""
													}
												],
												"src": "21841:143:20"
											},
											{
												"body": {
													"nativeSrc": "22067:274:20",
													"nodeType": "YulBlock",
													"src": "22067:274:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "22113:83:20",
																"nodeType": "YulBlock",
																"src": "22113:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22115:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "22115:77:20"
																			},
																			"nativeSrc": "22115:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "22115:79:20"
																		},
																		"nativeSrc": "22115:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "22115:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22088:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "22088:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22097:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "22097:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22084:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "22084:3:20"
																		},
																		"nativeSrc": "22084:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22084:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22109:2:20",
																		"nodeType": "YulLiteral",
																		"src": "22109:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22080:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22080:3:20"
																},
																"nativeSrc": "22080:32:20",
																"nodeType": "YulFunctionCall",
																"src": "22080:32:20"
															},
															"nativeSrc": "22077:119:20",
															"nodeType": "YulIf",
															"src": "22077:119:20"
														},
														{
															"nativeSrc": "22206:128:20",
															"nodeType": "YulBlock",
															"src": "22206:128:20",
															"statements": [
																{
																	"nativeSrc": "22221:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22221:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22235:1:20",
																		"nodeType": "YulLiteral",
																		"src": "22235:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22225:6:20",
																			"nodeType": "YulTypedName",
																			"src": "22225:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22250:74:20",
																	"nodeType": "YulAssignment",
																	"src": "22250:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22296:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "22296:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22307:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "22307:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22292:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "22292:3:20"
																				},
																				"nativeSrc": "22292:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "22292:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22316:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "22316:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "22260:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "22260:31:20"
																		},
																		"nativeSrc": "22260:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22260:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22250:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "22250:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "21990:351:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22037:9:20",
														"nodeType": "YulTypedName",
														"src": "22037:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22048:7:20",
														"nodeType": "YulTypedName",
														"src": "22048:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22060:6:20",
														"nodeType": "YulTypedName",
														"src": "22060:6:20",
														"type": ""
													}
												],
												"src": "21990:351:20"
											},
											{
												"body": {
													"nativeSrc": "22453:127:20",
													"nodeType": "YulBlock",
													"src": "22453:127:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22475:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "22475:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22483:1:20",
																				"nodeType": "YulLiteral",
																				"src": "22483:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22471:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "22471:3:20"
																		},
																		"nativeSrc": "22471:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22471:14:20"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nativeSrc": "22487:34:20",
																		"nodeType": "YulLiteral",
																		"src": "22487:34:20",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22464:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22464:6:20"
																},
																"nativeSrc": "22464:58:20",
																"nodeType": "YulFunctionCall",
																"src": "22464:58:20"
															},
															"nativeSrc": "22464:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "22464:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22543:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "22543:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22551:2:20",
																				"nodeType": "YulLiteral",
																				"src": "22551:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22539:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "22539:3:20"
																		},
																		"nativeSrc": "22539:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22539:15:20"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nativeSrc": "22556:16:20",
																		"nodeType": "YulLiteral",
																		"src": "22556:16:20",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22532:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22532:6:20"
																},
																"nativeSrc": "22532:41:20",
																"nodeType": "YulFunctionCall",
																"src": "22532:41:20"
															},
															"nativeSrc": "22532:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "22532:41:20"
														}
													]
												},
												"name": "store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
												"nativeSrc": "22347:233:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22445:6:20",
														"nodeType": "YulTypedName",
														"src": "22445:6:20",
														"type": ""
													}
												],
												"src": "22347:233:20"
											},
											{
												"body": {
													"nativeSrc": "22732:220:20",
													"nodeType": "YulBlock",
													"src": "22732:220:20",
													"statements": [
														{
															"nativeSrc": "22742:74:20",
															"nodeType": "YulAssignment",
															"src": "22742:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22808:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "22808:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22813:2:20",
																		"nodeType": "YulLiteral",
																		"src": "22813:2:20",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22749:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "22749:58:20"
																},
																"nativeSrc": "22749:67:20",
																"nodeType": "YulFunctionCall",
																"src": "22749:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22742:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22742:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22914:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "22914:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																	"nativeSrc": "22825:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "22825:88:20"
																},
																"nativeSrc": "22825:93:20",
																"nodeType": "YulFunctionCall",
																"src": "22825:93:20"
															},
															"nativeSrc": "22825:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "22825:93:20"
														},
														{
															"nativeSrc": "22927:19:20",
															"nodeType": "YulAssignment",
															"src": "22927:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22938:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "22938:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22943:2:20",
																		"nodeType": "YulLiteral",
																		"src": "22943:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22934:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22934:3:20"
																},
																"nativeSrc": "22934:12:20",
																"nodeType": "YulFunctionCall",
																"src": "22934:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22927:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22927:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22586:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22720:3:20",
														"nodeType": "YulTypedName",
														"src": "22720:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22728:3:20",
														"nodeType": "YulTypedName",
														"src": "22728:3:20",
														"type": ""
													}
												],
												"src": "22586:366:20"
											},
											{
												"body": {
													"nativeSrc": "23129:248:20",
													"nodeType": "YulBlock",
													"src": "23129:248:20",
													"statements": [
														{
															"nativeSrc": "23139:26:20",
															"nodeType": "YulAssignment",
															"src": "23139:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23151:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "23151:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23162:2:20",
																		"nodeType": "YulLiteral",
																		"src": "23162:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23147:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23147:3:20"
																},
																"nativeSrc": "23147:18:20",
																"nodeType": "YulFunctionCall",
																"src": "23147:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23139:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "23139:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23186:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "23186:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23197:1:20",
																				"nodeType": "YulLiteral",
																				"src": "23197:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23182:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "23182:3:20"
																		},
																		"nativeSrc": "23182:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "23182:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23205:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "23205:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23211:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "23211:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23201:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "23201:3:20"
																		},
																		"nativeSrc": "23201:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "23201:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23175:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "23175:6:20"
																},
																"nativeSrc": "23175:47:20",
																"nodeType": "YulFunctionCall",
																"src": "23175:47:20"
															},
															"nativeSrc": "23175:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "23175:47:20"
														},
														{
															"nativeSrc": "23231:139:20",
															"nodeType": "YulAssignment",
															"src": "23231:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23365:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "23365:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23239:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "23239:124:20"
																},
																"nativeSrc": "23239:131:20",
																"nodeType": "YulFunctionCall",
																"src": "23239:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23231:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "23231:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22958:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23109:9:20",
														"nodeType": "YulTypedName",
														"src": "23109:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23124:4:20",
														"nodeType": "YulTypedName",
														"src": "23124:4:20",
														"type": ""
													}
												],
												"src": "22958:419:20"
											},
											{
												"body": {
													"nativeSrc": "23489:122:20",
													"nodeType": "YulBlock",
													"src": "23489:122:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23511:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "23511:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23519:1:20",
																				"nodeType": "YulLiteral",
																				"src": "23519:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23507:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "23507:3:20"
																		},
																		"nativeSrc": "23507:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "23507:14:20"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nativeSrc": "23523:34:20",
																		"nodeType": "YulLiteral",
																		"src": "23523:34:20",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23500:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "23500:6:20"
																},
																"nativeSrc": "23500:58:20",
																"nodeType": "YulFunctionCall",
																"src": "23500:58:20"
															},
															"nativeSrc": "23500:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "23500:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23579:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "23579:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23587:2:20",
																				"nodeType": "YulLiteral",
																				"src": "23587:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23575:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "23575:3:20"
																		},
																		"nativeSrc": "23575:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "23575:15:20"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nativeSrc": "23592:11:20",
																		"nodeType": "YulLiteral",
																		"src": "23592:11:20",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23568:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "23568:6:20"
																},
																"nativeSrc": "23568:36:20",
																"nodeType": "YulFunctionCall",
																"src": "23568:36:20"
															},
															"nativeSrc": "23568:36:20",
															"nodeType": "YulExpressionStatement",
															"src": "23568:36:20"
														}
													]
												},
												"name": "store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
												"nativeSrc": "23383:228:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23481:6:20",
														"nodeType": "YulTypedName",
														"src": "23481:6:20",
														"type": ""
													}
												],
												"src": "23383:228:20"
											},
											{
												"body": {
													"nativeSrc": "23763:220:20",
													"nodeType": "YulBlock",
													"src": "23763:220:20",
													"statements": [
														{
															"nativeSrc": "23773:74:20",
															"nodeType": "YulAssignment",
															"src": "23773:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23839:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "23839:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23844:2:20",
																		"nodeType": "YulLiteral",
																		"src": "23844:2:20",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23780:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "23780:58:20"
																},
																"nativeSrc": "23780:67:20",
																"nodeType": "YulFunctionCall",
																"src": "23780:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23773:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23773:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23945:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "23945:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																	"nativeSrc": "23856:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "23856:88:20"
																},
																"nativeSrc": "23856:93:20",
																"nodeType": "YulFunctionCall",
																"src": "23856:93:20"
															},
															"nativeSrc": "23856:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "23856:93:20"
														},
														{
															"nativeSrc": "23958:19:20",
															"nodeType": "YulAssignment",
															"src": "23958:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23969:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "23969:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23974:2:20",
																		"nodeType": "YulLiteral",
																		"src": "23974:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23965:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23965:3:20"
																},
																"nativeSrc": "23965:12:20",
																"nodeType": "YulFunctionCall",
																"src": "23965:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23958:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23958:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23617:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23751:3:20",
														"nodeType": "YulTypedName",
														"src": "23751:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23759:3:20",
														"nodeType": "YulTypedName",
														"src": "23759:3:20",
														"type": ""
													}
												],
												"src": "23617:366:20"
											},
											{
												"body": {
													"nativeSrc": "24160:248:20",
													"nodeType": "YulBlock",
													"src": "24160:248:20",
													"statements": [
														{
															"nativeSrc": "24170:26:20",
															"nodeType": "YulAssignment",
															"src": "24170:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24182:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "24182:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24193:2:20",
																		"nodeType": "YulLiteral",
																		"src": "24193:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24178:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24178:3:20"
																},
																"nativeSrc": "24178:18:20",
																"nodeType": "YulFunctionCall",
																"src": "24178:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24170:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "24170:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24217:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "24217:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24228:1:20",
																				"nodeType": "YulLiteral",
																				"src": "24228:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24213:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "24213:3:20"
																		},
																		"nativeSrc": "24213:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24213:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24236:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "24236:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24242:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "24242:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24232:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "24232:3:20"
																		},
																		"nativeSrc": "24232:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24232:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24206:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "24206:6:20"
																},
																"nativeSrc": "24206:47:20",
																"nodeType": "YulFunctionCall",
																"src": "24206:47:20"
															},
															"nativeSrc": "24206:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "24206:47:20"
														},
														{
															"nativeSrc": "24262:139:20",
															"nodeType": "YulAssignment",
															"src": "24262:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24396:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "24396:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24270:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "24270:124:20"
																},
																"nativeSrc": "24270:131:20",
																"nodeType": "YulFunctionCall",
																"src": "24270:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24262:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "24262:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23989:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24140:9:20",
														"nodeType": "YulTypedName",
														"src": "24140:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24155:4:20",
														"nodeType": "YulTypedName",
														"src": "24155:4:20",
														"type": ""
													}
												],
												"src": "23989:419:20"
											},
											{
												"body": {
													"nativeSrc": "24528:34:20",
													"nodeType": "YulBlock",
													"src": "24528:34:20",
													"statements": [
														{
															"nativeSrc": "24538:18:20",
															"nodeType": "YulAssignment",
															"src": "24538:18:20",
															"value": {
																"name": "pos",
																"nativeSrc": "24553:3:20",
																"nodeType": "YulIdentifier",
																"src": "24553:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24538:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "24538:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "24414:148:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24500:3:20",
														"nodeType": "YulTypedName",
														"src": "24500:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24505:6:20",
														"nodeType": "YulTypedName",
														"src": "24505:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24516:11:20",
														"nodeType": "YulTypedName",
														"src": "24516:11:20",
														"type": ""
													}
												],
												"src": "24414:148:20"
											},
											{
												"body": {
													"nativeSrc": "24674:67:20",
													"nodeType": "YulBlock",
													"src": "24674:67:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24696:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "24696:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24704:1:20",
																				"nodeType": "YulLiteral",
																				"src": "24704:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24692:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "24692:3:20"
																		},
																		"nativeSrc": "24692:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24692:14:20"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "24708:25:20",
																		"nodeType": "YulLiteral",
																		"src": "24708:25:20",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24685:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "24685:6:20"
																},
																"nativeSrc": "24685:49:20",
																"nodeType": "YulFunctionCall",
																"src": "24685:49:20"
															},
															"nativeSrc": "24685:49:20",
															"nodeType": "YulExpressionStatement",
															"src": "24685:49:20"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nativeSrc": "24568:173:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24666:6:20",
														"nodeType": "YulTypedName",
														"src": "24666:6:20",
														"type": ""
													}
												],
												"src": "24568:173:20"
											},
											{
												"body": {
													"nativeSrc": "24911:238:20",
													"nodeType": "YulBlock",
													"src": "24911:238:20",
													"statements": [
														{
															"nativeSrc": "24921:92:20",
															"nodeType": "YulAssignment",
															"src": "24921:92:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25005:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25005:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25010:2:20",
																		"nodeType": "YulLiteral",
																		"src": "25010:2:20",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24928:76:20",
																	"nodeType": "YulIdentifier",
																	"src": "24928:76:20"
																},
																"nativeSrc": "24928:85:20",
																"nodeType": "YulFunctionCall",
																"src": "24928:85:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24921:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24921:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25111:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25111:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nativeSrc": "25022:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "25022:88:20"
																},
																"nativeSrc": "25022:93:20",
																"nodeType": "YulFunctionCall",
																"src": "25022:93:20"
															},
															"nativeSrc": "25022:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "25022:93:20"
														},
														{
															"nativeSrc": "25124:19:20",
															"nodeType": "YulAssignment",
															"src": "25124:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25135:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25135:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25140:2:20",
																		"nodeType": "YulLiteral",
																		"src": "25140:2:20",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25131:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25131:3:20"
																},
																"nativeSrc": "25131:12:20",
																"nodeType": "YulFunctionCall",
																"src": "25131:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25124:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25124:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "24747:402:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24899:3:20",
														"nodeType": "YulTypedName",
														"src": "24899:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24907:3:20",
														"nodeType": "YulTypedName",
														"src": "24907:3:20",
														"type": ""
													}
												],
												"src": "24747:402:20"
											},
											{
												"body": {
													"nativeSrc": "25214:40:20",
													"nodeType": "YulBlock",
													"src": "25214:40:20",
													"statements": [
														{
															"nativeSrc": "25225:22:20",
															"nodeType": "YulAssignment",
															"src": "25225:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25241:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "25241:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25235:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "25235:5:20"
																},
																"nativeSrc": "25235:12:20",
																"nodeType": "YulFunctionCall",
																"src": "25235:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "25225:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "25225:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "25155:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25197:5:20",
														"nodeType": "YulTypedName",
														"src": "25197:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "25207:6:20",
														"nodeType": "YulTypedName",
														"src": "25207:6:20",
														"type": ""
													}
												],
												"src": "25155:99:20"
											},
											{
												"body": {
													"nativeSrc": "25322:77:20",
													"nodeType": "YulBlock",
													"src": "25322:77:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "25339:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25339:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "25344:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25344:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25349:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25349:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "25333:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "25333:5:20"
																},
																"nativeSrc": "25333:23:20",
																"nodeType": "YulFunctionCall",
																"src": "25333:23:20"
															},
															"nativeSrc": "25333:23:20",
															"nodeType": "YulExpressionStatement",
															"src": "25333:23:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "25376:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "25376:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "25381:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "25381:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25372:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "25372:3:20"
																		},
																		"nativeSrc": "25372:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "25372:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25390:1:20",
																		"nodeType": "YulLiteral",
																		"src": "25390:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25365:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "25365:6:20"
																},
																"nativeSrc": "25365:27:20",
																"nodeType": "YulFunctionCall",
																"src": "25365:27:20"
															},
															"nativeSrc": "25365:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "25365:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "25260:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "25304:3:20",
														"nodeType": "YulTypedName",
														"src": "25304:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "25309:3:20",
														"nodeType": "YulTypedName",
														"src": "25309:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "25314:6:20",
														"nodeType": "YulTypedName",
														"src": "25314:6:20",
														"type": ""
													}
												],
												"src": "25260:139:20"
											},
											{
												"body": {
													"nativeSrc": "25515:280:20",
													"nodeType": "YulBlock",
													"src": "25515:280:20",
													"statements": [
														{
															"nativeSrc": "25525:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "25525:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25572:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "25572:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "25539:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "25539:32:20"
																},
																"nativeSrc": "25539:39:20",
																"nodeType": "YulFunctionCall",
																"src": "25539:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "25529:6:20",
																	"nodeType": "YulTypedName",
																	"src": "25529:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25587:96:20",
															"nodeType": "YulAssignment",
															"src": "25587:96:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25671:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25671:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25676:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25676:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25594:76:20",
																	"nodeType": "YulIdentifier",
																	"src": "25594:76:20"
																},
																"nativeSrc": "25594:89:20",
																"nodeType": "YulFunctionCall",
																"src": "25594:89:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25587:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25587:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25731:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "25731:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25738:4:20",
																				"nodeType": "YulLiteral",
																				"src": "25738:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25727:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "25727:3:20"
																		},
																		"nativeSrc": "25727:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "25727:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25745:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25745:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25750:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25750:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "25692:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "25692:34:20"
																},
																"nativeSrc": "25692:65:20",
																"nodeType": "YulFunctionCall",
																"src": "25692:65:20"
															},
															"nativeSrc": "25692:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "25692:65:20"
														},
														{
															"nativeSrc": "25766:23:20",
															"nodeType": "YulAssignment",
															"src": "25766:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25777:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25777:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25782:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25782:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25773:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25773:3:20"
																},
																"nativeSrc": "25773:16:20",
																"nodeType": "YulFunctionCall",
																"src": "25773:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25766:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25766:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "25405:390:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25496:5:20",
														"nodeType": "YulTypedName",
														"src": "25496:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25503:3:20",
														"nodeType": "YulTypedName",
														"src": "25503:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25511:3:20",
														"nodeType": "YulTypedName",
														"src": "25511:3:20",
														"type": ""
													}
												],
												"src": "25405:390:20"
											},
											{
												"body": {
													"nativeSrc": "25907:61:20",
													"nodeType": "YulBlock",
													"src": "25907:61:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25929:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "25929:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25937:1:20",
																				"nodeType": "YulLiteral",
																				"src": "25937:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25925:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "25925:3:20"
																		},
																		"nativeSrc": "25925:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "25925:14:20"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "25941:19:20",
																		"nodeType": "YulLiteral",
																		"src": "25941:19:20",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25918:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "25918:6:20"
																},
																"nativeSrc": "25918:43:20",
																"nodeType": "YulFunctionCall",
																"src": "25918:43:20"
															},
															"nativeSrc": "25918:43:20",
															"nodeType": "YulExpressionStatement",
															"src": "25918:43:20"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nativeSrc": "25801:167:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25899:6:20",
														"nodeType": "YulTypedName",
														"src": "25899:6:20",
														"type": ""
													}
												],
												"src": "25801:167:20"
											},
											{
												"body": {
													"nativeSrc": "26138:238:20",
													"nodeType": "YulBlock",
													"src": "26138:238:20",
													"statements": [
														{
															"nativeSrc": "26148:92:20",
															"nodeType": "YulAssignment",
															"src": "26148:92:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26232:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26232:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26237:2:20",
																		"nodeType": "YulLiteral",
																		"src": "26237:2:20",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "26155:76:20",
																	"nodeType": "YulIdentifier",
																	"src": "26155:76:20"
																},
																"nativeSrc": "26155:85:20",
																"nodeType": "YulFunctionCall",
																"src": "26155:85:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26148:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26148:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26338:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26338:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nativeSrc": "26249:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "26249:88:20"
																},
																"nativeSrc": "26249:93:20",
																"nodeType": "YulFunctionCall",
																"src": "26249:93:20"
															},
															"nativeSrc": "26249:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "26249:93:20"
														},
														{
															"nativeSrc": "26351:19:20",
															"nodeType": "YulAssignment",
															"src": "26351:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26362:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26362:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26367:2:20",
																		"nodeType": "YulLiteral",
																		"src": "26367:2:20",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26358:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26358:3:20"
																},
																"nativeSrc": "26358:12:20",
																"nodeType": "YulFunctionCall",
																"src": "26358:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26351:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26351:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "25974:402:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26126:3:20",
														"nodeType": "YulTypedName",
														"src": "26126:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26134:3:20",
														"nodeType": "YulTypedName",
														"src": "26134:3:20",
														"type": ""
													}
												],
												"src": "25974:402:20"
											},
											{
												"body": {
													"nativeSrc": "26768:581:20",
													"nodeType": "YulBlock",
													"src": "26768:581:20",
													"statements": [
														{
															"nativeSrc": "26779:155:20",
															"nodeType": "YulAssignment",
															"src": "26779:155:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26930:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26930:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "26786:142:20",
																	"nodeType": "YulIdentifier",
																	"src": "26786:142:20"
																},
																"nativeSrc": "26786:148:20",
																"nodeType": "YulFunctionCall",
																"src": "26786:148:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26779:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26779:3:20"
																}
															]
														},
														{
															"nativeSrc": "26944:102:20",
															"nodeType": "YulAssignment",
															"src": "26944:102:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27033:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "27033:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27042:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "27042:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "26951:81:20",
																	"nodeType": "YulIdentifier",
																	"src": "26951:81:20"
																},
																"nativeSrc": "26951:95:20",
																"nodeType": "YulFunctionCall",
																"src": "26951:95:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26944:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26944:3:20"
																}
															]
														},
														{
															"nativeSrc": "27056:155:20",
															"nodeType": "YulAssignment",
															"src": "27056:155:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27207:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "27207:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "27063:142:20",
																	"nodeType": "YulIdentifier",
																	"src": "27063:142:20"
																},
																"nativeSrc": "27063:148:20",
																"nodeType": "YulFunctionCall",
																"src": "27063:148:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27056:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "27056:3:20"
																}
															]
														},
														{
															"nativeSrc": "27221:102:20",
															"nodeType": "YulAssignment",
															"src": "27221:102:20",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27310:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "27310:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27319:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "27319:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "27228:81:20",
																	"nodeType": "YulIdentifier",
																	"src": "27228:81:20"
																},
																"nativeSrc": "27228:95:20",
																"nodeType": "YulFunctionCall",
																"src": "27228:95:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27221:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "27221:3:20"
																}
															]
														},
														{
															"nativeSrc": "27333:10:20",
															"nodeType": "YulAssignment",
															"src": "27333:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "27340:3:20",
																"nodeType": "YulIdentifier",
																"src": "27340:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27333:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "27333:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "26382:967:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26739:3:20",
														"nodeType": "YulTypedName",
														"src": "26739:3:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26745:6:20",
														"nodeType": "YulTypedName",
														"src": "26745:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26753:6:20",
														"nodeType": "YulTypedName",
														"src": "26753:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26764:3:20",
														"nodeType": "YulTypedName",
														"src": "26764:3:20",
														"type": ""
													}
												],
												"src": "26382:967:20"
											},
											{
												"body": {
													"nativeSrc": "27447:285:20",
													"nodeType": "YulBlock",
													"src": "27447:285:20",
													"statements": [
														{
															"nativeSrc": "27457:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "27457:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27504:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "27504:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "27471:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "27471:32:20"
																},
																"nativeSrc": "27471:39:20",
																"nodeType": "YulFunctionCall",
																"src": "27471:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "27461:6:20",
																	"nodeType": "YulTypedName",
																	"src": "27461:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27519:78:20",
															"nodeType": "YulAssignment",
															"src": "27519:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27585:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "27585:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27590:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "27590:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27526:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "27526:58:20"
																},
																"nativeSrc": "27526:71:20",
																"nodeType": "YulFunctionCall",
																"src": "27526:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27519:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "27519:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27645:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "27645:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27652:4:20",
																				"nodeType": "YulLiteral",
																				"src": "27652:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27641:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "27641:3:20"
																		},
																		"nativeSrc": "27641:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "27641:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27659:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "27659:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27664:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "27664:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "27606:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "27606:34:20"
																},
																"nativeSrc": "27606:65:20",
																"nodeType": "YulFunctionCall",
																"src": "27606:65:20"
															},
															"nativeSrc": "27606:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "27606:65:20"
														},
														{
															"nativeSrc": "27680:46:20",
															"nodeType": "YulAssignment",
															"src": "27680:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27691:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "27691:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "27718:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "27718:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "27696:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "27696:21:20"
																		},
																		"nativeSrc": "27696:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "27696:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27687:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "27687:3:20"
																},
																"nativeSrc": "27687:39:20",
																"nodeType": "YulFunctionCall",
																"src": "27687:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27680:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "27680:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27355:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27428:5:20",
														"nodeType": "YulTypedName",
														"src": "27428:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "27435:3:20",
														"nodeType": "YulTypedName",
														"src": "27435:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27443:3:20",
														"nodeType": "YulTypedName",
														"src": "27443:3:20",
														"type": ""
													}
												],
												"src": "27355:377:20"
											},
											{
												"body": {
													"nativeSrc": "27856:195:20",
													"nodeType": "YulBlock",
													"src": "27856:195:20",
													"statements": [
														{
															"nativeSrc": "27866:26:20",
															"nodeType": "YulAssignment",
															"src": "27866:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27878:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "27878:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27889:2:20",
																		"nodeType": "YulLiteral",
																		"src": "27889:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27874:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "27874:3:20"
																},
																"nativeSrc": "27874:18:20",
																"nodeType": "YulFunctionCall",
																"src": "27874:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27866:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "27866:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27913:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "27913:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27924:1:20",
																				"nodeType": "YulLiteral",
																				"src": "27924:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27909:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "27909:3:20"
																		},
																		"nativeSrc": "27909:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "27909:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27932:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "27932:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27938:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "27938:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27928:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "27928:3:20"
																		},
																		"nativeSrc": "27928:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "27928:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27902:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "27902:6:20"
																},
																"nativeSrc": "27902:47:20",
																"nodeType": "YulFunctionCall",
																"src": "27902:47:20"
															},
															"nativeSrc": "27902:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "27902:47:20"
														},
														{
															"nativeSrc": "27958:86:20",
															"nodeType": "YulAssignment",
															"src": "27958:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28030:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "28030:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "28039:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "28039:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27966:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "27966:63:20"
																},
																"nativeSrc": "27966:78:20",
																"nodeType": "YulFunctionCall",
																"src": "27966:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27958:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "27958:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27738:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27828:9:20",
														"nodeType": "YulTypedName",
														"src": "27828:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27840:6:20",
														"nodeType": "YulTypedName",
														"src": "27840:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27851:4:20",
														"nodeType": "YulTypedName",
														"src": "27851:4:20",
														"type": ""
													}
												],
												"src": "27738:313:20"
											},
											{
												"body": {
													"nativeSrc": "28163:126:20",
													"nodeType": "YulBlock",
													"src": "28163:126:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28185:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "28185:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28193:1:20",
																				"nodeType": "YulLiteral",
																				"src": "28193:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28181:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "28181:3:20"
																		},
																		"nativeSrc": "28181:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "28181:14:20"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nativeSrc": "28197:34:20",
																		"nodeType": "YulLiteral",
																		"src": "28197:34:20",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28174:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "28174:6:20"
																},
																"nativeSrc": "28174:58:20",
																"nodeType": "YulFunctionCall",
																"src": "28174:58:20"
															},
															"nativeSrc": "28174:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "28174:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28253:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "28253:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28261:2:20",
																				"nodeType": "YulLiteral",
																				"src": "28261:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28249:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "28249:3:20"
																		},
																		"nativeSrc": "28249:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "28249:15:20"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "28266:15:20",
																		"nodeType": "YulLiteral",
																		"src": "28266:15:20",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28242:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "28242:6:20"
																},
																"nativeSrc": "28242:40:20",
																"nodeType": "YulFunctionCall",
																"src": "28242:40:20"
															},
															"nativeSrc": "28242:40:20",
															"nodeType": "YulExpressionStatement",
															"src": "28242:40:20"
														}
													]
												},
												"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
												"nativeSrc": "28057:232:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28155:6:20",
														"nodeType": "YulTypedName",
														"src": "28155:6:20",
														"type": ""
													}
												],
												"src": "28057:232:20"
											},
											{
												"body": {
													"nativeSrc": "28441:220:20",
													"nodeType": "YulBlock",
													"src": "28441:220:20",
													"statements": [
														{
															"nativeSrc": "28451:74:20",
															"nodeType": "YulAssignment",
															"src": "28451:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28517:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "28517:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28522:2:20",
																		"nodeType": "YulLiteral",
																		"src": "28522:2:20",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28458:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "28458:58:20"
																},
																"nativeSrc": "28458:67:20",
																"nodeType": "YulFunctionCall",
																"src": "28458:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28451:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "28451:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28623:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "28623:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																	"nativeSrc": "28534:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "28534:88:20"
																},
																"nativeSrc": "28534:93:20",
																"nodeType": "YulFunctionCall",
																"src": "28534:93:20"
															},
															"nativeSrc": "28534:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "28534:93:20"
														},
														{
															"nativeSrc": "28636:19:20",
															"nodeType": "YulAssignment",
															"src": "28636:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28647:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "28647:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28652:2:20",
																		"nodeType": "YulLiteral",
																		"src": "28652:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28643:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "28643:3:20"
																},
																"nativeSrc": "28643:12:20",
																"nodeType": "YulFunctionCall",
																"src": "28643:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28636:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "28636:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28295:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28429:3:20",
														"nodeType": "YulTypedName",
														"src": "28429:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28437:3:20",
														"nodeType": "YulTypedName",
														"src": "28437:3:20",
														"type": ""
													}
												],
												"src": "28295:366:20"
											},
											{
												"body": {
													"nativeSrc": "28838:248:20",
													"nodeType": "YulBlock",
													"src": "28838:248:20",
													"statements": [
														{
															"nativeSrc": "28848:26:20",
															"nodeType": "YulAssignment",
															"src": "28848:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28860:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "28860:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28871:2:20",
																		"nodeType": "YulLiteral",
																		"src": "28871:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28856:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "28856:3:20"
																},
																"nativeSrc": "28856:18:20",
																"nodeType": "YulFunctionCall",
																"src": "28856:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28848:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "28848:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28895:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "28895:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28906:1:20",
																				"nodeType": "YulLiteral",
																				"src": "28906:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28891:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "28891:3:20"
																		},
																		"nativeSrc": "28891:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "28891:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28914:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "28914:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28920:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "28920:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28910:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "28910:3:20"
																		},
																		"nativeSrc": "28910:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "28910:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28884:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "28884:6:20"
																},
																"nativeSrc": "28884:47:20",
																"nodeType": "YulFunctionCall",
																"src": "28884:47:20"
															},
															"nativeSrc": "28884:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "28884:47:20"
														},
														{
															"nativeSrc": "28940:139:20",
															"nodeType": "YulAssignment",
															"src": "28940:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29074:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "29074:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28948:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "28948:124:20"
																},
																"nativeSrc": "28948:131:20",
																"nodeType": "YulFunctionCall",
																"src": "28948:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28940:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "28940:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28667:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28818:9:20",
														"nodeType": "YulTypedName",
														"src": "28818:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28833:4:20",
														"nodeType": "YulTypedName",
														"src": "28833:4:20",
														"type": ""
													}
												],
												"src": "28667:419:20"
											},
											{
												"body": {
													"nativeSrc": "29140:362:20",
													"nodeType": "YulBlock",
													"src": "29140:362:20",
													"statements": [
														{
															"nativeSrc": "29150:25:20",
															"nodeType": "YulAssignment",
															"src": "29150:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29173:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "29173:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29155:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "29155:17:20"
																},
																"nativeSrc": "29155:20:20",
																"nodeType": "YulFunctionCall",
																"src": "29155:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "29150:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "29150:1:20"
																}
															]
														},
														{
															"nativeSrc": "29184:25:20",
															"nodeType": "YulAssignment",
															"src": "29184:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "29207:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "29207:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29189:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "29189:17:20"
																},
																"nativeSrc": "29189:20:20",
																"nodeType": "YulFunctionCall",
																"src": "29189:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "29184:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "29184:1:20"
																}
															]
														},
														{
															"nativeSrc": "29218:28:20",
															"nodeType": "YulVariableDeclaration",
															"src": "29218:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29241:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "29241:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "29244:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "29244:1:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "29237:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "29237:3:20"
																},
																"nativeSrc": "29237:9:20",
																"nodeType": "YulFunctionCall",
																"src": "29237:9:20"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "29222:11:20",
																	"nodeType": "YulTypedName",
																	"src": "29222:11:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29255:41:20",
															"nodeType": "YulAssignment",
															"src": "29255:41:20",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "29284:11:20",
																		"nodeType": "YulIdentifier",
																		"src": "29284:11:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29266:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "29266:17:20"
																},
																"nativeSrc": "29266:30:20",
																"nodeType": "YulFunctionCall",
																"src": "29266:30:20"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "29255:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "29255:7:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29473:22:20",
																"nodeType": "YulBlock",
																"src": "29473:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "29475:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "29475:16:20"
																			},
																			"nativeSrc": "29475:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "29475:18:20"
																		},
																		"nativeSrc": "29475:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "29475:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "29406:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "29406:1:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "29399:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "29399:6:20"
																				},
																				"nativeSrc": "29399:9:20",
																				"nodeType": "YulFunctionCall",
																				"src": "29399:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "29429:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "29429:1:20"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "29436:7:20",
																								"nodeType": "YulIdentifier",
																								"src": "29436:7:20"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "29445:1:20",
																								"nodeType": "YulIdentifier",
																								"src": "29445:1:20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "29432:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "29432:3:20"
																						},
																						"nativeSrc": "29432:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "29432:15:20"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "29426:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "29426:2:20"
																				},
																				"nativeSrc": "29426:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "29426:22:20"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "29379:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "29379:2:20"
																		},
																		"nativeSrc": "29379:83:20",
																		"nodeType": "YulFunctionCall",
																		"src": "29379:83:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "29359:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "29359:6:20"
																},
																"nativeSrc": "29359:113:20",
																"nodeType": "YulFunctionCall",
																"src": "29359:113:20"
															},
															"nativeSrc": "29356:139:20",
															"nodeType": "YulIf",
															"src": "29356:139:20"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "29092:410:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "29123:1:20",
														"nodeType": "YulTypedName",
														"src": "29123:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "29126:1:20",
														"nodeType": "YulTypedName",
														"src": "29126:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "29132:7:20",
														"nodeType": "YulTypedName",
														"src": "29132:7:20",
														"type": ""
													}
												],
												"src": "29092:410:20"
											},
											{
												"body": {
													"nativeSrc": "29551:128:20",
													"nodeType": "YulBlock",
													"src": "29551:128:20",
													"statements": [
														{
															"nativeSrc": "29561:33:20",
															"nodeType": "YulAssignment",
															"src": "29561:33:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29588:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "29588:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29570:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "29570:17:20"
																},
																"nativeSrc": "29570:24:20",
																"nodeType": "YulFunctionCall",
																"src": "29570:24:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "29561:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "29561:5:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29622:22:20",
																"nodeType": "YulBlock",
																"src": "29622:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "29624:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "29624:16:20"
																			},
																			"nativeSrc": "29624:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "29624:18:20"
																		},
																		"nativeSrc": "29624:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "29624:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29609:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "29609:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29616:4:20",
																		"nodeType": "YulLiteral",
																		"src": "29616:4:20",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "29606:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "29606:2:20"
																},
																"nativeSrc": "29606:15:20",
																"nodeType": "YulFunctionCall",
																"src": "29606:15:20"
															},
															"nativeSrc": "29603:41:20",
															"nodeType": "YulIf",
															"src": "29603:41:20"
														},
														{
															"nativeSrc": "29653:20:20",
															"nodeType": "YulAssignment",
															"src": "29653:20:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29664:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "29664:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29671:1:20",
																		"nodeType": "YulLiteral",
																		"src": "29671:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "29660:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "29660:3:20"
																},
																"nativeSrc": "29660:13:20",
																"nodeType": "YulFunctionCall",
																"src": "29660:13:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "29653:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "29653:3:20"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "29508:171:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29537:5:20",
														"nodeType": "YulTypedName",
														"src": "29537:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "29547:3:20",
														"nodeType": "YulTypedName",
														"src": "29547:3:20",
														"type": ""
													}
												],
												"src": "29508:171:20"
											},
											{
												"body": {
													"nativeSrc": "29791:76:20",
													"nodeType": "YulBlock",
													"src": "29791:76:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29813:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "29813:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29821:1:20",
																				"nodeType": "YulLiteral",
																				"src": "29821:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29809:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "29809:3:20"
																		},
																		"nativeSrc": "29809:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "29809:14:20"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "29825:34:20",
																		"nodeType": "YulLiteral",
																		"src": "29825:34:20",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29802:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "29802:6:20"
																},
																"nativeSrc": "29802:58:20",
																"nodeType": "YulFunctionCall",
																"src": "29802:58:20"
															},
															"nativeSrc": "29802:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "29802:58:20"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nativeSrc": "29685:182:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29783:6:20",
														"nodeType": "YulTypedName",
														"src": "29783:6:20",
														"type": ""
													}
												],
												"src": "29685:182:20"
											},
											{
												"body": {
													"nativeSrc": "30019:220:20",
													"nodeType": "YulBlock",
													"src": "30019:220:20",
													"statements": [
														{
															"nativeSrc": "30029:74:20",
															"nodeType": "YulAssignment",
															"src": "30029:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30095:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "30095:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30100:2:20",
																		"nodeType": "YulLiteral",
																		"src": "30100:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30036:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "30036:58:20"
																},
																"nativeSrc": "30036:67:20",
																"nodeType": "YulFunctionCall",
																"src": "30036:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30029:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "30029:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30201:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "30201:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nativeSrc": "30112:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "30112:88:20"
																},
																"nativeSrc": "30112:93:20",
																"nodeType": "YulFunctionCall",
																"src": "30112:93:20"
															},
															"nativeSrc": "30112:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "30112:93:20"
														},
														{
															"nativeSrc": "30214:19:20",
															"nodeType": "YulAssignment",
															"src": "30214:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30225:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "30225:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30230:2:20",
																		"nodeType": "YulLiteral",
																		"src": "30230:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30221:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "30221:3:20"
																},
																"nativeSrc": "30221:12:20",
																"nodeType": "YulFunctionCall",
																"src": "30221:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30214:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "30214:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29873:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30007:3:20",
														"nodeType": "YulTypedName",
														"src": "30007:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30015:3:20",
														"nodeType": "YulTypedName",
														"src": "30015:3:20",
														"type": ""
													}
												],
												"src": "29873:366:20"
											},
											{
												"body": {
													"nativeSrc": "30416:248:20",
													"nodeType": "YulBlock",
													"src": "30416:248:20",
													"statements": [
														{
															"nativeSrc": "30426:26:20",
															"nodeType": "YulAssignment",
															"src": "30426:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30438:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "30438:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30449:2:20",
																		"nodeType": "YulLiteral",
																		"src": "30449:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30434:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "30434:3:20"
																},
																"nativeSrc": "30434:18:20",
																"nodeType": "YulFunctionCall",
																"src": "30434:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30426:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "30426:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30473:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "30473:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30484:1:20",
																				"nodeType": "YulLiteral",
																				"src": "30484:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30469:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "30469:3:20"
																		},
																		"nativeSrc": "30469:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "30469:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30492:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "30492:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30498:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "30498:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30488:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "30488:3:20"
																		},
																		"nativeSrc": "30488:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "30488:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30462:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "30462:6:20"
																},
																"nativeSrc": "30462:47:20",
																"nodeType": "YulFunctionCall",
																"src": "30462:47:20"
															},
															"nativeSrc": "30462:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "30462:47:20"
														},
														{
															"nativeSrc": "30518:139:20",
															"nodeType": "YulAssignment",
															"src": "30518:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30652:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "30652:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30526:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "30526:124:20"
																},
																"nativeSrc": "30526:131:20",
																"nodeType": "YulFunctionCall",
																"src": "30526:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30518:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "30518:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30245:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30396:9:20",
														"nodeType": "YulTypedName",
														"src": "30396:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30411:4:20",
														"nodeType": "YulTypedName",
														"src": "30411:4:20",
														"type": ""
													}
												],
												"src": "30245:419:20"
											},
											{
												"body": {
													"nativeSrc": "30728:40:20",
													"nodeType": "YulBlock",
													"src": "30728:40:20",
													"statements": [
														{
															"nativeSrc": "30739:22:20",
															"nodeType": "YulAssignment",
															"src": "30739:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30755:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "30755:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30749:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "30749:5:20"
																},
																"nativeSrc": "30749:12:20",
																"nodeType": "YulFunctionCall",
																"src": "30749:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "30739:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "30739:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "30670:98:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30711:5:20",
														"nodeType": "YulTypedName",
														"src": "30711:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "30721:6:20",
														"nodeType": "YulTypedName",
														"src": "30721:6:20",
														"type": ""
													}
												],
												"src": "30670:98:20"
											},
											{
												"body": {
													"nativeSrc": "30887:34:20",
													"nodeType": "YulBlock",
													"src": "30887:34:20",
													"statements": [
														{
															"nativeSrc": "30897:18:20",
															"nodeType": "YulAssignment",
															"src": "30897:18:20",
															"value": {
																"name": "pos",
																"nativeSrc": "30912:3:20",
																"nodeType": "YulIdentifier",
																"src": "30912:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "30897:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "30897:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "30774:147:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30859:3:20",
														"nodeType": "YulTypedName",
														"src": "30859:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "30864:6:20",
														"nodeType": "YulTypedName",
														"src": "30864:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "30875:11:20",
														"nodeType": "YulTypedName",
														"src": "30875:11:20",
														"type": ""
													}
												],
												"src": "30774:147:20"
											},
											{
												"body": {
													"nativeSrc": "31035:278:20",
													"nodeType": "YulBlock",
													"src": "31035:278:20",
													"statements": [
														{
															"nativeSrc": "31045:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "31045:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31091:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "31091:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "31059:31:20",
																	"nodeType": "YulIdentifier",
																	"src": "31059:31:20"
																},
																"nativeSrc": "31059:38:20",
																"nodeType": "YulFunctionCall",
																"src": "31059:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "31049:6:20",
																	"nodeType": "YulTypedName",
																	"src": "31049:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "31106:95:20",
															"nodeType": "YulAssignment",
															"src": "31106:95:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31189:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "31189:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31194:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "31194:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "31113:75:20",
																	"nodeType": "YulIdentifier",
																	"src": "31113:75:20"
																},
																"nativeSrc": "31113:88:20",
																"nodeType": "YulFunctionCall",
																"src": "31113:88:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31106:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "31106:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "31249:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "31249:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31256:4:20",
																				"nodeType": "YulLiteral",
																				"src": "31256:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31245:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "31245:3:20"
																		},
																		"nativeSrc": "31245:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "31245:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "31263:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "31263:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31268:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "31268:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "31210:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "31210:34:20"
																},
																"nativeSrc": "31210:65:20",
																"nodeType": "YulFunctionCall",
																"src": "31210:65:20"
															},
															"nativeSrc": "31210:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "31210:65:20"
														},
														{
															"nativeSrc": "31284:23:20",
															"nodeType": "YulAssignment",
															"src": "31284:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31295:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "31295:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31300:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "31300:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31291:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "31291:3:20"
																},
																"nativeSrc": "31291:16:20",
																"nodeType": "YulFunctionCall",
																"src": "31291:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31284:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "31284:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "30927:386:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31016:5:20",
														"nodeType": "YulTypedName",
														"src": "31016:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "31023:3:20",
														"nodeType": "YulTypedName",
														"src": "31023:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31031:3:20",
														"nodeType": "YulTypedName",
														"src": "31031:3:20",
														"type": ""
													}
												],
												"src": "30927:386:20"
											},
											{
												"body": {
													"nativeSrc": "31453:137:20",
													"nodeType": "YulBlock",
													"src": "31453:137:20",
													"statements": [
														{
															"nativeSrc": "31464:100:20",
															"nodeType": "YulAssignment",
															"src": "31464:100:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31551:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "31551:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "31560:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "31560:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "31471:79:20",
																	"nodeType": "YulIdentifier",
																	"src": "31471:79:20"
																},
																"nativeSrc": "31471:93:20",
																"nodeType": "YulFunctionCall",
																"src": "31471:93:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31464:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "31464:3:20"
																}
															]
														},
														{
															"nativeSrc": "31574:10:20",
															"nodeType": "YulAssignment",
															"src": "31574:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "31581:3:20",
																"nodeType": "YulIdentifier",
																"src": "31581:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31574:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "31574:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "31319:271:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31432:3:20",
														"nodeType": "YulTypedName",
														"src": "31432:3:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31438:6:20",
														"nodeType": "YulTypedName",
														"src": "31438:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31449:3:20",
														"nodeType": "YulTypedName",
														"src": "31449:3:20",
														"type": ""
													}
												],
												"src": "31319:271:20"
											},
											{
												"body": {
													"nativeSrc": "31702:73:20",
													"nodeType": "YulBlock",
													"src": "31702:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31724:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "31724:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31732:1:20",
																				"nodeType": "YulLiteral",
																				"src": "31732:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31720:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "31720:3:20"
																		},
																		"nativeSrc": "31720:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "31720:14:20"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "31736:31:20",
																		"nodeType": "YulLiteral",
																		"src": "31736:31:20",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31713:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "31713:6:20"
																},
																"nativeSrc": "31713:55:20",
																"nodeType": "YulFunctionCall",
																"src": "31713:55:20"
															},
															"nativeSrc": "31713:55:20",
															"nodeType": "YulExpressionStatement",
															"src": "31713:55:20"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "31596:179:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31694:6:20",
														"nodeType": "YulTypedName",
														"src": "31694:6:20",
														"type": ""
													}
												],
												"src": "31596:179:20"
											},
											{
												"body": {
													"nativeSrc": "31927:220:20",
													"nodeType": "YulBlock",
													"src": "31927:220:20",
													"statements": [
														{
															"nativeSrc": "31937:74:20",
															"nodeType": "YulAssignment",
															"src": "31937:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32003:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "32003:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32008:2:20",
																		"nodeType": "YulLiteral",
																		"src": "32008:2:20",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31944:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "31944:58:20"
																},
																"nativeSrc": "31944:67:20",
																"nodeType": "YulFunctionCall",
																"src": "31944:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31937:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "31937:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32109:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "32109:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "32020:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "32020:88:20"
																},
																"nativeSrc": "32020:93:20",
																"nodeType": "YulFunctionCall",
																"src": "32020:93:20"
															},
															"nativeSrc": "32020:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "32020:93:20"
														},
														{
															"nativeSrc": "32122:19:20",
															"nodeType": "YulAssignment",
															"src": "32122:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32133:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "32133:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32138:2:20",
																		"nodeType": "YulLiteral",
																		"src": "32138:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32129:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "32129:3:20"
																},
																"nativeSrc": "32129:12:20",
																"nodeType": "YulFunctionCall",
																"src": "32129:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32122:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "32122:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31781:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31915:3:20",
														"nodeType": "YulTypedName",
														"src": "31915:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31923:3:20",
														"nodeType": "YulTypedName",
														"src": "31923:3:20",
														"type": ""
													}
												],
												"src": "31781:366:20"
											},
											{
												"body": {
													"nativeSrc": "32324:248:20",
													"nodeType": "YulBlock",
													"src": "32324:248:20",
													"statements": [
														{
															"nativeSrc": "32334:26:20",
															"nodeType": "YulAssignment",
															"src": "32334:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32346:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "32346:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32357:2:20",
																		"nodeType": "YulLiteral",
																		"src": "32357:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32342:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "32342:3:20"
																},
																"nativeSrc": "32342:18:20",
																"nodeType": "YulFunctionCall",
																"src": "32342:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32334:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "32334:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32381:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "32381:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32392:1:20",
																				"nodeType": "YulLiteral",
																				"src": "32392:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32377:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "32377:3:20"
																		},
																		"nativeSrc": "32377:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "32377:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32400:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "32400:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32406:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "32406:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32396:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "32396:3:20"
																		},
																		"nativeSrc": "32396:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "32396:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32370:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "32370:6:20"
																},
																"nativeSrc": "32370:47:20",
																"nodeType": "YulFunctionCall",
																"src": "32370:47:20"
															},
															"nativeSrc": "32370:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "32370:47:20"
														},
														{
															"nativeSrc": "32426:139:20",
															"nodeType": "YulAssignment",
															"src": "32426:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32560:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "32560:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32434:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "32434:124:20"
																},
																"nativeSrc": "32434:131:20",
																"nodeType": "YulFunctionCall",
																"src": "32434:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32426:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "32426:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32153:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32304:9:20",
														"nodeType": "YulTypedName",
														"src": "32304:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32319:4:20",
														"nodeType": "YulTypedName",
														"src": "32319:4:20",
														"type": ""
													}
												],
												"src": "32153:419:20"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // struct GameVault.PlayerInfo[]\n    function abi_decode_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x40)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"active proxy\")\n\n    }\n\n    function abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"UUPSUpgradeable: must not be cal\")\n\n        mstore(add(memPtr, 32), \"led through delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have any reward\")\n\n    }\n\n    function abi_encode_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't withdraw at this momen\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: new implementati\")\n\n        mstore(add(memPtr, 32), \"on is not UUPS\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: unsupported prox\")\n\n        mstore(add(memPtr, 32), \"iableUUID\")\n\n    }\n\n    function abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"973": [
									{
										"length": 32,
										"start": 1258
									},
									{
										"length": 32,
										"start": 1400
									},
									{
										"length": 32,
										"start": 2030
									},
									{
										"length": 32,
										"start": 2172
									},
									{
										"length": 32,
										"start": 2347
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c8063542e37cc11610089578063b88a802f11610058578063b88a802f1461030c578063bb6ceb4f14610322578063d547741f1461035e578063f396d89914610386576100f2565b8063542e37cc14610254578063651f066a1461027c57806391d14854146102a6578063a217fddf146102e2576100f2565b80633659cfe6116100c55780633659cfe6146101be578063485cc955146101e65780634f1ef2861461020e57806352d1902d1461022a576100f2565b806301ffc9a7146100f6578063248a9ca3146101325780632f2ff15d1461016e57806336568abe14610196575b5f80fd5b348015610101575f80fd5b5061011c60048036038101906101179190611c2f565b6103ae565b6040516101299190611c74565b60405180910390f35b34801561013d575f80fd5b5061015860048036038101906101539190611cc0565b610427565b6040516101659190611cfa565b60405180910390f35b348015610179575f80fd5b50610194600480360381019061018f9190611d6d565b610444565b005b3480156101a1575f80fd5b506101bc60048036038101906101b79190611d6d565b610465565b005b3480156101c9575f80fd5b506101e460048036038101906101df9190611dab565b6104e8565b005b3480156101f1575f80fd5b5061020c60048036038101906102079190611dd6565b61066e565b005b61022860048036038101906102239190611f50565b6107ec565b005b348015610235575f80fd5b5061023e610928565b60405161024b9190611cfa565b60405180910390f35b34801561025f575f80fd5b5061027a6004803603810190610275919061206e565b6109df565b005b348015610287575f80fd5b50610290610a2b565b60405161029d91906120cd565b60405180910390f35b3480156102b1575f80fd5b506102cc60048036038101906102c79190611d6d565b610a6f565b6040516102d99190611c74565b60405180910390f35b3480156102ed575f80fd5b506102f6610ad3565b6040516103039190611cfa565b60405180910390f35b348015610317575f80fd5b50610320610ad9565b005b34801561032d575f80fd5b5061034860048036038101906103439190611dab565b610dcc565b60405161035591906120cd565b60405180910390f35b348015610369575f80fd5b50610384600480360381019061037f9190611d6d565b610e1f565b005b348015610391575f80fd5b506103ac60048036038101906103a7919061213f565b610e40565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610420575061041f82610f04565b5b9050919050565b5f60c95f8381526020019081526020015f20600101549050919050565b61044d82610427565b61045681610f6d565b6104608383610f81565b505050565b61046d61105c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d19061220a565b60405180910390fd5b6104e48282611063565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90612298565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105b561113e565b73ffffffffffffffffffffffffffffffffffffffff161461060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290612326565b60405180910390fd5b61061481611191565b61066b815f67ffffffffffffffff81111561063257610631611e2c565b5b6040519080825280601f01601f1916602001820160405280156106645781602001600182028036833780820191505090505b505f6111a1565b50565b5f8060019054906101000a900460ff1615905080801561069d575060015f8054906101000a900460ff1660ff16105b806106c957506106ac3061130b565b1580156106c8575060015f8054906101000a900460ff1660ff16145b5b610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff906123b4565b60405180910390fd5b60015f806101000a81548160ff021916908360ff16021790555080156107435760015f60016101000a81548160ff0219169083151502179055505b8260fb5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061078f5f801b8361132d565b80156107e7575f8060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516107de9190612420565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087190612298565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108b961113e565b73ffffffffffffffffffffffffffffffffffffffff161461090f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090690612326565b60405180910390fd5b61091882611191565b610924828260016111a1565b5050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146109b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ae906124a9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f801b6109eb81610f6d565b5f5b8251811015610a2657610a19838281518110610a0c57610a0b6124c7565b5b602002602001015161133b565b80806001019150506109ed565b505050565b5f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f9061253e565b60405180910390fd5b60fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bb2919061256b565b602060405180830381865afa158015610bcd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf191906125ae565b60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541115610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790612649565b60405180910390fd5b5f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60fc5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d4f929190612667565b6020604051808303815f875af1158015610d6b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d8f91906126b8565b507fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e3382604051610dc1929190612667565b60405180910390a150565b5f805f1b610dd981610f6d565b60fc5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610e2882610427565b610e3181610f6d565b610e3b8383611063565b505050565b5f801b610e4c81610f6d565b5f5b83839050811015610efe57838382818110610e6c57610e6b6124c7565b5b9050604002016020013560fc5f868685818110610e8c57610e8b6124c7565b5b9050604002015f016020810190610ea39190611dab565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610eea9190612710565b925050819055508080600101915050610e4e565b50505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610f7e81610f7961105c565b61162f565b50565b610f8b8282610a6f565b61105857600160c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ffd61105c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b61106d8282610a6f565b1561113a575f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506110df61105c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f61116a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6116b3565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f801b61119d81610f6d565b5050565b6111cc7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435f1b6116bc565b5f015f9054906101000a900460ff16156111ee576111e9836116c5565b611306565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561125657506040513d601f19601f820116820180604052508101906112539190612757565b60015b611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128c906127f2565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146112f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f090612880565b60405180910390fd5b5061130583838361177b565b5b505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6113378282610f81565b5050565b5f60fc5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b19061253e565b60405180910390fd5b60fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611414919061256b565b602060405180830381865afa15801561142f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061145391906125ae565b60fc5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411156114d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c990612649565b60405180910390fd5b5f60fc5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60fc5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016115b1929190612667565b6020604051808303815f875af11580156115cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f191906126b8565b507fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e8282604051611623929190612667565b60405180910390a15050565b6116398282610a6f565b6116af57611646816117a6565b611653835f1c60206117d3565b604051602001611664929190612984565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a691906129f5565b60405180910390fd5b5050565b5f819050919050565b5f819050919050565b6116ce8161130b565b61170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170490612a85565b60405180910390fd5b806117397f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6116b3565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61178483611a08565b5f825111806117905750805b156117a15761179f8383611a57565b505b505050565b60606117cc8273ffffffffffffffffffffffffffffffffffffffff16601460ff166117d3565b9050919050565b60605f60028360026117e59190612aa3565b6117ef9190612710565b67ffffffffffffffff81111561180857611807611e2c565b5b6040519080825280601f01601f19166020018201604052801561183a5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f81518110611871576118706124c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106118d4576118d36124c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f60018460026119129190612aa3565b61191c9190612710565b90505b60018111156119bb577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061195e5761195d6124c7565b5b1a60f81b828281518110611975576119746124c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c9450806119b490612ae4565b905061191f565b505f84146119fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f590612b55565b60405180910390fd5b8091505092915050565b611a11816116c5565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611a7c8383604051806060016040528060278152602001612c3660279139611a84565b905092915050565b60605f808573ffffffffffffffffffffffffffffffffffffffff1685604051611aad9190612bb7565b5f60405180830381855af49150503d805f8114611ae5576040519150601f19603f3d011682016040523d82523d5f602084013e611aea565b606091505b5091509150611afb86838387611b06565b925050509392505050565b60608315611b67575f835103611b5f57611b1f8561130b565b611b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5590612c17565b60405180910390fd5b5b829050611b72565b611b718383611b7a565b5b949350505050565b5f82511115611b8c5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc091906129f5565b60405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c0e81611bda565b8114611c18575f80fd5b50565b5f81359050611c2981611c05565b92915050565b5f60208284031215611c4457611c43611bd2565b5b5f611c5184828501611c1b565b91505092915050565b5f8115159050919050565b611c6e81611c5a565b82525050565b5f602082019050611c875f830184611c65565b92915050565b5f819050919050565b611c9f81611c8d565b8114611ca9575f80fd5b50565b5f81359050611cba81611c96565b92915050565b5f60208284031215611cd557611cd4611bd2565b5b5f611ce284828501611cac565b91505092915050565b611cf481611c8d565b82525050565b5f602082019050611d0d5f830184611ceb565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d3c82611d13565b9050919050565b611d4c81611d32565b8114611d56575f80fd5b50565b5f81359050611d6781611d43565b92915050565b5f8060408385031215611d8357611d82611bd2565b5b5f611d9085828601611cac565b9250506020611da185828601611d59565b9150509250929050565b5f60208284031215611dc057611dbf611bd2565b5b5f611dcd84828501611d59565b91505092915050565b5f8060408385031215611dec57611deb611bd2565b5b5f611df985828601611d59565b9250506020611e0a85828601611d59565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e6282611e1c565b810181811067ffffffffffffffff82111715611e8157611e80611e2c565b5b80604052505050565b5f611e93611bc9565b9050611e9f8282611e59565b919050565b5f67ffffffffffffffff821115611ebe57611ebd611e2c565b5b611ec782611e1c565b9050602081019050919050565b828183375f83830152505050565b5f611ef4611eef84611ea4565b611e8a565b905082815260208101848484011115611f1057611f0f611e18565b5b611f1b848285611ed4565b509392505050565b5f82601f830112611f3757611f36611e14565b5b8135611f47848260208601611ee2565b91505092915050565b5f8060408385031215611f6657611f65611bd2565b5b5f611f7385828601611d59565b925050602083013567ffffffffffffffff811115611f9457611f93611bd6565b5b611fa085828601611f23565b9150509250929050565b5f67ffffffffffffffff821115611fc457611fc3611e2c565b5b602082029050602081019050919050565b5f80fd5b5f611feb611fe684611faa565b611e8a565b9050808382526020820190506020840283018581111561200e5761200d611fd5565b5b835b8181101561203757806120238882611d59565b845260208401935050602081019050612010565b5050509392505050565b5f82601f83011261205557612054611e14565b5b8135612065848260208601611fd9565b91505092915050565b5f6020828403121561208357612082611bd2565b5b5f82013567ffffffffffffffff8111156120a05761209f611bd6565b5b6120ac84828501612041565b91505092915050565b5f819050919050565b6120c7816120b5565b82525050565b5f6020820190506120e05f8301846120be565b92915050565b5f80fd5b5f8083601f8401126120ff576120fe611e14565b5b8235905067ffffffffffffffff81111561211c5761211b6120e6565b5b60208301915083604082028301111561213857612137611fd5565b5b9250929050565b5f806020838503121561215557612154611bd2565b5b5f83013567ffffffffffffffff81111561217257612171611bd6565b5b61217e858286016120ea565b92509250509250929050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f6121f4602f8361218a565b91506121ff8261219a565b604082019050919050565b5f6020820190508181035f830152612221816121e8565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b5f612282602c8361218a565b915061228d82612228565b604082019050919050565b5f6020820190508181035f8301526122af81612276565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b5f612310602c8361218a565b915061231b826122b6565b604082019050919050565b5f6020820190508181035f83015261233d81612304565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f61239e602e8361218a565b91506123a982612344565b604082019050919050565b5f6020820190508181035f8301526123cb81612392565b9050919050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61240a612405612400846123d2565b6123e7565b6123db565b9050919050565b61241a816123f0565b82525050565b5f6020820190506124335f830184612411565b92915050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c5f8201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b5f61249360388361218a565b915061249e82612439565b604082019050919050565b5f6020820190508181035f8301526124c081612487565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f596f7520646f6e2774206861766520616e7920726577617264000000000000005f82015250565b5f61252860198361218a565b9150612533826124f4565b602082019050919050565b5f6020820190508181035f8301526125558161251c565b9050919050565b61256581611d32565b82525050565b5f60208201905061257e5f83018461255c565b92915050565b61258d816120b5565b8114612597575f80fd5b50565b5f815190506125a881612584565b92915050565b5f602082840312156125c3576125c2611bd2565b5b5f6125d08482850161259a565b91505092915050565b7f596f752063616e27742077697468647261772061742074686973206d6f6d656e5f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f61263360218361218a565b915061263e826125d9565b604082019050919050565b5f6020820190508181035f83015261266081612627565b9050919050565b5f60408201905061267a5f83018561255c565b61268760208301846120be565b9392505050565b61269781611c5a565b81146126a1575f80fd5b50565b5f815190506126b28161268e565b92915050565b5f602082840312156126cd576126cc611bd2565b5b5f6126da848285016126a4565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61271a826120b5565b9150612725836120b5565b925082820190508082111561273d5761273c6126e3565b5b92915050565b5f8151905061275181611c96565b92915050565b5f6020828403121561276c5761276b611bd2565b5b5f61277984828501612743565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e746174695f8201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b5f6127dc602e8361218a565b91506127e782612782565b604082019050919050565b5f6020820190508181035f830152612809816127d0565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f785f8201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b5f61286a60298361218a565b915061287582612810565b604082019050919050565b5f6020820190508181035f8301526128978161285e565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f6128dc60178361289e565b91506128e7826128a8565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f612914826128f2565b61291e818561289e565b935061292e8185602086016128fc565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f61296e60118361289e565b91506129798261293a565b601182019050919050565b5f61298e826128d0565b915061299a828561290a565b91506129a582612962565b91506129b1828461290a565b91508190509392505050565b5f6129c7826128f2565b6129d1818561218a565b93506129e18185602086016128fc565b6129ea81611e1c565b840191505092915050565b5f6020820190508181035f830152612a0d81846129bd565b905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f612a6f602d8361218a565b9150612a7a82612a15565b604082019050919050565b5f6020820190508181035f830152612a9c81612a63565b9050919050565b5f612aad826120b5565b9150612ab8836120b5565b9250828202612ac6816120b5565b91508282048414831517612add57612adc6126e3565b5b5092915050565b5f612aee826120b5565b91505f8203612b0057612aff6126e3565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f612b3f60208361218a565b9150612b4a82612b0b565b602082019050919050565b5f6020820190508181035f830152612b6c81612b33565b9050919050565b5f81519050919050565b5f81905092915050565b5f612b9182612b73565b612b9b8185612b7d565b9350612bab8185602086016128fc565b80840191505092915050565b5f612bc28284612b87565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f612c01601d8361218a565b9150612c0c82612bcd565b602082019050919050565b5f6020820190508181035f830152612c2e81612bf5565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e1c4874ad6f32b1b31904c46d059eda3c3faa2354e79c921b30cac71597a0c9364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x542E37CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xBB6CEB4F EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xF396D899 EQ PUSH2 0x386 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x542E37CC EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x651F066A EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E2 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x22A JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0xAD9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xE1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x420 JUMPI POP PUSH2 0x41F DUP3 PUSH2 0xF04 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44D DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH2 0x456 DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x460 DUP4 DUP4 PUSH2 0xF81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x46D PUSH2 0x105C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E4 DUP3 DUP3 PUSH2 0x1063 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56D SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B5 PUSH2 0x113E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x66B DUP2 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x632 JUMPI PUSH2 0x631 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x664 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH0 PUSH2 0x11A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x69D JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x6C9 JUMPI POP PUSH2 0x6AC ADDRESS PUSH2 0x130B JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0xFB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x78F PUSH0 DUP1 SHL DUP4 PUSH2 0x132D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x2420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x871 SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B9 PUSH2 0x113E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 DUP3 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x924 DUP3 DUP3 PUSH1 0x1 PUSH2 0x11A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x9EB DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA26 JUMPI PUSH2 0xA19 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x133B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB2 SWAP2 SWAP1 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBCD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x25AE JUMP JUMPDEST PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP1 PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xFC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4F SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST POP PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC1 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SHL PUSH2 0xDD9 DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0xFC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE28 DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH2 0xE31 DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xE3B DUP4 DUP4 PUSH2 0x1063 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xE4C DUP2 PUSH2 0xF6D JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xEFE JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xE6C JUMPI PUSH2 0xE6B PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFC PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEA3 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0xF79 PUSH2 0x105C JUMP JUMPDEST PUSH2 0x162F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF8B DUP3 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x1 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFFD PUSH2 0x105C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x106D DUP3 DUP3 PUSH2 0xA6F JUMP JUMPDEST ISZERO PUSH2 0x113A JUMPI PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10DF PUSH2 0x105C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x116A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x16B3 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x119D DUP2 PUSH2 0xF6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11CC PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH0 SHL PUSH2 0x16BC JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11EE JUMPI PUSH2 0x11E9 DUP4 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1256 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP1 PUSH2 0x27F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F0 SWAP1 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1305 DUP4 DUP4 DUP4 PUSH2 0x177B JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1337 DUP3 DUP3 PUSH2 0xF81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x25AE JUMP JUMPDEST PUSH1 0xFC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C9 SWAP1 PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xFC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xFC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B1 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F1 SWAP2 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST POP PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1623 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1639 DUP3 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x16AF JUMPI PUSH2 0x1646 DUP2 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x1653 DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1664 SWAP3 SWAP2 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CE DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x170D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1704 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1739 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x16B3 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1784 DUP4 PUSH2 0x1A08 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x1790 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x179F DUP4 DUP4 PUSH2 0x1A57 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17CC DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x17E5 SWAP2 SWAP1 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x17EF SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1808 JUMPI PUSH2 0x1807 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x183A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x18D4 JUMPI PUSH2 0x18D3 PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x191C SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19BB JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x195E JUMPI PUSH2 0x195D PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x24C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x19B4 SWAP1 PUSH2 0x2AE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x191F JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x19FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F5 SWAP1 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A11 DUP2 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A7C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C36 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1AAD SWAP2 SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AE5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1AFB DUP7 DUP4 DUP4 DUP8 PUSH2 0x1B06 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B67 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x1B5F JUMPI PUSH2 0x1B1F DUP6 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x1B5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B55 SWAP1 PUSH2 0x2C17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1B71 DUP4 DUP4 PUSH2 0x1B7A JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1B8C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC0 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0E DUP2 PUSH2 0x1BDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C29 DUP2 PUSH2 0x1C05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C44 JUMPI PUSH2 0x1C43 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C51 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6E DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C87 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9F DUP2 PUSH2 0x1C8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CBA DUP2 PUSH2 0x1C96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CF4 DUP2 PUSH2 0x1C8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0D PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3C DUP3 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D4C DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D67 DUP2 PUSH2 0x1D43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D83 JUMPI PUSH2 0x1D82 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D90 DUP6 DUP3 DUP7 ADD PUSH2 0x1CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DBF PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCD DUP5 DUP3 DUP6 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DEC JUMPI PUSH2 0x1DEB PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E0A DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E62 DUP3 PUSH2 0x1E1C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E81 JUMPI PUSH2 0x1E80 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E93 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E9F DUP3 DUP3 PUSH2 0x1E59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EBE JUMPI PUSH2 0x1EBD PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH2 0x1EC7 DUP3 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF4 PUSH2 0x1EEF DUP5 PUSH2 0x1EA4 JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F10 JUMPI PUSH2 0x1F0F PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH2 0x1F1B DUP5 DUP3 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F37 JUMPI PUSH2 0x1F36 PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F47 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F73 DUP6 DUP3 DUP7 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F94 JUMPI PUSH2 0x1F93 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH2 0x1FA0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FC4 JUMPI PUSH2 0x1FC3 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1FEB PUSH2 0x1FE6 DUP5 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x200E JUMPI PUSH2 0x200D PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2037 JUMPI DUP1 PUSH2 0x2023 DUP9 DUP3 PUSH2 0x1D59 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2010 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2055 JUMPI PUSH2 0x2054 PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2065 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x209F PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH2 0x20AC DUP5 DUP3 DUP6 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x20B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20FF JUMPI PUSH2 0x20FE PUSH2 0x1E14 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x211C JUMPI PUSH2 0x211B PUSH2 0x20E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2138 JUMPI PUSH2 0x2137 PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH2 0x217E DUP6 DUP3 DUP7 ADD PUSH2 0x20EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F4 PUSH1 0x2F DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x21FF DUP3 PUSH2 0x219A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2221 DUP2 PUSH2 0x21E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2282 PUSH1 0x2C DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x228D DUP3 PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AF DUP2 PUSH2 0x2276 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2310 PUSH1 0x2C DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x231B DUP3 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233D DUP2 PUSH2 0x2304 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x239E PUSH1 0x2E DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x23A9 DUP3 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23CB DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x240A PUSH2 0x2405 PUSH2 0x2400 DUP5 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x23DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x241A DUP2 PUSH2 0x23F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2433 PUSH0 DUP4 ADD DUP5 PUSH2 0x2411 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2493 PUSH1 0x38 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x249E DUP3 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24C0 DUP2 PUSH2 0x2487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x596F7520646F6E2774206861766520616E792072657761726400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2528 PUSH1 0x19 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2533 DUP3 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x251C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2565 DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257E PUSH0 DUP4 ADD DUP5 PUSH2 0x255C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x20B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A8 DUP2 PUSH2 0x2584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C3 JUMPI PUSH2 0x25C2 PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25D0 DUP5 DUP3 DUP6 ADD PUSH2 0x259A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E27742077697468647261772061742074686973206D6F6D656E PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2633 PUSH1 0x21 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x263E DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2660 DUP2 PUSH2 0x2627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x267A PUSH0 DUP4 ADD DUP6 PUSH2 0x255C JUMP JUMPDEST PUSH2 0x2687 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2697 DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x26A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B2 DUP2 PUSH2 0x268E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CD JUMPI PUSH2 0x26CC PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26DA DUP5 DUP3 DUP6 ADD PUSH2 0x26A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x271A DUP3 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2725 DUP4 PUSH2 0x20B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x273D JUMPI PUSH2 0x273C PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2751 DUP2 PUSH2 0x1C96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276C JUMPI PUSH2 0x276B PUSH2 0x1BD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2779 DUP5 DUP3 DUP6 ADD PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27DC PUSH1 0x2E DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x27E7 DUP3 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2809 DUP2 PUSH2 0x27D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x286A PUSH1 0x29 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2875 DUP3 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2897 DUP2 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28DC PUSH1 0x17 DUP4 PUSH2 0x289E JUMP JUMPDEST SWAP2 POP PUSH2 0x28E7 DUP3 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2914 DUP3 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x291E DUP2 DUP6 PUSH2 0x289E JUMP JUMPDEST SWAP4 POP PUSH2 0x292E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x296E PUSH1 0x11 DUP4 PUSH2 0x289E JUMP JUMPDEST SWAP2 POP PUSH2 0x2979 DUP3 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x298E DUP3 PUSH2 0x28D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x299A DUP3 DUP6 PUSH2 0x290A JUMP JUMPDEST SWAP2 POP PUSH2 0x29A5 DUP3 PUSH2 0x2962 JUMP JUMPDEST SWAP2 POP PUSH2 0x29B1 DUP3 DUP5 PUSH2 0x290A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29C7 DUP3 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x29D1 DUP2 DUP6 PUSH2 0x218A JUMP JUMPDEST SWAP4 POP PUSH2 0x29E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x29EA DUP2 PUSH2 0x1E1C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A0D DUP2 DUP5 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A6F PUSH1 0x2D DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7A DUP3 PUSH2 0x2A15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 PUSH2 0x2A63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AAD DUP3 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB8 DUP4 PUSH2 0x20B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2AC6 DUP2 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ADD JUMPI PUSH2 0x2ADC PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEE DUP3 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x2B00 JUMPI PUSH2 0x2AFF PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3F PUSH1 0x20 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4A DUP3 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6C DUP2 PUSH2 0x2B33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B91 DUP3 PUSH2 0x2B73 JUMP JUMPDEST PUSH2 0x2B9B DUP2 DUP6 PUSH2 0x2B7D JUMP JUMPDEST SWAP4 POP PUSH2 0x2BAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BC2 DUP3 DUP5 PUSH2 0x2B87 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C01 PUSH1 0x1D DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0C DUP3 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2E DUP2 PUSH2 0x2BF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220E1C487 BLOBBASEFEE 0xD6 RETURN 0x2B SHL BALANCE SWAP1 0x4C CHAINID 0xD0 MSIZE 0xED LOG3 0xC3 STATICCALL LOG2 CALLDATALOAD 0x4E PUSH26 0xC921B30CAC71597A0C9364736F6C634300081A00330000000000 ",
							"sourceMap": "381:2276:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3029:213:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4834:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5259:145;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6368:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3387:195:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;754::19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3901:220:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3006:131;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2049:214:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2268:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3329:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2450:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1200:419:19;;;;;;;;;;;;;:::i;:::-;;2377:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5684:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;954:241:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3029:213:0;3114:4;3152:43;3137:58;;;:11;:58;;;;:98;;;;3199:36;3223:11;3199:23;:36::i;:::-;3137:98;3130:105;;3029:213;;;:::o;4834:129::-;4908:7;4934:6;:12;4941:4;4934:12;;;;;;;;;;;:22;;;4927:29;;4834:129;;;:::o;5259:145::-;5342:18;5355:4;5342:12;:18::i;:::-;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;6474:12;:10;:12::i;:::-;6463:23;;:7;:23;;;6455:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;3387:195:7:-;1898:6;1881:23;;1889:4;1881:23;;;1873:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1995:6;1971:30;;:20;:18;:20::i;:::-;:30;;;1963:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3468:36:::1;3486:17;3468;:36::i;:::-;3514:61;3536:17;3565:1;3555:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3569:5;3514:21;:61::i;:::-;3387:195:::0;:::o;754::19:-;3279:19:6;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;886:7:19::1;859:6;;:35;;;;;;;;;;;;;;;;;;904:38;2495:4:0;915:18:19::0;::::1;935:6;904:10;:38::i;:::-;3651:14:6::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;754:195:19;;:::o;3901:220:7:-;1898:6;1881:23;;1889:4;1881:23;;;1873:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1995:6;1971:30;;:20;:18;:20::i;:::-;:30;;;1963:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2333:6;2316:23;;2324:4;2316:23;;;2308:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1312:66:4::1;3110:20:7;;3103:27;;3006:131:::0;:::o;2049:214:19:-;2495:4:0;2126:18:19;;2928:16:0;2939:4;2928:10;:16::i;:::-;2160:9:19::1;2156:101;2179:10;:17;2176:1;:20;2156:101;;;2215:31;2232:10;2243:1;2232:13;;;;;;;;:::i;:::-;;;;;;;;2215:16;:31::i;:::-;2198:3;;;;;;;2156:101;;;;2049:214:::0;;:::o;2268:104::-;2315:4;2339:14;:26;2354:10;2339:26;;;;;;;;;;;;;;;;2332:33;;2268:104;:::o;3329:145:0:-;3415:4;3438:6;:12;3445:4;3438:12;;;;;;;;;;;:20;;:29;3459:7;3438:29;;;;;;;;;;;;;;;;;;;;;;;;;3431:36;;3329:145;;;;:::o;2450:49::-;2495:4;2450:49;;;:::o;1200:419:19:-;1279:1;1250:14;:26;1265:10;1250:26;;;;;;;;;;;;;;;;:30;1242:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:6;;;;;;;;;;;:16;;;1384:4;1359:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1329:14;:26;1344:10;1329:26;;;;;;;;;;;;;;;;:61;;1321:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;1438:14;1455;:26;1470:10;1455:26;;;;;;;;;;;;;;;;1438:43;;1520:1;1491:14;:26;1506:10;1491:26;;;;;;;;;;;;;;;:30;;;;1531:6;;;;;;;;;;;:15;;;1547:10;1559:6;1531:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1581:31;1593:10;1605:6;1581:31;;;;;;;:::i;:::-;;;;;;;;1232:387;1200:419::o;2377:148::-;2473:4;2495::0;2445:18:19;;2928:16:0;2939:4;2928:10;:16::i;:::-;2495:14:19::1;:23;2510:7;2495:23;;;;;;;;;;;;;;;;2488:30;;2377:148:::0;;;;:::o;5684:147:0:-;5768:18;5781:4;5768:12;:18::i;:::-;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;:::-;5684:147:::0;;;:::o;954:241:19:-;2495:4:0;1029:18:19;;2928:16:0;2939:4;2928:10;:16::i;:::-;1062:9:19::1;1058:131;1078:10;;:17;;1075:1;:20;1058:131;;;1157:10;;1168:1;1157:13;;;;;;;:::i;:::-;;;;;;;:21;;;1116:14;:36;1131:10;;1142:1;1131:13;;;;;;;:::i;:::-;;;;;;;:20;;;;;;;;;;:::i;:::-;1116:36;;;;;;;;;;;;;;;;:62;;;;;;;:::i;:::-;;;;;;;;1097:3;;;;;;;1058:131;;;;954:241:::0;;;:::o;1060:166:15:-;1145:4;1183:36;1168:51;;;:11;:51;;;;1161:58;;1060:166;;;:::o;3768:103:0:-;3834:30;3845:4;3851:12;:10;:12::i;:::-;3834:10;:30::i;:::-;3768:103;:::o;7917:233::-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8070:4;8038:6;:12;8045:4;8038:12;;;;;;;;;;;:20;;:29;8059:7;8038:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8120:12;:10;:12::i;:::-;8093:40;;8111:7;8093:40;;8105:4;8093:40;;;;;;;;;;7995:149;7917:233;;:::o;850:96:12:-;903:7;929:10;922:17;;850:96;:::o;8321:234:0:-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:6;:12;8449:4;8442:12;;;;;;;;;;;:20;;:29;8463:7;8442:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8525:12;:10;:12::i;:::-;8498:40;;8516:7;8498:40;;8510:4;8498:40;;;;;;;;;;8400:149;8321:234;;:::o;1457:151:4:-;1510:7;1536:59;1312:66;1574:20;;1536:37;:59::i;:::-;:65;;;;;;;;;;;;1529:72;;1457:151;:::o;2530:125:19:-;2495:4:0;2633:18:19;;2928:16:0;2939:4;2928:10;:16::i;:::-;2530:125:19;;:::o;2820:944:4:-;3236:53;971:66;3274:14;;3236:37;:53::i;:::-;:59;;;;;;;;;;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;:::-;3232:526;;;3412:17;3383:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;;;;;;;;;:::i;:::-;;;;;;;;3379:302;1312:66;3504:20;;3496:4;:28;3488:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;:::-;3232:526;2820:944;;;:::o;1423:320:11:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;7267:110:0:-;7345:25;7356:4;7362:7;7345:10;:25::i;:::-;7267:110;;:::o;1624:420:19:-;1719:1;1693:14;:23;1708:7;1693:23;;;;;;;;;;;;;;;;:27;1685:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1796:6;;;;;;;;;;;:16;;;1821:4;1796:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1769:14;:23;1784:7;1769:23;;;;;;;;;;;;;;;;:58;;1761:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;1875:14;1892;:23;1907:7;1892:23;;;;;;;;;;;;;;;;1875:40;;1951:1;1925:14;:23;1940:7;1925:23;;;;;;;;;;;;;;;:27;;;;1962:6;;;;;;;;;;;:15;;;1978:7;1987:6;1962:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2009:28;2021:7;2030:6;2009:28;;;;;;;:::i;:::-;;;;;;;;1675:369;1624:420;:::o;4152:501:0:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4564:13;;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4278:358;;;;;;;;;;;:::i;:::-;;;;;;;;4235:412;4152:501;;:::o;1870:190:13:-;1931:21;2040:4;2030:14;;1870:190;;;:::o;2158:::-;2219:21;2328:4;2318:14;;2158:190;;;:::o;1699:281:4:-;1780:48;1810:17;1780:29;:48::i;:::-;1772:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1956:17;1888:59;1312:66;1926:20;;1888:37;:59::i;:::-;:65;;;:85;;;;;;;;;;;;;;;;;;1699:281;:::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2519:123;2372:276;;;:::o;2473:149:14:-;2531:13;2563:52;2591:4;2575:22;;376:2;2563:52;;:11;:52::i;:::-;2556:59;;2473:149;;;:::o;1884:437::-;1959:13;1984:19;2029:1;2020:6;2016:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:47;;2041:15;:6;2048:1;2041:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2066;:6;2073:1;2066:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2096:9;2121:1;2112:6;2108:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;2162:8;2179:3;2171:5;:11;2162:21;;;;;;;:::i;:::-;;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2207:1;2197:11;;;;;2131:3;;;;:::i;:::-;;;2091:128;;;;2245:1;2236:5;:10;2228:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2307:6;2293:21;;;1884:437;;;;:::o;2086:152:4:-;2152:37;2171:17;2152:18;:37::i;:::-;2213:17;2204:27;;;;;;;;;;;;2086:152;:::o;6685:198:11:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;;6685:198;;;;:::o;7069:325::-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;;;;7069:325;;;;;:::o;7682:628::-;7862:12;7890:7;7886:418;;;7938:1;7917:10;:17;:22;7913:286;;8132:18;8143:6;8132:10;:18::i;:::-;8124:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7913:286;8219:10;8212:17;;;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;;:::o;8832:540::-;9011:1;8991:10;:17;:21;8987:379;;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:75:20;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:329::-;3607:6;3656:2;3644:9;3635:7;3631:23;3627:32;3624:119;;;3662:79;;:::i;:::-;3624:119;3782:1;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3753:117;3548:329;;;;:::o;3883:474::-;3951:6;3959;4008:2;3996:9;3987:7;3983:23;3979:32;3976:119;;;4014:79;;:::i;:::-;3976:119;4134:1;4159:53;4204:7;4195:6;4184:9;4180:22;4159:53;:::i;:::-;4149:63;;4105:117;4261:2;4287:53;4332:7;4323:6;4312:9;4308:22;4287:53;:::i;:::-;4277:63;;4232:118;3883:474;;;;;:::o;4363:117::-;4472:1;4469;4462:12;4486:117;4595:1;4592;4585:12;4609:102;4650:6;4701:2;4697:7;4692:2;4685:5;4681:14;4677:28;4667:38;;4609:102;;;:::o;4717:180::-;4765:77;4762:1;4755:88;4862:4;4859:1;4852:15;4886:4;4883:1;4876:15;4903:281;4986:27;5008:4;4986:27;:::i;:::-;4978:6;4974:40;5116:6;5104:10;5101:22;5080:18;5068:10;5065:34;5062:62;5059:88;;;5127:18;;:::i;:::-;5059:88;5167:10;5163:2;5156:22;4946:238;4903:281;;:::o;5190:129::-;5224:6;5251:20;;:::i;:::-;5241:30;;5280:33;5308:4;5300:6;5280:33;:::i;:::-;5190:129;;;:::o;5325:307::-;5386:4;5476:18;5468:6;5465:30;5462:56;;;5498:18;;:::i;:::-;5462:56;5536:29;5558:6;5536:29;:::i;:::-;5528:37;;5620:4;5614;5610:15;5602:23;;5325:307;;;:::o;5638:148::-;5736:6;5731:3;5726;5713:30;5777:1;5768:6;5763:3;5759:16;5752:27;5638:148;;;:::o;5792:423::-;5869:5;5894:65;5910:48;5951:6;5910:48;:::i;:::-;5894:65;:::i;:::-;5885:74;;5982:6;5975:5;5968:21;6020:4;6013:5;6009:16;6058:3;6049:6;6044:3;6040:16;6037:25;6034:112;;;6065:79;;:::i;:::-;6034:112;6155:54;6202:6;6197:3;6192;6155:54;:::i;:::-;5875:340;5792:423;;;;;:::o;6234:338::-;6289:5;6338:3;6331:4;6323:6;6319:17;6315:27;6305:122;;6346:79;;:::i;:::-;6305:122;6463:6;6450:20;6488:78;6562:3;6554:6;6547:4;6539:6;6535:17;6488:78;:::i;:::-;6479:87;;6295:277;6234:338;;;;:::o;6578:652::-;6655:6;6663;6712:2;6700:9;6691:7;6687:23;6683:32;6680:119;;;6718:79;;:::i;:::-;6680:119;6838:1;6863:53;6908:7;6899:6;6888:9;6884:22;6863:53;:::i;:::-;6853:63;;6809:117;6993:2;6982:9;6978:18;6965:32;7024:18;7016:6;7013:30;7010:117;;;7046:79;;:::i;:::-;7010:117;7151:62;7205:7;7196:6;7185:9;7181:22;7151:62;:::i;:::-;7141:72;;6936:287;6578:652;;;;;:::o;7236:311::-;7313:4;7403:18;7395:6;7392:30;7389:56;;;7425:18;;:::i;:::-;7389:56;7475:4;7467:6;7463:17;7455:25;;7535:4;7529;7525:15;7517:23;;7236:311;;;:::o;7553:117::-;7662:1;7659;7652:12;7693:710;7789:5;7814:81;7830:64;7887:6;7830:64;:::i;:::-;7814:81;:::i;:::-;7805:90;;7915:5;7944:6;7937:5;7930:21;7978:4;7971:5;7967:16;7960:23;;8031:4;8023:6;8019:17;8011:6;8007:30;8060:3;8052:6;8049:15;8046:122;;;8079:79;;:::i;:::-;8046:122;8194:6;8177:220;8211:6;8206:3;8203:15;8177:220;;;8286:3;8315:37;8348:3;8336:10;8315:37;:::i;:::-;8310:3;8303:50;8382:4;8377:3;8373:14;8366:21;;8253:144;8237:4;8232:3;8228:14;8221:21;;8177:220;;;8181:21;7795:608;;7693:710;;;;;:::o;8426:370::-;8497:5;8546:3;8539:4;8531:6;8527:17;8523:27;8513:122;;8554:79;;:::i;:::-;8513:122;8671:6;8658:20;8696:94;8786:3;8778:6;8771:4;8763:6;8759:17;8696:94;:::i;:::-;8687:103;;8503:293;8426:370;;;;:::o;8802:539::-;8886:6;8935:2;8923:9;8914:7;8910:23;8906:32;8903:119;;;8941:79;;:::i;:::-;8903:119;9089:1;9078:9;9074:17;9061:31;9119:18;9111:6;9108:30;9105:117;;;9141:79;;:::i;:::-;9105:117;9246:78;9316:7;9307:6;9296:9;9292:22;9246:78;:::i;:::-;9236:88;;9032:302;8802:539;;;;:::o;9347:77::-;9384:7;9413:5;9402:16;;9347:77;;;:::o;9430:118::-;9517:24;9535:5;9517:24;:::i;:::-;9512:3;9505:37;9430:118;;:::o;9554:222::-;9647:4;9685:2;9674:9;9670:18;9662:26;;9698:71;9766:1;9755:9;9751:17;9742:6;9698:71;:::i;:::-;9554:222;;;;:::o;9782:117::-;9891:1;9888;9881:12;9942:598;10045:8;10055:6;10105:3;10098:4;10090:6;10086:17;10082:27;10072:122;;10113:79;;:::i;:::-;10072:122;10226:6;10213:20;10203:30;;10256:18;10248:6;10245:30;10242:117;;;10278:79;;:::i;:::-;10242:117;10392:4;10384:6;10380:17;10368:29;;10446:3;10438:4;10430:6;10426:17;10416:8;10412:32;10409:41;10406:128;;;10453:79;;:::i;:::-;10406:128;9942:598;;;;;:::o;10546:619::-;10662:6;10670;10719:2;10707:9;10698:7;10694:23;10690:32;10687:119;;;10725:79;;:::i;:::-;10687:119;10873:1;10862:9;10858:17;10845:31;10903:18;10895:6;10892:30;10889:117;;;10925:79;;:::i;:::-;10889:117;11038:110;11140:7;11131:6;11120:9;11116:22;11038:110;:::i;:::-;11020:128;;;;10816:342;10546:619;;;;;:::o;11171:169::-;11255:11;11289:6;11284:3;11277:19;11329:4;11324:3;11320:14;11305:29;;11171:169;;;;:::o;11346:234::-;11486:34;11482:1;11474:6;11470:14;11463:58;11555:17;11550:2;11542:6;11538:15;11531:42;11346:234;:::o;11586:366::-;11728:3;11749:67;11813:2;11808:3;11749:67;:::i;:::-;11742:74;;11825:93;11914:3;11825:93;:::i;:::-;11943:2;11938:3;11934:12;11927:19;;11586:366;;;:::o;11958:419::-;12124:4;12162:2;12151:9;12147:18;12139:26;;12211:9;12205:4;12201:20;12197:1;12186:9;12182:17;12175:47;12239:131;12365:4;12239:131;:::i;:::-;12231:139;;11958:419;;;:::o;12383:231::-;12523:34;12519:1;12511:6;12507:14;12500:58;12592:14;12587:2;12579:6;12575:15;12568:39;12383:231;:::o;12620:366::-;12762:3;12783:67;12847:2;12842:3;12783:67;:::i;:::-;12776:74;;12859:93;12948:3;12859:93;:::i;:::-;12977:2;12972:3;12968:12;12961:19;;12620:366;;;:::o;12992:419::-;13158:4;13196:2;13185:9;13181:18;13173:26;;13245:9;13239:4;13235:20;13231:1;13220:9;13216:17;13209:47;13273:131;13399:4;13273:131;:::i;:::-;13265:139;;12992:419;;;:::o;13417:231::-;13557:34;13553:1;13545:6;13541:14;13534:58;13626:14;13621:2;13613:6;13609:15;13602:39;13417:231;:::o;13654:366::-;13796:3;13817:67;13881:2;13876:3;13817:67;:::i;:::-;13810:74;;13893:93;13982:3;13893:93;:::i;:::-;14011:2;14006:3;14002:12;13995:19;;13654:366;;;:::o;14026:419::-;14192:4;14230:2;14219:9;14215:18;14207:26;;14279:9;14273:4;14269:20;14265:1;14254:9;14250:17;14243:47;14307:131;14433:4;14307:131;:::i;:::-;14299:139;;14026:419;;;:::o;14451:233::-;14591:34;14587:1;14579:6;14575:14;14568:58;14660:16;14655:2;14647:6;14643:15;14636:41;14451:233;:::o;14690:366::-;14832:3;14853:67;14917:2;14912:3;14853:67;:::i;:::-;14846:74;;14929:93;15018:3;14929:93;:::i;:::-;15047:2;15042:3;15038:12;15031:19;;14690:366;;;:::o;15062:419::-;15228:4;15266:2;15255:9;15251:18;15243:26;;15315:9;15309:4;15305:20;15301:1;15290:9;15286:17;15279:47;15343:131;15469:4;15343:131;:::i;:::-;15335:139;;15062:419;;;:::o;15487:85::-;15532:7;15561:5;15550:16;;15487:85;;;:::o;15578:86::-;15613:7;15653:4;15646:5;15642:16;15631:27;;15578:86;;;:::o;15670:60::-;15698:3;15719:5;15712:12;;15670:60;;;:::o;15736:154::-;15792:9;15825:59;15841:42;15850:32;15876:5;15850:32;:::i;:::-;15841:42;:::i;:::-;15825:59;:::i;:::-;15812:72;;15736:154;;;:::o;15896:143::-;15989:43;16026:5;15989:43;:::i;:::-;15984:3;15977:56;15896:143;;:::o;16045:234::-;16144:4;16182:2;16171:9;16167:18;16159:26;;16195:77;16269:1;16258:9;16254:17;16245:6;16195:77;:::i;:::-;16045:234;;;;:::o;16285:243::-;16425:34;16421:1;16413:6;16409:14;16402:58;16494:26;16489:2;16481:6;16477:15;16470:51;16285:243;:::o;16534:366::-;16676:3;16697:67;16761:2;16756:3;16697:67;:::i;:::-;16690:74;;16773:93;16862:3;16773:93;:::i;:::-;16891:2;16886:3;16882:12;16875:19;;16534:366;;;:::o;16906:419::-;17072:4;17110:2;17099:9;17095:18;17087:26;;17159:9;17153:4;17149:20;17145:1;17134:9;17130:17;17123:47;17187:131;17313:4;17187:131;:::i;:::-;17179:139;;16906:419;;;:::o;17331:180::-;17379:77;17376:1;17369:88;17476:4;17473:1;17466:15;17500:4;17497:1;17490:15;17517:175;17657:27;17653:1;17645:6;17641:14;17634:51;17517:175;:::o;17698:366::-;17840:3;17861:67;17925:2;17920:3;17861:67;:::i;:::-;17854:74;;17937:93;18026:3;17937:93;:::i;:::-;18055:2;18050:3;18046:12;18039:19;;17698:366;;;:::o;18070:419::-;18236:4;18274:2;18263:9;18259:18;18251:26;;18323:9;18317:4;18313:20;18309:1;18298:9;18294:17;18287:47;18351:131;18477:4;18351:131;:::i;:::-;18343:139;;18070:419;;;:::o;18495:118::-;18582:24;18600:5;18582:24;:::i;:::-;18577:3;18570:37;18495:118;;:::o;18619:222::-;18712:4;18750:2;18739:9;18735:18;18727:26;;18763:71;18831:1;18820:9;18816:17;18807:6;18763:71;:::i;:::-;18619:222;;;;:::o;18847:122::-;18920:24;18938:5;18920:24;:::i;:::-;18913:5;18910:35;18900:63;;18959:1;18956;18949:12;18900:63;18847:122;:::o;18975:143::-;19032:5;19063:6;19057:13;19048:22;;19079:33;19106:5;19079:33;:::i;:::-;18975:143;;;;:::o;19124:351::-;19194:6;19243:2;19231:9;19222:7;19218:23;19214:32;19211:119;;;19249:79;;:::i;:::-;19211:119;19369:1;19394:64;19450:7;19441:6;19430:9;19426:22;19394:64;:::i;:::-;19384:74;;19340:128;19124:351;;;;:::o;19481:220::-;19621:34;19617:1;19609:6;19605:14;19598:58;19690:3;19685:2;19677:6;19673:15;19666:28;19481:220;:::o;19707:366::-;19849:3;19870:67;19934:2;19929:3;19870:67;:::i;:::-;19863:74;;19946:93;20035:3;19946:93;:::i;:::-;20064:2;20059:3;20055:12;20048:19;;19707:366;;;:::o;20079:419::-;20245:4;20283:2;20272:9;20268:18;20260:26;;20332:9;20326:4;20322:20;20318:1;20307:9;20303:17;20296:47;20360:131;20486:4;20360:131;:::i;:::-;20352:139;;20079:419;;;:::o;20504:332::-;20625:4;20663:2;20652:9;20648:18;20640:26;;20676:71;20744:1;20733:9;20729:17;20720:6;20676:71;:::i;:::-;20757:72;20825:2;20814:9;20810:18;20801:6;20757:72;:::i;:::-;20504:332;;;;;:::o;20842:116::-;20912:21;20927:5;20912:21;:::i;:::-;20905:5;20902:32;20892:60;;20948:1;20945;20938:12;20892:60;20842:116;:::o;20964:137::-;21018:5;21049:6;21043:13;21034:22;;21065:30;21089:5;21065:30;:::i;:::-;20964:137;;;;:::o;21107:345::-;21174:6;21223:2;21211:9;21202:7;21198:23;21194:32;21191:119;;;21229:79;;:::i;:::-;21191:119;21349:1;21374:61;21427:7;21418:6;21407:9;21403:22;21374:61;:::i;:::-;21364:71;;21320:125;21107:345;;;;:::o;21458:180::-;21506:77;21503:1;21496:88;21603:4;21600:1;21593:15;21627:4;21624:1;21617:15;21644:191;21684:3;21703:20;21721:1;21703:20;:::i;:::-;21698:25;;21737:20;21755:1;21737:20;:::i;:::-;21732:25;;21780:1;21777;21773:9;21766:16;;21801:3;21798:1;21795:10;21792:36;;;21808:18;;:::i;:::-;21792:36;21644:191;;;;:::o;21841:143::-;21898:5;21929:6;21923:13;21914:22;;21945:33;21972:5;21945:33;:::i;:::-;21841:143;;;;:::o;21990:351::-;22060:6;22109:2;22097:9;22088:7;22084:23;22080:32;22077:119;;;22115:79;;:::i;:::-;22077:119;22235:1;22260:64;22316:7;22307:6;22296:9;22292:22;22260:64;:::i;:::-;22250:74;;22206:128;21990:351;;;;:::o;22347:233::-;22487:34;22483:1;22475:6;22471:14;22464:58;22556:16;22551:2;22543:6;22539:15;22532:41;22347:233;:::o;22586:366::-;22728:3;22749:67;22813:2;22808:3;22749:67;:::i;:::-;22742:74;;22825:93;22914:3;22825:93;:::i;:::-;22943:2;22938:3;22934:12;22927:19;;22586:366;;;:::o;22958:419::-;23124:4;23162:2;23151:9;23147:18;23139:26;;23211:9;23205:4;23201:20;23197:1;23186:9;23182:17;23175:47;23239:131;23365:4;23239:131;:::i;:::-;23231:139;;22958:419;;;:::o;23383:228::-;23523:34;23519:1;23511:6;23507:14;23500:58;23592:11;23587:2;23579:6;23575:15;23568:36;23383:228;:::o;23617:366::-;23759:3;23780:67;23844:2;23839:3;23780:67;:::i;:::-;23773:74;;23856:93;23945:3;23856:93;:::i;:::-;23974:2;23969:3;23965:12;23958:19;;23617:366;;;:::o;23989:419::-;24155:4;24193:2;24182:9;24178:18;24170:26;;24242:9;24236:4;24232:20;24228:1;24217:9;24213:17;24206:47;24270:131;24396:4;24270:131;:::i;:::-;24262:139;;23989:419;;;:::o;24414:148::-;24516:11;24553:3;24538:18;;24414:148;;;;:::o;24568:173::-;24708:25;24704:1;24696:6;24692:14;24685:49;24568:173;:::o;24747:402::-;24907:3;24928:85;25010:2;25005:3;24928:85;:::i;:::-;24921:92;;25022:93;25111:3;25022:93;:::i;:::-;25140:2;25135:3;25131:12;25124:19;;24747:402;;;:::o;25155:99::-;25207:6;25241:5;25235:12;25225:22;;25155:99;;;:::o;25260:139::-;25349:6;25344:3;25339;25333:23;25390:1;25381:6;25376:3;25372:16;25365:27;25260:139;;;:::o;25405:390::-;25511:3;25539:39;25572:5;25539:39;:::i;:::-;25594:89;25676:6;25671:3;25594:89;:::i;:::-;25587:96;;25692:65;25750:6;25745:3;25738:4;25731:5;25727:16;25692:65;:::i;:::-;25782:6;25777:3;25773:16;25766:23;;25515:280;25405:390;;;;:::o;25801:167::-;25941:19;25937:1;25929:6;25925:14;25918:43;25801:167;:::o;25974:402::-;26134:3;26155:85;26237:2;26232:3;26155:85;:::i;:::-;26148:92;;26249:93;26338:3;26249:93;:::i;:::-;26367:2;26362:3;26358:12;26351:19;;25974:402;;;:::o;26382:967::-;26764:3;26786:148;26930:3;26786:148;:::i;:::-;26779:155;;26951:95;27042:3;27033:6;26951:95;:::i;:::-;26944:102;;27063:148;27207:3;27063:148;:::i;:::-;27056:155;;27228:95;27319:3;27310:6;27228:95;:::i;:::-;27221:102;;27340:3;27333:10;;26382:967;;;;;:::o;27355:377::-;27443:3;27471:39;27504:5;27471:39;:::i;:::-;27526:71;27590:6;27585:3;27526:71;:::i;:::-;27519:78;;27606:65;27664:6;27659:3;27652:4;27645:5;27641:16;27606:65;:::i;:::-;27696:29;27718:6;27696:29;:::i;:::-;27691:3;27687:39;27680:46;;27447:285;27355:377;;;;:::o;27738:313::-;27851:4;27889:2;27878:9;27874:18;27866:26;;27938:9;27932:4;27928:20;27924:1;27913:9;27909:17;27902:47;27966:78;28039:4;28030:6;27966:78;:::i;:::-;27958:86;;27738:313;;;;:::o;28057:232::-;28197:34;28193:1;28185:6;28181:14;28174:58;28266:15;28261:2;28253:6;28249:15;28242:40;28057:232;:::o;28295:366::-;28437:3;28458:67;28522:2;28517:3;28458:67;:::i;:::-;28451:74;;28534:93;28623:3;28534:93;:::i;:::-;28652:2;28647:3;28643:12;28636:19;;28295:366;;;:::o;28667:419::-;28833:4;28871:2;28860:9;28856:18;28848:26;;28920:9;28914:4;28910:20;28906:1;28895:9;28891:17;28884:47;28948:131;29074:4;28948:131;:::i;:::-;28940:139;;28667:419;;;:::o;29092:410::-;29132:7;29155:20;29173:1;29155:20;:::i;:::-;29150:25;;29189:20;29207:1;29189:20;:::i;:::-;29184:25;;29244:1;29241;29237:9;29266:30;29284:11;29266:30;:::i;:::-;29255:41;;29445:1;29436:7;29432:15;29429:1;29426:22;29406:1;29399:9;29379:83;29356:139;;29475:18;;:::i;:::-;29356:139;29140:362;29092:410;;;;:::o;29508:171::-;29547:3;29570:24;29588:5;29570:24;:::i;:::-;29561:33;;29616:4;29609:5;29606:15;29603:41;;29624:18;;:::i;:::-;29603:41;29671:1;29664:5;29660:13;29653:20;;29508:171;;;:::o;29685:182::-;29825:34;29821:1;29813:6;29809:14;29802:58;29685:182;:::o;29873:366::-;30015:3;30036:67;30100:2;30095:3;30036:67;:::i;:::-;30029:74;;30112:93;30201:3;30112:93;:::i;:::-;30230:2;30225:3;30221:12;30214:19;;29873:366;;;:::o;30245:419::-;30411:4;30449:2;30438:9;30434:18;30426:26;;30498:9;30492:4;30488:20;30484:1;30473:9;30469:17;30462:47;30526:131;30652:4;30526:131;:::i;:::-;30518:139;;30245:419;;;:::o;30670:98::-;30721:6;30755:5;30749:12;30739:22;;30670:98;;;:::o;30774:147::-;30875:11;30912:3;30897:18;;30774:147;;;;:::o;30927:386::-;31031:3;31059:38;31091:5;31059:38;:::i;:::-;31113:88;31194:6;31189:3;31113:88;:::i;:::-;31106:95;;31210:65;31268:6;31263:3;31256:4;31249:5;31245:16;31210:65;:::i;:::-;31300:6;31295:3;31291:16;31284:23;;31035:278;30927:386;;;;:::o;31319:271::-;31449:3;31471:93;31560:3;31551:6;31471:93;:::i;:::-;31464:100;;31581:3;31574:10;;31319:271;;;;:::o;31596:179::-;31736:31;31732:1;31724:6;31720:14;31713:55;31596:179;:::o;31781:366::-;31923:3;31944:67;32008:2;32003:3;31944:67;:::i;:::-;31937:74;;32020:93;32109:3;32020:93;:::i;:::-;32138:2;32133:3;32129:12;32122:19;;31781:366;;;:::o;32153:419::-;32319:4;32357:2;32346:9;32342:18;32334:26;;32406:9;32400:4;32396:20;32392:1;32381:9;32377:17;32370:47;32434:131;32560:4;32434:131;:::i;:::-;32426:139;;32153:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2282000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "419",
								"claimReward()": "infinite",
								"claimRewardAdminList(address[])": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"initialize(address,address)": "infinite",
								"playerBalance()": "2564",
								"playerBalanceAdmin(address)": "infinite",
								"playersReward((address,uint256)[])": "infinite",
								"proxiableUUID()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"claimRewardAdmin(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1332,
									"end": 1336,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "973"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 2657,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1c4874ad6f32b1b31904c46d059eda3c3faa2354e79c921b30cac71597a0c9364736f6c634300081a0033",
									".code": [
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "542E37CC"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "B88A802F"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "B88A802F"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "BB6CEB4F"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "D547741F"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "F396D899"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "tag",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "542E37CC"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "651F066A"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "91D14854"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "A217FDDF"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "tag",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "3659CFE6"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "3659CFE6"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "485CC955"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "4F1EF286"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "52D1902D"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "1FFC9A7"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "248A9CA3"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "2F2FF15D"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "36568ABE"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 2657,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4834,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4834,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4834,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 754,
											"end": 949,
											"name": "tag",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "tag",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 754,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "tag",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 754,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "tag",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "tag",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "tag",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 2049,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "tag",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 2049,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "tag",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "tag",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "68"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 2268,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "tag",
											"source": 19,
											"value": "68"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 2268,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "tag",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2450,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2450,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "tag",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "tag",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 1200,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "tag",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "tag",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "tag",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "86"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 2377,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "tag",
											"source": 19,
											"value": "86"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 2377,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "tag",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "88"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 2377,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "tag",
											"source": 19,
											"value": "88"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5684,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5684,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "tag",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 954,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "tag",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 954,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "tag",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3195,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3223,
											"end": 3234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3199,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3235,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3199,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5342,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5383,
											"end": 5387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5372,
											"end": 5397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6474,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6474,
											"end": 6486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6474,
											"end": 6486,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6474,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6455,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6549,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3486,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3468,
											"end": 3504,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3536,
											"end": 3553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3555,
											"end": 3567,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3569,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3514,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 754,
											"end": 949,
											"name": "tag",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 754,
											"end": 949,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3388,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3432,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3325,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 859,
											"end": 865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 859,
											"end": 865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 859,
											"end": 894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 904,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 2495,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 915,
											"end": 933,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 935,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 904,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "148"
										},
										{
											"begin": 904,
											"end": 942,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 904,
											"end": 942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 904,
											"end": 942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 754,
											"end": 949,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 754,
											"end": 949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4034,
											"end": 4051,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4016,
											"end": 4052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4084,
											"end": 4101,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4107,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4062,
											"end": 4114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2308,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3110,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3130,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "tag",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2144,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2126,
											"end": 2144,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2179,
											"end": 2189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2179,
											"end": 2196,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2176,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2176,
											"end": 2196,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 2232,
											"end": 2242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2243,
											"end": 2244,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 2232,
											"end": 2245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 2215,
											"end": 2246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 2215,
											"end": 2246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2198,
											"end": 2201,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2198,
											"end": 2201,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2198,
											"end": 2201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 2198,
											"end": 2201,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2198,
											"end": 2201,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2198,
											"end": 2201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2198,
											"end": 2201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2049,
											"end": 2263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "tag",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 2332,
											"end": 2365,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2332,
											"end": 2365,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2268,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "tag",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 1200,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1264,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1275,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1276,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1250,
											"end": 1280,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 1242,
											"end": 1311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "tag",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "tag",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 1242,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 1384,
											"end": 1388,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "183"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 1359,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "tag",
											"source": 19,
											"value": "183"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "tag",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 1359,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1343,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1354,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1355,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1390,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1329,
											"end": 1390,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 1321,
											"end": 1428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "tag",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "tag",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 1321,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1438,
											"end": 1452,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1469,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1480,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1438,
											"end": 1481,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1438,
											"end": 1481,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1520,
											"end": 1521,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1505,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1516,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1546,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1546,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1546,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "tag",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "tag",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "tag",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "PUSH",
											"source": 19,
											"value": "BA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E"
										},
										{
											"begin": 1593,
											"end": 1603,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 1581,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "tag",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "LOG1",
											"source": 19
										},
										{
											"begin": 1232,
											"end": 1619,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1200,
											"end": 1619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "tag",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2473,
											"end": 2477,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2517,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 2488,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2488,
											"end": 2518,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2377,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5768,
											"end": 5786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5810,
											"end": 5814,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5798,
											"end": 5824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5798,
											"end": 5824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "tag",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1078,
											"end": 1088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1078,
											"end": 1088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1078,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1078,
											"end": 1095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1095,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1168,
											"end": 1169,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "214"
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 1157,
											"end": 1170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "214"
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1157,
											"end": 1178,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1142,
											"end": 1143,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "216"
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 1131,
											"end": 1144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "216"
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 1131,
											"end": 1151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 1131,
											"end": 1151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 1116,
											"end": 1178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1097,
											"end": 1100,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1097,
											"end": 1100,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1097,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1097,
											"end": 1100,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1097,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1097,
											"end": 1100,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1097,
											"end": 1100,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1058,
											"end": 1189,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 954,
											"end": 1195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1179,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3768,
											"end": 3871,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3768,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3851,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3834,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3864,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3834,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 8008,
											"end": 8012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8000,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8000,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8074,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8045,
											"end": 8049,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8120,
											"end": 8132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8111,
											"end": 8118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 850,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8404,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8474,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8449,
											"end": 8453,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8525,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8525,
											"end": 8537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8514,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1608,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1457,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1312,
											"end": 1378,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1574,
											"end": 1594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1594,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1536,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2655,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 2530,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2530,
											"end": 2655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2530,
											"end": 2655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 971,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3274,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3288,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3236,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3330,
											"end": 3347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3311,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "52D1902D"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3383,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3610,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1378,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3504,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3524,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3524,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3488,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3447,
											"end": 3585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3712,
											"end": 3729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 3694,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3747,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3694,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 3764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7267,
											"end": 7377,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7267,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7345,
											"end": 7370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7370,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7345,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7267,
											"end": 7377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7267,
											"end": 7377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7267,
											"end": 7377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 2044,
											"name": "tag",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 1624,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1719,
											"end": 1720,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1707,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1693,
											"end": 1720,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "266"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 1685,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "tag",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "tag",
											"source": 19,
											"value": "266"
										},
										{
											"begin": 1685,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 1821,
											"end": 1825,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 1796,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "tag",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "270"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "tag",
											"source": 19,
											"value": "270"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "271"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 1796,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "tag",
											"source": 19,
											"value": "271"
										},
										{
											"begin": 1796,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1827,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1827,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 1761,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "tag",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "tag",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 1761,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1889,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1906,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1914,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1915,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "PUSH",
											"source": 19,
											"value": "FC"
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1947,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1952,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1952,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1952,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1952,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1977,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1977,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1977,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 1962,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "tag",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "276"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "tag",
											"source": 19,
											"value": "276"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 1962,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "tag",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "BA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E"
										},
										{
											"begin": 2021,
											"end": 2028,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 2009,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "tag",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "LOG1",
											"source": 19
										},
										{
											"begin": 1675,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1624,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1624,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4240,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4423,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4572,
											"end": 4576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4577,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4533,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4330,
											"end": 4604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 4278,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1980,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 1699,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1780,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1828,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 1780,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 1772,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1312,
											"end": 1378,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1926,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1946,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1888,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1888,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 2480,
											"end": 2509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2538,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2607,
											"end": 2624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 2567,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 2591,
											"end": 2595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 2563,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2556,
											"end": 2615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2556,
											"end": 2615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2016,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 2016,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 2006,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 14,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 2041,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 14,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 2066,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2108,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 2108,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2170,
											"name": "PUSH",
											"source": 14,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 2162,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 2150,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 2131,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2241,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 2228,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2152,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6768,
											"end": 6780,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH data",
											"source": 11,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 6799,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6792,
											"end": 6876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6792,
											"end": 6876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7235,
											"end": 7247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7295,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7276,
											"end": 7295,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 7276,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7362,
											"end": 7372,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7386,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 7318,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7917,
											"end": 7939,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 8132,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 8124,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8280,
											"end": 8292,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 8260,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 9012,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9262,
											"end": 9272,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9254,
											"end": 9273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9291,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 9335,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "454"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 20,
											"value": "454"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "473"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 20,
											"value": "473"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "476"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 20,
											"value": "476"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "481"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 20,
											"value": "481"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "483"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 20,
											"value": "483"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "485"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 20,
											"value": "485"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "tag",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3627,
											"end": 3659,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 3662,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "tag",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "tag",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "490"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 20,
											"value": "490"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3753,
											"end": 3870,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "tag",
											"source": 20,
											"value": "52"
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3987,
											"end": 3994,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "492"
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "493"
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 4014,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "tag",
											"source": 20,
											"value": "493"
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "tag",
											"source": 20,
											"value": "492"
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 4204,
											"end": 4211,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4180,
											"end": 4202,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 4159,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "tag",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4149,
											"end": 4212,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4149,
											"end": 4212,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4105,
											"end": 4222,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "495"
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4312,
											"end": 4321,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4308,
											"end": 4330,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 4287,
											"end": 4340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "tag",
											"source": 20,
											"value": "495"
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4232,
											"end": 4350,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4363,
											"end": 4480,
											"name": "tag",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 4363,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4462,
											"end": 4474,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4486,
											"end": 4603,
											"name": "tag",
											"source": 20,
											"value": "376"
										},
										{
											"begin": 4486,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4593,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4585,
											"end": 4597,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "tag",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4650,
											"end": 4656,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4703,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4685,
											"end": 4690,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4681,
											"end": 4695,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4677,
											"end": 4705,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4667,
											"end": 4705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4667,
											"end": 4705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4717,
											"end": 4897,
											"name": "tag",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 4717,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4765,
											"end": 4842,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4762,
											"end": 4763,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4843,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4862,
											"end": 4866,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4852,
											"end": 4867,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4886,
											"end": 4890,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4891,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "tag",
											"source": 20,
											"value": "378"
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "501"
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 4986,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "tag",
											"source": 20,
											"value": "501"
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4974,
											"end": 5014,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5104,
											"end": 5114,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5101,
											"end": 5123,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 5062,
											"end": 5124,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "502"
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 5127,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "tag",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "tag",
											"source": 20,
											"value": "502"
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5167,
											"end": 5177,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5163,
											"end": 5165,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5178,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4946,
											"end": 5184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "tag",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "505"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 5251,
											"end": 5271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "tag",
											"source": 20,
											"value": "505"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5241,
											"end": 5271,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5241,
											"end": 5271,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5300,
											"end": 5306,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "378"
										},
										{
											"begin": 5280,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "tag",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "tag",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5386,
											"end": 5390,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5465,
											"end": 5495,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "509"
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 5498,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "tag",
											"source": 20,
											"value": "509"
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "tag",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "510"
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 5536,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "tag",
											"source": 20,
											"value": "510"
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5528,
											"end": 5565,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5528,
											"end": 5565,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5620,
											"end": 5624,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5610,
											"end": 5625,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "tag",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5736,
											"end": 5742,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5731,
											"end": 5734,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5726,
											"end": 5729,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5713,
											"end": 5743,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 5777,
											"end": 5778,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5763,
											"end": 5766,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5759,
											"end": 5775,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5752,
											"end": 5779,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "tag",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "513"
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "514"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 5910,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "tag",
											"source": 20,
											"value": "514"
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 5894,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "tag",
											"source": 20,
											"value": "513"
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5885,
											"end": 5959,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5885,
											"end": 5959,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5975,
											"end": 5980,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5968,
											"end": 5989,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6020,
											"end": 6024,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6044,
											"end": 6047,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6037,
											"end": 6062,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "376"
										},
										{
											"begin": 6065,
											"end": 6144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "tag",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "tag",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "517"
										},
										{
											"begin": 6202,
											"end": 6208,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6197,
											"end": 6200,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6192,
											"end": 6195,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 6155,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "tag",
											"source": 20,
											"value": "517"
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5875,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "tag",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6289,
											"end": 6294,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6323,
											"end": 6329,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6315,
											"end": 6342,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "519"
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 6346,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "tag",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "tag",
											"source": 20,
											"value": "519"
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6450,
											"end": 6470,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "521"
										},
										{
											"begin": 6562,
											"end": 6565,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6554,
											"end": 6560,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 6488,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "tag",
											"source": 20,
											"value": "521"
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6479,
											"end": 6566,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6479,
											"end": 6566,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6295,
											"end": 6572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "tag",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6655,
											"end": 6661,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6691,
											"end": 6698,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6687,
											"end": 6710,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6683,
											"end": 6715,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "524"
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 6718,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "tag",
											"source": 20,
											"value": "524"
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "tag",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6838,
											"end": 6839,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "525"
										},
										{
											"begin": 6908,
											"end": 6915,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6899,
											"end": 6905,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6888,
											"end": 6897,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6884,
											"end": 6906,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 6863,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "tag",
											"source": 20,
											"value": "525"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6853,
											"end": 6916,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6853,
											"end": 6916,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6809,
											"end": 6926,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6993,
											"end": 6995,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6982,
											"end": 6991,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6978,
											"end": 6996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6965,
											"end": 6997,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7022,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7013,
											"end": 7043,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "527"
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 7046,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "tag",
											"source": 20,
											"value": "527"
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "tag",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 7151,
											"end": 7213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "tag",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7213,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7213,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6936,
											"end": 7223,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7547,
											"name": "tag",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 7236,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7313,
											"end": 7317,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7395,
											"end": 7401,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7392,
											"end": 7422,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 7389,
											"end": 7445,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7389,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "530"
										},
										{
											"begin": 7389,
											"end": 7445,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "531"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 7425,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "tag",
											"source": 20,
											"value": "531"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7389,
											"end": 7445,
											"name": "tag",
											"source": 20,
											"value": "530"
										},
										{
											"begin": 7389,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7475,
											"end": 7479,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7473,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7463,
											"end": 7480,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 7455,
											"end": 7480,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7455,
											"end": 7480,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7535,
											"end": 7539,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7533,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7525,
											"end": 7540,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7517,
											"end": 7540,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7517,
											"end": 7540,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7547,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7547,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7547,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7553,
											"end": 7670,
											"name": "tag",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 7553,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7662,
											"end": 7663,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7660,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7652,
											"end": 7664,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7693,
											"end": 8403,
											"name": "tag",
											"source": 20,
											"value": "386"
										},
										{
											"begin": 7693,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7789,
											"end": 7794,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "534"
										},
										{
											"begin": 7830,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "535"
										},
										{
											"begin": 7887,
											"end": 7893,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7830,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 7830,
											"end": 7894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7830,
											"end": 7894,
											"name": "tag",
											"source": 20,
											"value": "535"
										},
										{
											"begin": 7830,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7814,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 7814,
											"end": 7895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7814,
											"end": 7895,
											"name": "tag",
											"source": 20,
											"value": "534"
										},
										{
											"begin": 7814,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7805,
											"end": 7895,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7805,
											"end": 7895,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7915,
											"end": 7920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7944,
											"end": 7950,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7937,
											"end": 7942,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7930,
											"end": 7951,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7978,
											"end": 7982,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7976,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7967,
											"end": 7983,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7960,
											"end": 7983,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7960,
											"end": 7983,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8031,
											"end": 8035,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8019,
											"end": 8036,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 8011,
											"end": 8017,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8007,
											"end": 8037,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8060,
											"end": 8063,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 8052,
											"end": 8058,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 8046,
											"end": 8168,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8046,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "536"
										},
										{
											"begin": 8046,
											"end": 8168,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8079,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "537"
										},
										{
											"begin": 8079,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 8079,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8079,
											"end": 8158,
											"name": "tag",
											"source": 20,
											"value": "537"
										},
										{
											"begin": 8079,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8046,
											"end": 8168,
											"name": "tag",
											"source": 20,
											"value": "536"
										},
										{
											"begin": 8046,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8194,
											"end": 8200,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "tag",
											"source": 20,
											"value": "538"
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8206,
											"end": 8209,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8203,
											"end": 8218,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "540"
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8315,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "541"
										},
										{
											"begin": 8348,
											"end": 8351,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 8336,
											"end": 8346,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8315,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 8315,
											"end": 8352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8315,
											"end": 8352,
											"name": "tag",
											"source": 20,
											"value": "541"
										},
										{
											"begin": 8315,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8310,
											"end": 8313,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8303,
											"end": 8353,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8377,
											"end": 8380,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8373,
											"end": 8387,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8366,
											"end": 8387,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 8366,
											"end": 8387,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8253,
											"end": 8397,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8235,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8228,
											"end": 8242,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8221,
											"end": 8242,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8221,
											"end": 8242,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "538"
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "tag",
											"source": 20,
											"value": "540"
										},
										{
											"begin": 8177,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8181,
											"end": 8202,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7795,
											"end": 8403,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7795,
											"end": 8403,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7693,
											"end": 8403,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7693,
											"end": 8403,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7693,
											"end": 8403,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7693,
											"end": 8403,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7693,
											"end": 8403,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7693,
											"end": 8403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8426,
											"end": 8796,
											"name": "tag",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 8426,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8502,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8549,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8527,
											"end": 8544,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8523,
											"end": 8550,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 8513,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "543"
										},
										{
											"begin": 8513,
											"end": 8635,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "544"
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 8554,
											"end": 8633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "tag",
											"source": 20,
											"value": "544"
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8513,
											"end": 8635,
											"name": "tag",
											"source": 20,
											"value": "543"
										},
										{
											"begin": 8513,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8658,
											"end": 8678,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 8696,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 8786,
											"end": 8789,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8778,
											"end": 8784,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8771,
											"end": 8775,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8763,
											"end": 8769,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8759,
											"end": 8776,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8696,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "386"
										},
										{
											"begin": 8696,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8696,
											"end": 8790,
											"name": "tag",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 8696,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8687,
											"end": 8790,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8687,
											"end": 8790,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8503,
											"end": 8796,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8426,
											"end": 8796,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8426,
											"end": 8796,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8426,
											"end": 8796,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8426,
											"end": 8796,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8426,
											"end": 8796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8802,
											"end": 9341,
											"name": "tag",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 8802,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8886,
											"end": 8892,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8935,
											"end": 8937,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8914,
											"end": 8921,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8910,
											"end": 8933,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "547"
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "548"
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 8941,
											"end": 9020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "tag",
											"source": 20,
											"value": "548"
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "tag",
											"source": 20,
											"value": "547"
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9089,
											"end": 9090,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9074,
											"end": 9091,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9061,
											"end": 9092,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9111,
											"end": 9117,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9108,
											"end": 9138,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 9105,
											"end": 9222,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9105,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "549"
										},
										{
											"begin": 9105,
											"end": 9222,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "550"
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 9141,
											"end": 9220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "tag",
											"source": 20,
											"value": "550"
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9105,
											"end": 9222,
											"name": "tag",
											"source": 20,
											"value": "549"
										},
										{
											"begin": 9105,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9246,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "551"
										},
										{
											"begin": 9316,
											"end": 9323,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9296,
											"end": 9305,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9292,
											"end": 9314,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9246,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 9246,
											"end": 9324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9246,
											"end": 9324,
											"name": "tag",
											"source": 20,
											"value": "551"
										},
										{
											"begin": 9246,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9236,
											"end": 9324,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9236,
											"end": 9324,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9032,
											"end": 9334,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8802,
											"end": 9341,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8802,
											"end": 9341,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8802,
											"end": 9341,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8802,
											"end": 9341,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8802,
											"end": 9341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9347,
											"end": 9424,
											"name": "tag",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 9347,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9384,
											"end": 9391,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9418,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9402,
											"end": 9418,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9402,
											"end": 9418,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9347,
											"end": 9424,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9347,
											"end": 9424,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9347,
											"end": 9424,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9347,
											"end": 9424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9430,
											"end": 9548,
											"name": "tag",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 9430,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9517,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 9535,
											"end": 9540,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9517,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 9517,
											"end": 9541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9517,
											"end": 9541,
											"name": "tag",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 9517,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9512,
											"end": 9515,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9505,
											"end": 9542,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9430,
											"end": 9548,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9430,
											"end": 9548,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9430,
											"end": 9548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9554,
											"end": 9776,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 9554,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9647,
											"end": 9651,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9674,
											"end": 9683,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9670,
											"end": 9688,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9662,
											"end": 9688,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9662,
											"end": 9688,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9698,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 9766,
											"end": 9767,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9755,
											"end": 9764,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9698,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 9698,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9698,
											"end": 9769,
											"name": "tag",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 9698,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9554,
											"end": 9776,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9554,
											"end": 9776,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9554,
											"end": 9776,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9554,
											"end": 9776,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9554,
											"end": 9776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9782,
											"end": 9899,
											"name": "tag",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 9782,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9881,
											"end": 9893,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9942,
											"end": 10540,
											"name": "tag",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 9942,
											"end": 10540,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10045,
											"end": 10053,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10055,
											"end": 10061,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10105,
											"end": 10108,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10098,
											"end": 10102,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 10090,
											"end": 10096,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10086,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10082,
											"end": 10109,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 10072,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 10072,
											"end": 10194,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10113,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 10113,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 10113,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10113,
											"end": 10192,
											"name": "tag",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 10113,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10072,
											"end": 10194,
											"name": "tag",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 10072,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10226,
											"end": 10232,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 10203,
											"end": 10233,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10203,
											"end": 10233,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10248,
											"end": 10254,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10245,
											"end": 10275,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 10242,
											"end": 10359,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10242,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "561"
										},
										{
											"begin": 10242,
											"end": 10359,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10278,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "562"
										},
										{
											"begin": 10278,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 10278,
											"end": 10357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10278,
											"end": 10357,
											"name": "tag",
											"source": 20,
											"value": "562"
										},
										{
											"begin": 10278,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10242,
											"end": 10359,
											"name": "tag",
											"source": 20,
											"value": "561"
										},
										{
											"begin": 10242,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10392,
											"end": 10396,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10384,
											"end": 10390,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10380,
											"end": 10397,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10368,
											"end": 10397,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10368,
											"end": 10397,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10446,
											"end": 10449,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10438,
											"end": 10442,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10430,
											"end": 10436,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10426,
											"end": 10443,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 10416,
											"end": 10424,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10412,
											"end": 10444,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10409,
											"end": 10450,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 10406,
											"end": 10534,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10406,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "563"
										},
										{
											"begin": 10406,
											"end": 10534,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10453,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "564"
										},
										{
											"begin": 10453,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 10453,
											"end": 10532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10453,
											"end": 10532,
											"name": "tag",
											"source": 20,
											"value": "564"
										},
										{
											"begin": 10453,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10406,
											"end": 10534,
											"name": "tag",
											"source": 20,
											"value": "563"
										},
										{
											"begin": 10406,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9942,
											"end": 10540,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9942,
											"end": 10540,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9942,
											"end": 10540,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9942,
											"end": 10540,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9942,
											"end": 10540,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9942,
											"end": 10540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10546,
											"end": 11165,
											"name": "tag",
											"source": 20,
											"value": "96"
										},
										{
											"begin": 10546,
											"end": 11165,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10662,
											"end": 10668,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10670,
											"end": 10676,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10719,
											"end": 10721,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10716,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10698,
											"end": 10705,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10694,
											"end": 10717,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10690,
											"end": 10722,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 10687,
											"end": 10806,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10687,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 10687,
											"end": 10806,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10725,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "567"
										},
										{
											"begin": 10725,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 10725,
											"end": 10804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10725,
											"end": 10804,
											"name": "tag",
											"source": 20,
											"value": "567"
										},
										{
											"begin": 10725,
											"end": 10804,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10687,
											"end": 10806,
											"name": "tag",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 10687,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10871,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10858,
											"end": 10875,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10845,
											"end": 10876,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10895,
											"end": 10901,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10892,
											"end": 10922,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 10889,
											"end": 11006,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10889,
											"end": 11006,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "568"
										},
										{
											"begin": 10889,
											"end": 11006,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10925,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 10925,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 10925,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10925,
											"end": 11004,
											"name": "tag",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 10925,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10889,
											"end": 11006,
											"name": "tag",
											"source": 20,
											"value": "568"
										},
										{
											"begin": 10889,
											"end": 11006,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11038,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "570"
										},
										{
											"begin": 11140,
											"end": 11147,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11131,
											"end": 11137,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11120,
											"end": 11129,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 11116,
											"end": 11138,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11038,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 11038,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11038,
											"end": 11148,
											"name": "tag",
											"source": 20,
											"value": "570"
										},
										{
											"begin": 11038,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11020,
											"end": 11148,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11020,
											"end": 11148,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11020,
											"end": 11148,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11020,
											"end": 11148,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10816,
											"end": 11158,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10546,
											"end": 11165,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10546,
											"end": 11165,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10546,
											"end": 11165,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10546,
											"end": 11165,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10546,
											"end": 11165,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10546,
											"end": 11165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11171,
											"end": 11340,
											"name": "tag",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 11171,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11255,
											"end": 11266,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11284,
											"end": 11287,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11277,
											"end": 11296,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11329,
											"end": 11333,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11327,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11320,
											"end": 11334,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11305,
											"end": 11334,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11305,
											"end": 11334,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11171,
											"end": 11340,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11171,
											"end": 11340,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11171,
											"end": 11340,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11171,
											"end": 11340,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11171,
											"end": 11340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11346,
											"end": 11580,
											"name": "tag",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 11346,
											"end": 11580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11486,
											"end": 11520,
											"name": "PUSH",
											"source": 20,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11482,
											"end": 11483,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11480,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11470,
											"end": 11484,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11463,
											"end": 11521,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11555,
											"end": 11572,
											"name": "PUSH",
											"source": 20,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 11550,
											"end": 11552,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11542,
											"end": 11548,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11538,
											"end": 11553,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11531,
											"end": 11573,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11346,
											"end": 11580,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11346,
											"end": 11580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11586,
											"end": 11952,
											"name": "tag",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 11586,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11728,
											"end": 11731,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11749,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "574"
										},
										{
											"begin": 11813,
											"end": 11815,
											"name": "PUSH",
											"source": 20,
											"value": "2F"
										},
										{
											"begin": 11808,
											"end": 11811,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11749,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 11749,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11749,
											"end": 11816,
											"name": "tag",
											"source": 20,
											"value": "574"
										},
										{
											"begin": 11749,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11742,
											"end": 11816,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11742,
											"end": 11816,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11825,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "575"
										},
										{
											"begin": 11914,
											"end": 11917,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11825,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 11825,
											"end": 11918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11825,
											"end": 11918,
											"name": "tag",
											"source": 20,
											"value": "575"
										},
										{
											"begin": 11825,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11943,
											"end": 11945,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11934,
											"end": 11946,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11927,
											"end": 11946,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11927,
											"end": 11946,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11586,
											"end": 11952,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11586,
											"end": 11952,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11586,
											"end": 11952,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11586,
											"end": 11952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "tag",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12124,
											"end": 12128,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12162,
											"end": 12164,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12151,
											"end": 12160,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12147,
											"end": 12165,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12139,
											"end": 12165,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12139,
											"end": 12165,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12205,
											"end": 12209,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12201,
											"end": 12221,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12195,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12175,
											"end": 12222,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 12365,
											"end": 12369,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 12239,
											"end": 12370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "tag",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12231,
											"end": 12370,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12231,
											"end": 12370,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11958,
											"end": 12377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12383,
											"end": 12614,
											"name": "tag",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 12383,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12523,
											"end": 12557,
											"name": "PUSH",
											"source": 20,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 12519,
											"end": 12520,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12517,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12507,
											"end": 12521,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12500,
											"end": 12558,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12592,
											"end": 12606,
											"name": "PUSH",
											"source": 20,
											"value": "64656C656761746563616C6C0000000000000000000000000000000000000000"
										},
										{
											"begin": 12587,
											"end": 12589,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12579,
											"end": 12585,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12575,
											"end": 12590,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12568,
											"end": 12607,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12383,
											"end": 12614,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12383,
											"end": 12614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12620,
											"end": 12986,
											"name": "tag",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 12620,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12762,
											"end": 12765,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "580"
										},
										{
											"begin": 12847,
											"end": 12849,
											"name": "PUSH",
											"source": 20,
											"value": "2C"
										},
										{
											"begin": 12842,
											"end": 12845,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12783,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 12783,
											"end": 12850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12783,
											"end": 12850,
											"name": "tag",
											"source": 20,
											"value": "580"
										},
										{
											"begin": 12783,
											"end": 12850,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12776,
											"end": 12850,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12776,
											"end": 12850,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12859,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 12948,
											"end": 12951,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12859,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 12859,
											"end": 12952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12859,
											"end": 12952,
											"name": "tag",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 12859,
											"end": 12952,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12977,
											"end": 12979,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12972,
											"end": 12975,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12968,
											"end": 12980,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12961,
											"end": 12980,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12961,
											"end": 12980,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12620,
											"end": 12986,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12620,
											"end": 12986,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12620,
											"end": 12986,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12620,
											"end": 12986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12992,
											"end": 13411,
											"name": "tag",
											"source": 20,
											"value": "121"
										},
										{
											"begin": 12992,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13158,
											"end": 13162,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13196,
											"end": 13198,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13181,
											"end": 13199,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13173,
											"end": 13199,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13173,
											"end": 13199,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13245,
											"end": 13254,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13239,
											"end": 13243,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13235,
											"end": 13255,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 13231,
											"end": 13232,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13229,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13209,
											"end": 13256,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13273,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "583"
										},
										{
											"begin": 13399,
											"end": 13403,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13273,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 13273,
											"end": 13404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13273,
											"end": 13404,
											"name": "tag",
											"source": 20,
											"value": "583"
										},
										{
											"begin": 13273,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12992,
											"end": 13411,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12992,
											"end": 13411,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12992,
											"end": 13411,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12992,
											"end": 13411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13417,
											"end": 13648,
											"name": "tag",
											"source": 20,
											"value": "397"
										},
										{
											"begin": 13417,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13557,
											"end": 13591,
											"name": "PUSH",
											"source": 20,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 13553,
											"end": 13554,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13545,
											"end": 13551,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13555,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13534,
											"end": 13592,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13626,
											"end": 13640,
											"name": "PUSH",
											"source": 20,
											"value": "6163746976652070726F78790000000000000000000000000000000000000000"
										},
										{
											"begin": 13621,
											"end": 13623,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13609,
											"end": 13624,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13602,
											"end": 13641,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13417,
											"end": 13648,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13417,
											"end": 13648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13654,
											"end": 14020,
											"name": "tag",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 13654,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13796,
											"end": 13799,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 13881,
											"end": 13883,
											"name": "PUSH",
											"source": 20,
											"value": "2C"
										},
										{
											"begin": 13876,
											"end": 13879,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13817,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 13817,
											"end": 13884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13817,
											"end": 13884,
											"name": "tag",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 13817,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13810,
											"end": 13884,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13810,
											"end": 13884,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13893,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "587"
										},
										{
											"begin": 13982,
											"end": 13985,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13893,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "397"
										},
										{
											"begin": 13893,
											"end": 13986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13893,
											"end": 13986,
											"name": "tag",
											"source": 20,
											"value": "587"
										},
										{
											"begin": 13893,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14011,
											"end": 14013,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 14006,
											"end": 14009,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14002,
											"end": 14014,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13995,
											"end": 14014,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13995,
											"end": 14014,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13654,
											"end": 14020,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13654,
											"end": 14020,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13654,
											"end": 14020,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13654,
											"end": 14020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14026,
											"end": 14445,
											"name": "tag",
											"source": 20,
											"value": "126"
										},
										{
											"begin": 14026,
											"end": 14445,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14192,
											"end": 14196,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14232,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14219,
											"end": 14228,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14215,
											"end": 14233,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14207,
											"end": 14233,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14207,
											"end": 14233,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14279,
											"end": 14288,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14273,
											"end": 14277,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14269,
											"end": 14289,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 14265,
											"end": 14266,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14254,
											"end": 14263,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14250,
											"end": 14267,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14243,
											"end": 14290,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14307,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 14433,
											"end": 14437,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14307,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 14307,
											"end": 14438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14307,
											"end": 14438,
											"name": "tag",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 14307,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14299,
											"end": 14438,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14299,
											"end": 14438,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14026,
											"end": 14445,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14026,
											"end": 14445,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14026,
											"end": 14445,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14026,
											"end": 14445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14451,
											"end": 14684,
											"name": "tag",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 14451,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14591,
											"end": 14625,
											"name": "PUSH",
											"source": 20,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 14587,
											"end": 14588,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14579,
											"end": 14585,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14575,
											"end": 14589,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14568,
											"end": 14626,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14660,
											"end": 14676,
											"name": "PUSH",
											"source": 20,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 14655,
											"end": 14657,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14647,
											"end": 14653,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14643,
											"end": 14658,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14636,
											"end": 14677,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14451,
											"end": 14684,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14451,
											"end": 14684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "tag",
											"source": 20,
											"value": "400"
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14832,
											"end": 14835,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "PUSH",
											"source": 20,
											"value": "2E"
										},
										{
											"begin": 14912,
											"end": 14915,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 14853,
											"end": 14920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "tag",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 14853,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14846,
											"end": 14920,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14846,
											"end": 14920,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "593"
										},
										{
											"begin": 15018,
											"end": 15021,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 14929,
											"end": 15022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "tag",
											"source": 20,
											"value": "593"
										},
										{
											"begin": 14929,
											"end": 15022,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15047,
											"end": 15049,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15042,
											"end": 15045,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15038,
											"end": 15050,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15031,
											"end": 15050,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15031,
											"end": 15050,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14690,
											"end": 15056,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14690,
											"end": 15056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15228,
											"end": 15232,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15266,
											"end": 15268,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15255,
											"end": 15264,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15251,
											"end": 15269,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15243,
											"end": 15269,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15243,
											"end": 15269,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15315,
											"end": 15324,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15309,
											"end": 15313,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15305,
											"end": 15325,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15301,
											"end": 15302,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15290,
											"end": 15299,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15286,
											"end": 15303,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15279,
											"end": 15326,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 15469,
											"end": 15473,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "400"
										},
										{
											"begin": 15343,
											"end": 15474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "tag",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 15343,
											"end": 15474,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15335,
											"end": 15474,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15335,
											"end": 15474,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15062,
											"end": 15481,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15062,
											"end": 15481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15487,
											"end": 15572,
											"name": "tag",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 15487,
											"end": 15572,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15532,
											"end": 15539,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15561,
											"end": 15566,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15550,
											"end": 15566,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15550,
											"end": 15566,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15487,
											"end": 15572,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15487,
											"end": 15572,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15487,
											"end": 15572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15487,
											"end": 15572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15578,
											"end": 15664,
											"name": "tag",
											"source": 20,
											"value": "402"
										},
										{
											"begin": 15578,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15613,
											"end": 15620,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15653,
											"end": 15657,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 15646,
											"end": 15651,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15642,
											"end": 15658,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 15631,
											"end": 15658,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15631,
											"end": 15658,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15578,
											"end": 15664,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15578,
											"end": 15664,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15578,
											"end": 15664,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15578,
											"end": 15664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15670,
											"end": 15730,
											"name": "tag",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 15670,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15698,
											"end": 15701,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15719,
											"end": 15724,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15712,
											"end": 15724,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15712,
											"end": 15724,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15670,
											"end": 15730,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15670,
											"end": 15730,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15670,
											"end": 15730,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15670,
											"end": 15730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15736,
											"end": 15890,
											"name": "tag",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 15736,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15792,
											"end": 15801,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15825,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 15841,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "601"
										},
										{
											"begin": 15850,
											"end": 15882,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 15876,
											"end": 15881,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15850,
											"end": 15882,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 15850,
											"end": 15882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15850,
											"end": 15882,
											"name": "tag",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 15850,
											"end": 15882,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15841,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 15841,
											"end": 15883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15841,
											"end": 15883,
											"name": "tag",
											"source": 20,
											"value": "601"
										},
										{
											"begin": 15841,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15825,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "402"
										},
										{
											"begin": 15825,
											"end": 15884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15825,
											"end": 15884,
											"name": "tag",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 15825,
											"end": 15884,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15812,
											"end": 15884,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15812,
											"end": 15884,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15736,
											"end": 15890,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15736,
											"end": 15890,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15736,
											"end": 15890,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15736,
											"end": 15890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15896,
											"end": 16039,
											"name": "tag",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 15896,
											"end": 16039,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15989,
											"end": 16032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 16026,
											"end": 16031,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15989,
											"end": 16032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 15989,
											"end": 16032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15989,
											"end": 16032,
											"name": "tag",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 15989,
											"end": 16032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15984,
											"end": 15987,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15977,
											"end": 16033,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15896,
											"end": 16039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15896,
											"end": 16039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15896,
											"end": 16039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16045,
											"end": 16279,
											"name": "tag",
											"source": 20,
											"value": "151"
										},
										{
											"begin": 16045,
											"end": 16279,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16144,
											"end": 16148,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16182,
											"end": 16184,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16171,
											"end": 16180,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16167,
											"end": 16185,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16159,
											"end": 16185,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16159,
											"end": 16185,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16195,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 16269,
											"end": 16270,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16258,
											"end": 16267,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16254,
											"end": 16271,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16245,
											"end": 16251,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 16195,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 16195,
											"end": 16272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16195,
											"end": 16272,
											"name": "tag",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 16195,
											"end": 16272,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16045,
											"end": 16279,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 16045,
											"end": 16279,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16045,
											"end": 16279,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16045,
											"end": 16279,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16045,
											"end": 16279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16285,
											"end": 16528,
											"name": "tag",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 16285,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16425,
											"end": 16459,
											"name": "PUSH",
											"source": 20,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 16421,
											"end": 16422,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16413,
											"end": 16419,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16409,
											"end": 16423,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16402,
											"end": 16460,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16494,
											"end": 16520,
											"name": "PUSH",
											"source": 20,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 16489,
											"end": 16491,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16481,
											"end": 16487,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16477,
											"end": 16492,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16470,
											"end": 16521,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16285,
											"end": 16528,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16285,
											"end": 16528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16534,
											"end": 16900,
											"name": "tag",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 16534,
											"end": 16900,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16676,
											"end": 16679,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16697,
											"end": 16764,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "609"
										},
										{
											"begin": 16761,
											"end": 16763,
											"name": "PUSH",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 16756,
											"end": 16759,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16697,
											"end": 16764,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 16697,
											"end": 16764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16697,
											"end": 16764,
											"name": "tag",
											"source": 20,
											"value": "609"
										},
										{
											"begin": 16697,
											"end": 16764,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16690,
											"end": 16764,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16690,
											"end": 16764,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16773,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "610"
										},
										{
											"begin": 16862,
											"end": 16865,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16773,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 16773,
											"end": 16866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16773,
											"end": 16866,
											"name": "tag",
											"source": 20,
											"value": "610"
										},
										{
											"begin": 16773,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16891,
											"end": 16893,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 16886,
											"end": 16889,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16882,
											"end": 16894,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16875,
											"end": 16894,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16875,
											"end": 16894,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16534,
											"end": 16900,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16534,
											"end": 16900,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16534,
											"end": 16900,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16534,
											"end": 16900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16906,
											"end": 17325,
											"name": "tag",
											"source": 20,
											"value": "164"
										},
										{
											"begin": 16906,
											"end": 17325,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17072,
											"end": 17076,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17110,
											"end": 17112,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17099,
											"end": 17108,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17095,
											"end": 17113,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17087,
											"end": 17113,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17087,
											"end": 17113,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17159,
											"end": 17168,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17153,
											"end": 17157,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17149,
											"end": 17169,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 17145,
											"end": 17146,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17143,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17130,
											"end": 17147,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17123,
											"end": 17170,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17187,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "612"
										},
										{
											"begin": 17313,
											"end": 17317,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17187,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 17187,
											"end": 17318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17187,
											"end": 17318,
											"name": "tag",
											"source": 20,
											"value": "612"
										},
										{
											"begin": 17187,
											"end": 17318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17179,
											"end": 17318,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17179,
											"end": 17318,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16906,
											"end": 17325,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16906,
											"end": 17325,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16906,
											"end": 17325,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16906,
											"end": 17325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17331,
											"end": 17511,
											"name": "tag",
											"source": 20,
											"value": "175"
										},
										{
											"begin": 17331,
											"end": 17511,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17379,
											"end": 17456,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17376,
											"end": 17377,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17369,
											"end": 17457,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17476,
											"end": 17480,
											"name": "PUSH",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 17473,
											"end": 17474,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 17466,
											"end": 17481,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17500,
											"end": 17504,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 17497,
											"end": 17498,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17490,
											"end": 17505,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 17517,
											"end": 17692,
											"name": "tag",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 17517,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17657,
											"end": 17684,
											"name": "PUSH",
											"source": 20,
											"value": "596F7520646F6E2774206861766520616E792072657761726400000000000000"
										},
										{
											"begin": 17653,
											"end": 17654,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17645,
											"end": 17651,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17641,
											"end": 17655,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17634,
											"end": 17685,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17517,
											"end": 17692,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17517,
											"end": 17692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "tag",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17840,
											"end": 17843,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "616"
										},
										{
											"begin": 17925,
											"end": 17927,
											"name": "PUSH",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 17920,
											"end": 17923,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 17861,
											"end": 17928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "tag",
											"source": 20,
											"value": "616"
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17854,
											"end": 17928,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17854,
											"end": 17928,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "617"
										},
										{
											"begin": 18026,
											"end": 18029,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 17937,
											"end": 18030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "tag",
											"source": 20,
											"value": "617"
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18055,
											"end": 18057,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18050,
											"end": 18053,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18046,
											"end": 18058,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18039,
											"end": 18058,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18039,
											"end": 18058,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17698,
											"end": 18064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "tag",
											"source": 20,
											"value": "182"
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18236,
											"end": 18240,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18274,
											"end": 18276,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18263,
											"end": 18272,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18259,
											"end": 18277,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18251,
											"end": 18277,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18251,
											"end": 18277,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18323,
											"end": 18332,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18317,
											"end": 18321,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18313,
											"end": 18333,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 18309,
											"end": 18310,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18298,
											"end": 18307,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18294,
											"end": 18311,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18287,
											"end": 18334,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "619"
										},
										{
											"begin": 18477,
											"end": 18481,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 18351,
											"end": 18482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "tag",
											"source": 20,
											"value": "619"
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18343,
											"end": 18482,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18343,
											"end": 18482,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18070,
											"end": 18489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18495,
											"end": 18613,
											"name": "tag",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 18495,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18582,
											"end": 18606,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "621"
										},
										{
											"begin": 18600,
											"end": 18605,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18582,
											"end": 18606,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 18582,
											"end": 18606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18582,
											"end": 18606,
											"name": "tag",
											"source": 20,
											"value": "621"
										},
										{
											"begin": 18582,
											"end": 18606,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18577,
											"end": 18580,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18570,
											"end": 18607,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18495,
											"end": 18613,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18495,
											"end": 18613,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18495,
											"end": 18613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18619,
											"end": 18841,
											"name": "tag",
											"source": 20,
											"value": "184"
										},
										{
											"begin": 18619,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18712,
											"end": 18716,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18750,
											"end": 18752,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18739,
											"end": 18748,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18727,
											"end": 18753,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18727,
											"end": 18753,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18763,
											"end": 18834,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "623"
										},
										{
											"begin": 18831,
											"end": 18832,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18820,
											"end": 18829,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18816,
											"end": 18833,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18807,
											"end": 18813,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18763,
											"end": 18834,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 18763,
											"end": 18834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18763,
											"end": 18834,
											"name": "tag",
											"source": 20,
											"value": "623"
										},
										{
											"begin": 18763,
											"end": 18834,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18619,
											"end": 18841,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18619,
											"end": 18841,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18619,
											"end": 18841,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18619,
											"end": 18841,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18619,
											"end": 18841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18847,
											"end": 18969,
											"name": "tag",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 18847,
											"end": 18969,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18920,
											"end": 18944,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "625"
										},
										{
											"begin": 18938,
											"end": 18943,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18920,
											"end": 18944,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 18920,
											"end": 18944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18920,
											"end": 18944,
											"name": "tag",
											"source": 20,
											"value": "625"
										},
										{
											"begin": 18920,
											"end": 18944,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18913,
											"end": 18918,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18910,
											"end": 18945,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 18900,
											"end": 18963,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "626"
										},
										{
											"begin": 18900,
											"end": 18963,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 18959,
											"end": 18960,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18956,
											"end": 18957,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 18949,
											"end": 18961,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 18900,
											"end": 18963,
											"name": "tag",
											"source": 20,
											"value": "626"
										},
										{
											"begin": 18900,
											"end": 18963,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18847,
											"end": 18969,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18847,
											"end": 18969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18975,
											"end": 19118,
											"name": "tag",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 18975,
											"end": 19118,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19032,
											"end": 19037,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19063,
											"end": 19069,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19057,
											"end": 19070,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 19048,
											"end": 19070,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19048,
											"end": 19070,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19079,
											"end": 19112,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "628"
										},
										{
											"begin": 19106,
											"end": 19111,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19079,
											"end": 19112,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 19079,
											"end": 19112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19079,
											"end": 19112,
											"name": "tag",
											"source": 20,
											"value": "628"
										},
										{
											"begin": 19079,
											"end": 19112,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18975,
											"end": 19118,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18975,
											"end": 19118,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18975,
											"end": 19118,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18975,
											"end": 19118,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18975,
											"end": 19118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19124,
											"end": 19475,
											"name": "tag",
											"source": 20,
											"value": "188"
										},
										{
											"begin": 19124,
											"end": 19475,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19194,
											"end": 19200,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19243,
											"end": 19245,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 19231,
											"end": 19240,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19222,
											"end": 19229,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19218,
											"end": 19241,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 19214,
											"end": 19246,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 19211,
											"end": 19330,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19211,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "630"
										},
										{
											"begin": 19211,
											"end": 19330,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19249,
											"end": 19328,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "631"
										},
										{
											"begin": 19249,
											"end": 19328,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 19249,
											"end": 19328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19249,
											"end": 19328,
											"name": "tag",
											"source": 20,
											"value": "631"
										},
										{
											"begin": 19249,
											"end": 19328,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19211,
											"end": 19330,
											"name": "tag",
											"source": 20,
											"value": "630"
										},
										{
											"begin": 19211,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19369,
											"end": 19370,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19394,
											"end": 19458,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "632"
										},
										{
											"begin": 19450,
											"end": 19457,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19441,
											"end": 19447,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19430,
											"end": 19439,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19426,
											"end": 19448,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19394,
											"end": 19458,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 19394,
											"end": 19458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19394,
											"end": 19458,
											"name": "tag",
											"source": 20,
											"value": "632"
										},
										{
											"begin": 19394,
											"end": 19458,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19384,
											"end": 19458,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19384,
											"end": 19458,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19340,
											"end": 19468,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19124,
											"end": 19475,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19124,
											"end": 19475,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19124,
											"end": 19475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19124,
											"end": 19475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19124,
											"end": 19475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19481,
											"end": 19701,
											"name": "tag",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 19481,
											"end": 19701,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19621,
											"end": 19655,
											"name": "PUSH",
											"source": 20,
											"value": "596F752063616E27742077697468647261772061742074686973206D6F6D656E"
										},
										{
											"begin": 19617,
											"end": 19618,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19609,
											"end": 19615,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19605,
											"end": 19619,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19598,
											"end": 19656,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 19690,
											"end": 19693,
											"name": "PUSH",
											"source": 20,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19685,
											"end": 19687,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 19677,
											"end": 19683,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19673,
											"end": 19688,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19666,
											"end": 19694,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 19481,
											"end": 19701,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19481,
											"end": 19701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "tag",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19849,
											"end": 19852,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "635"
										},
										{
											"begin": 19934,
											"end": 19936,
											"name": "PUSH",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 19929,
											"end": 19932,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 19870,
											"end": 19937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "tag",
											"source": 20,
											"value": "635"
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19863,
											"end": 19937,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19863,
											"end": 19937,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "636"
										},
										{
											"begin": 20035,
											"end": 20038,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 19946,
											"end": 20039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "tag",
											"source": 20,
											"value": "636"
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20064,
											"end": 20066,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 20059,
											"end": 20062,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20055,
											"end": 20067,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20048,
											"end": 20067,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20048,
											"end": 20067,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19707,
											"end": 20073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "tag",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20245,
											"end": 20249,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20283,
											"end": 20285,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 20272,
											"end": 20281,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20268,
											"end": 20286,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20332,
											"end": 20341,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20326,
											"end": 20330,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20322,
											"end": 20342,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 20318,
											"end": 20319,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20307,
											"end": 20316,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20303,
											"end": 20320,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20296,
											"end": 20343,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "638"
										},
										{
											"begin": 20486,
											"end": 20490,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 20360,
											"end": 20491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "tag",
											"source": 20,
											"value": "638"
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20352,
											"end": 20491,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20352,
											"end": 20491,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20079,
											"end": 20498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "tag",
											"source": 20,
											"value": "193"
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20625,
											"end": 20629,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20663,
											"end": 20665,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 20652,
											"end": 20661,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20648,
											"end": 20666,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20640,
											"end": 20666,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20640,
											"end": 20666,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "640"
										},
										{
											"begin": 20744,
											"end": 20745,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20733,
											"end": 20742,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20729,
											"end": 20746,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20720,
											"end": 20726,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 20676,
											"end": 20747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "tag",
											"source": 20,
											"value": "640"
										},
										{
											"begin": 20676,
											"end": 20747,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "641"
										},
										{
											"begin": 20825,
											"end": 20827,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 20814,
											"end": 20823,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20810,
											"end": 20828,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20801,
											"end": 20807,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 20757,
											"end": 20829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "tag",
											"source": 20,
											"value": "641"
										},
										{
											"begin": 20757,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20504,
											"end": 20836,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20504,
											"end": 20836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20842,
											"end": 20958,
											"name": "tag",
											"source": 20,
											"value": "415"
										},
										{
											"begin": 20842,
											"end": 20958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20912,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "643"
										},
										{
											"begin": 20927,
											"end": 20932,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20912,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 20912,
											"end": 20933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20912,
											"end": 20933,
											"name": "tag",
											"source": 20,
											"value": "643"
										},
										{
											"begin": 20912,
											"end": 20933,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20905,
											"end": 20910,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20902,
											"end": 20934,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 20892,
											"end": 20952,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "644"
										},
										{
											"begin": 20892,
											"end": 20952,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 20948,
											"end": 20949,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20945,
											"end": 20946,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 20938,
											"end": 20950,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 20892,
											"end": 20952,
											"name": "tag",
											"source": 20,
											"value": "644"
										},
										{
											"begin": 20892,
											"end": 20952,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20842,
											"end": 20958,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20842,
											"end": 20958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20964,
											"end": 21101,
											"name": "tag",
											"source": 20,
											"value": "416"
										},
										{
											"begin": 20964,
											"end": 21101,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21018,
											"end": 21023,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21049,
											"end": 21055,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21043,
											"end": 21056,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 21034,
											"end": 21056,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21034,
											"end": 21056,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21065,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "646"
										},
										{
											"begin": 21089,
											"end": 21094,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21065,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "415"
										},
										{
											"begin": 21065,
											"end": 21095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21065,
											"end": 21095,
											"name": "tag",
											"source": 20,
											"value": "646"
										},
										{
											"begin": 21065,
											"end": 21095,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20964,
											"end": 21101,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 20964,
											"end": 21101,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20964,
											"end": 21101,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20964,
											"end": 21101,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20964,
											"end": 21101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21107,
											"end": 21452,
											"name": "tag",
											"source": 20,
											"value": "197"
										},
										{
											"begin": 21107,
											"end": 21452,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21174,
											"end": 21180,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21223,
											"end": 21225,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 21211,
											"end": 21220,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21202,
											"end": 21209,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 21198,
											"end": 21221,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 21194,
											"end": 21226,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "648"
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "649"
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 21229,
											"end": 21308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "tag",
											"source": 20,
											"value": "649"
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "tag",
											"source": 20,
											"value": "648"
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21349,
											"end": 21350,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21374,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "650"
										},
										{
											"begin": 21427,
											"end": 21434,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 21418,
											"end": 21424,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21407,
											"end": 21416,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 21403,
											"end": 21425,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21374,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "416"
										},
										{
											"begin": 21374,
											"end": 21435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21374,
											"end": 21435,
											"name": "tag",
											"source": 20,
											"value": "650"
										},
										{
											"begin": 21374,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21364,
											"end": 21435,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21364,
											"end": 21435,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21320,
											"end": 21445,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21107,
											"end": 21452,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21107,
											"end": 21452,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21107,
											"end": 21452,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21107,
											"end": 21452,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21107,
											"end": 21452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21458,
											"end": 21638,
											"name": "tag",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 21458,
											"end": 21638,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21506,
											"end": 21583,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21503,
											"end": 21504,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21496,
											"end": 21584,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 21603,
											"end": 21607,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 21600,
											"end": 21601,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 21593,
											"end": 21608,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 21627,
											"end": 21631,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 21624,
											"end": 21625,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21617,
											"end": 21632,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 21644,
											"end": 21835,
											"name": "tag",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 21644,
											"end": 21835,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21684,
											"end": 21687,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21703,
											"end": 21723,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "653"
										},
										{
											"begin": 21721,
											"end": 21722,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21703,
											"end": 21723,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 21703,
											"end": 21723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21703,
											"end": 21723,
											"name": "tag",
											"source": 20,
											"value": "653"
										},
										{
											"begin": 21703,
											"end": 21723,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21698,
											"end": 21723,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21698,
											"end": 21723,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21737,
											"end": 21757,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "654"
										},
										{
											"begin": 21755,
											"end": 21756,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 21737,
											"end": 21757,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 21737,
											"end": 21757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21737,
											"end": 21757,
											"name": "tag",
											"source": 20,
											"value": "654"
										},
										{
											"begin": 21737,
											"end": 21757,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21732,
											"end": 21757,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21732,
											"end": 21757,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21780,
											"end": 21781,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21777,
											"end": 21778,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21773,
											"end": 21782,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21766,
											"end": 21782,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21766,
											"end": 21782,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21801,
											"end": 21804,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 21798,
											"end": 21799,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21795,
											"end": 21805,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 21792,
											"end": 21828,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 21792,
											"end": 21828,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "655"
										},
										{
											"begin": 21792,
											"end": 21828,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 21808,
											"end": 21826,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "656"
										},
										{
											"begin": 21808,
											"end": 21826,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 21808,
											"end": 21826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21808,
											"end": 21826,
											"name": "tag",
											"source": 20,
											"value": "656"
										},
										{
											"begin": 21808,
											"end": 21826,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21792,
											"end": 21828,
											"name": "tag",
											"source": 20,
											"value": "655"
										},
										{
											"begin": 21792,
											"end": 21828,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21644,
											"end": 21835,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21644,
											"end": 21835,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21644,
											"end": 21835,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21644,
											"end": 21835,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21644,
											"end": 21835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21841,
											"end": 21984,
											"name": "tag",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 21841,
											"end": 21984,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21898,
											"end": 21903,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21929,
											"end": 21935,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21923,
											"end": 21936,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 21914,
											"end": 21936,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21914,
											"end": 21936,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21945,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "658"
										},
										{
											"begin": 21972,
											"end": 21977,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21945,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 21945,
											"end": 21978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21945,
											"end": 21978,
											"name": "tag",
											"source": 20,
											"value": "658"
										},
										{
											"begin": 21945,
											"end": 21978,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21841,
											"end": 21984,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21841,
											"end": 21984,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21841,
											"end": 21984,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21841,
											"end": 21984,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21841,
											"end": 21984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21990,
											"end": 22341,
											"name": "tag",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 21990,
											"end": 22341,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22060,
											"end": 22066,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22109,
											"end": 22111,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 22097,
											"end": 22106,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22088,
											"end": 22095,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22084,
											"end": 22107,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 22080,
											"end": 22112,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 22077,
											"end": 22196,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 22077,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "660"
										},
										{
											"begin": 22077,
											"end": 22196,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 22115,
											"end": 22194,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "661"
										},
										{
											"begin": 22115,
											"end": 22194,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 22115,
											"end": 22194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22115,
											"end": 22194,
											"name": "tag",
											"source": 20,
											"value": "661"
										},
										{
											"begin": 22115,
											"end": 22194,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22077,
											"end": 22196,
											"name": "tag",
											"source": 20,
											"value": "660"
										},
										{
											"begin": 22077,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22235,
											"end": 22236,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22260,
											"end": 22324,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "662"
										},
										{
											"begin": 22316,
											"end": 22323,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22307,
											"end": 22313,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22296,
											"end": 22305,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 22292,
											"end": 22314,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22260,
											"end": 22324,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 22260,
											"end": 22324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22260,
											"end": 22324,
											"name": "tag",
											"source": 20,
											"value": "662"
										},
										{
											"begin": 22260,
											"end": 22324,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22250,
											"end": 22324,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22250,
											"end": 22324,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22206,
											"end": 22334,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21990,
											"end": 22341,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21990,
											"end": 22341,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21990,
											"end": 22341,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21990,
											"end": 22341,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21990,
											"end": 22341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22347,
											"end": 22580,
											"name": "tag",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 22347,
											"end": 22580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22487,
											"end": 22521,
											"name": "PUSH",
											"source": 20,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 22483,
											"end": 22484,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22475,
											"end": 22481,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22471,
											"end": 22485,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22464,
											"end": 22522,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 22556,
											"end": 22572,
											"name": "PUSH",
											"source": 20,
											"value": "6F6E206973206E6F742055555053000000000000000000000000000000000000"
										},
										{
											"begin": 22551,
											"end": 22553,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 22543,
											"end": 22549,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22539,
											"end": 22554,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22532,
											"end": 22573,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 22347,
											"end": 22580,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22347,
											"end": 22580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22586,
											"end": 22952,
											"name": "tag",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 22586,
											"end": 22952,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22728,
											"end": 22731,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22749,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "665"
										},
										{
											"begin": 22813,
											"end": 22815,
											"name": "PUSH",
											"source": 20,
											"value": "2E"
										},
										{
											"begin": 22808,
											"end": 22811,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 22749,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 22749,
											"end": 22816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22749,
											"end": 22816,
											"name": "tag",
											"source": 20,
											"value": "665"
										},
										{
											"begin": 22749,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22742,
											"end": 22816,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22742,
											"end": 22816,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22825,
											"end": 22918,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "666"
										},
										{
											"begin": 22914,
											"end": 22917,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22825,
											"end": 22918,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 22825,
											"end": 22918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22825,
											"end": 22918,
											"name": "tag",
											"source": 20,
											"value": "666"
										},
										{
											"begin": 22825,
											"end": 22918,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22943,
											"end": 22945,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 22941,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22934,
											"end": 22946,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22927,
											"end": 22946,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22927,
											"end": 22946,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22586,
											"end": 22952,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22586,
											"end": 22952,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22586,
											"end": 22952,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22586,
											"end": 22952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22958,
											"end": 23377,
											"name": "tag",
											"source": 20,
											"value": "255"
										},
										{
											"begin": 22958,
											"end": 23377,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23124,
											"end": 23128,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23162,
											"end": 23164,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 23151,
											"end": 23160,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23147,
											"end": 23165,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23139,
											"end": 23165,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23139,
											"end": 23165,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23211,
											"end": 23220,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23205,
											"end": 23209,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23201,
											"end": 23221,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 23197,
											"end": 23198,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23186,
											"end": 23195,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23182,
											"end": 23199,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23175,
											"end": 23222,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23239,
											"end": 23370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "668"
										},
										{
											"begin": 23365,
											"end": 23369,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23239,
											"end": 23370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 23239,
											"end": 23370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23239,
											"end": 23370,
											"name": "tag",
											"source": 20,
											"value": "668"
										},
										{
											"begin": 23239,
											"end": 23370,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23231,
											"end": 23370,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23231,
											"end": 23370,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22958,
											"end": 23377,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22958,
											"end": 23377,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22958,
											"end": 23377,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22958,
											"end": 23377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23383,
											"end": 23611,
											"name": "tag",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 23383,
											"end": 23611,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23523,
											"end": 23557,
											"name": "PUSH",
											"source": 20,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 23519,
											"end": 23520,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23511,
											"end": 23517,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23507,
											"end": 23521,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23500,
											"end": 23558,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23592,
											"end": 23603,
											"name": "PUSH",
											"source": 20,
											"value": "6961626C65555549440000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23587,
											"end": 23589,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 23579,
											"end": 23585,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23575,
											"end": 23590,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23568,
											"end": 23604,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23383,
											"end": 23611,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23383,
											"end": 23611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23617,
											"end": 23983,
											"name": "tag",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 23617,
											"end": 23983,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23759,
											"end": 23762,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23780,
											"end": 23847,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "671"
										},
										{
											"begin": 23844,
											"end": 23846,
											"name": "PUSH",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 23839,
											"end": 23842,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23780,
											"end": 23847,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 23780,
											"end": 23847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23780,
											"end": 23847,
											"name": "tag",
											"source": 20,
											"value": "671"
										},
										{
											"begin": 23780,
											"end": 23847,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23773,
											"end": 23847,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23773,
											"end": 23847,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23856,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "672"
										},
										{
											"begin": 23945,
											"end": 23948,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23856,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 23856,
											"end": 23949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23856,
											"end": 23949,
											"name": "tag",
											"source": 20,
											"value": "672"
										},
										{
											"begin": 23856,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23974,
											"end": 23976,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 23969,
											"end": 23972,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23965,
											"end": 23977,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23958,
											"end": 23977,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23958,
											"end": 23977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23617,
											"end": 23983,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23617,
											"end": 23983,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23617,
											"end": 23983,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23617,
											"end": 23983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23989,
											"end": 24408,
											"name": "tag",
											"source": 20,
											"value": "259"
										},
										{
											"begin": 23989,
											"end": 24408,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24155,
											"end": 24159,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24193,
											"end": 24195,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 24182,
											"end": 24191,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24178,
											"end": 24196,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24170,
											"end": 24196,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24170,
											"end": 24196,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24242,
											"end": 24251,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24236,
											"end": 24240,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24232,
											"end": 24252,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 24228,
											"end": 24229,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24217,
											"end": 24226,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24213,
											"end": 24230,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24206,
											"end": 24253,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 24270,
											"end": 24401,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "674"
										},
										{
											"begin": 24396,
											"end": 24400,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24270,
											"end": 24401,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 24270,
											"end": 24401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24270,
											"end": 24401,
											"name": "tag",
											"source": 20,
											"value": "674"
										},
										{
											"begin": 24270,
											"end": 24401,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24262,
											"end": 24401,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24262,
											"end": 24401,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23989,
											"end": 24408,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23989,
											"end": 24408,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23989,
											"end": 24408,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23989,
											"end": 24408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24414,
											"end": 24562,
											"name": "tag",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 24414,
											"end": 24562,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24516,
											"end": 24527,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24553,
											"end": 24556,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24538,
											"end": 24556,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24538,
											"end": 24556,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24414,
											"end": 24562,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 24414,
											"end": 24562,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24414,
											"end": 24562,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24414,
											"end": 24562,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24414,
											"end": 24562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24568,
											"end": 24741,
											"name": "tag",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 24568,
											"end": 24741,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24708,
											"end": 24733,
											"name": "PUSH",
											"source": 20,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 24704,
											"end": 24705,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24696,
											"end": 24702,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24692,
											"end": 24706,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24685,
											"end": 24734,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 24568,
											"end": 24741,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24568,
											"end": 24741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24747,
											"end": 25149,
											"name": "tag",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 24747,
											"end": 25149,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24907,
											"end": 24910,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24928,
											"end": 25013,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "678"
										},
										{
											"begin": 25010,
											"end": 25012,
											"name": "PUSH",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 25005,
											"end": 25008,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24928,
											"end": 25013,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 24928,
											"end": 25013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24928,
											"end": 25013,
											"name": "tag",
											"source": 20,
											"value": "678"
										},
										{
											"begin": 24928,
											"end": 25013,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24921,
											"end": 25013,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24921,
											"end": 25013,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "679"
										},
										{
											"begin": 25111,
											"end": 25114,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 25022,
											"end": 25115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "tag",
											"source": 20,
											"value": "679"
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25140,
											"end": 25142,
											"name": "PUSH",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 25135,
											"end": 25138,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25131,
											"end": 25143,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25124,
											"end": 25143,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25124,
											"end": 25143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24747,
											"end": 25149,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24747,
											"end": 25149,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24747,
											"end": 25149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24747,
											"end": 25149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25155,
											"end": 25254,
											"name": "tag",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 25155,
											"end": 25254,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25207,
											"end": 25213,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25241,
											"end": 25246,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25235,
											"end": 25247,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 25225,
											"end": 25247,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25225,
											"end": 25247,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25155,
											"end": 25254,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25155,
											"end": 25254,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25155,
											"end": 25254,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25155,
											"end": 25254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25260,
											"end": 25399,
											"name": "tag",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 25260,
											"end": 25399,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25349,
											"end": 25355,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25344,
											"end": 25347,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25339,
											"end": 25342,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 25333,
											"end": 25356,
											"name": "MCOPY",
											"source": 20
										},
										{
											"begin": 25390,
											"end": 25391,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25381,
											"end": 25387,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 25376,
											"end": 25379,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 25372,
											"end": 25388,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25365,
											"end": 25392,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 25260,
											"end": 25399,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25260,
											"end": 25399,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25260,
											"end": 25399,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25260,
											"end": 25399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25405,
											"end": 25795,
											"name": "tag",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 25405,
											"end": 25795,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25511,
											"end": 25514,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25539,
											"end": 25578,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "683"
										},
										{
											"begin": 25572,
											"end": 25577,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25539,
											"end": 25578,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 25539,
											"end": 25578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25539,
											"end": 25578,
											"name": "tag",
											"source": 20,
											"value": "683"
										},
										{
											"begin": 25539,
											"end": 25578,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25594,
											"end": 25683,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "684"
										},
										{
											"begin": 25676,
											"end": 25682,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25671,
											"end": 25674,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 25594,
											"end": 25683,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 25594,
											"end": 25683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25594,
											"end": 25683,
											"name": "tag",
											"source": 20,
											"value": "684"
										},
										{
											"begin": 25594,
											"end": 25683,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25587,
											"end": 25683,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 25587,
											"end": 25683,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25692,
											"end": 25757,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "685"
										},
										{
											"begin": 25750,
											"end": 25756,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25745,
											"end": 25748,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 25738,
											"end": 25742,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 25731,
											"end": 25736,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 25727,
											"end": 25743,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25692,
											"end": 25757,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 25692,
											"end": 25757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25692,
											"end": 25757,
											"name": "tag",
											"source": 20,
											"value": "685"
										},
										{
											"begin": 25692,
											"end": 25757,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25782,
											"end": 25788,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 25777,
											"end": 25780,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 25773,
											"end": 25789,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25766,
											"end": 25789,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25766,
											"end": 25789,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25515,
											"end": 25795,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25405,
											"end": 25795,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 25405,
											"end": 25795,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25405,
											"end": 25795,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25405,
											"end": 25795,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25405,
											"end": 25795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25801,
											"end": 25968,
											"name": "tag",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 25801,
											"end": 25968,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25941,
											"end": 25960,
											"name": "PUSH",
											"source": 20,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 25937,
											"end": 25938,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25929,
											"end": 25935,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25925,
											"end": 25939,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25918,
											"end": 25961,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 25801,
											"end": 25968,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25801,
											"end": 25968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25974,
											"end": 26376,
											"name": "tag",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 25974,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26134,
											"end": 26137,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26155,
											"end": 26240,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "688"
										},
										{
											"begin": 26237,
											"end": 26239,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 26232,
											"end": 26235,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 26155,
											"end": 26240,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 26155,
											"end": 26240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26155,
											"end": 26240,
											"name": "tag",
											"source": 20,
											"value": "688"
										},
										{
											"begin": 26155,
											"end": 26240,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26148,
											"end": 26240,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26148,
											"end": 26240,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26249,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "689"
										},
										{
											"begin": 26338,
											"end": 26341,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26249,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 26249,
											"end": 26342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26249,
											"end": 26342,
											"name": "tag",
											"source": 20,
											"value": "689"
										},
										{
											"begin": 26249,
											"end": 26342,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26367,
											"end": 26369,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 26362,
											"end": 26365,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26358,
											"end": 26370,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26351,
											"end": 26370,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26351,
											"end": 26370,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25974,
											"end": 26376,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25974,
											"end": 26376,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25974,
											"end": 26376,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25974,
											"end": 26376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26382,
											"end": 27349,
											"name": "tag",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 26382,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26764,
											"end": 26767,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26786,
											"end": 26934,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "691"
										},
										{
											"begin": 26930,
											"end": 26933,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26786,
											"end": 26934,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 26786,
											"end": 26934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26786,
											"end": 26934,
											"name": "tag",
											"source": 20,
											"value": "691"
										},
										{
											"begin": 26786,
											"end": 26934,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26779,
											"end": 26934,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26779,
											"end": 26934,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26951,
											"end": 27046,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "692"
										},
										{
											"begin": 27042,
											"end": 27045,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27033,
											"end": 27039,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 26951,
											"end": 27046,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 26951,
											"end": 27046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26951,
											"end": 27046,
											"name": "tag",
											"source": 20,
											"value": "692"
										},
										{
											"begin": 26951,
											"end": 27046,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26944,
											"end": 27046,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26944,
											"end": 27046,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27063,
											"end": 27211,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "693"
										},
										{
											"begin": 27207,
											"end": 27210,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27063,
											"end": 27211,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 27063,
											"end": 27211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27063,
											"end": 27211,
											"name": "tag",
											"source": 20,
											"value": "693"
										},
										{
											"begin": 27063,
											"end": 27211,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27056,
											"end": 27211,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27056,
											"end": 27211,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27228,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "694"
										},
										{
											"begin": 27319,
											"end": 27322,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27310,
											"end": 27316,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 27228,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 27228,
											"end": 27323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27228,
											"end": 27323,
											"name": "tag",
											"source": 20,
											"value": "694"
										},
										{
											"begin": 27228,
											"end": 27323,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27221,
											"end": 27323,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27221,
											"end": 27323,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27340,
											"end": 27343,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 27333,
											"end": 27343,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 27333,
											"end": 27343,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26382,
											"end": 27349,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 26382,
											"end": 27349,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 26382,
											"end": 27349,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26382,
											"end": 27349,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26382,
											"end": 27349,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26382,
											"end": 27349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27355,
											"end": 27732,
											"name": "tag",
											"source": 20,
											"value": "431"
										},
										{
											"begin": 27355,
											"end": 27732,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27443,
											"end": 27446,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 27471,
											"end": 27510,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "696"
										},
										{
											"begin": 27504,
											"end": 27509,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27471,
											"end": 27510,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 27471,
											"end": 27510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27471,
											"end": 27510,
											"name": "tag",
											"source": 20,
											"value": "696"
										},
										{
											"begin": 27471,
											"end": 27510,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27526,
											"end": 27597,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "697"
										},
										{
											"begin": 27590,
											"end": 27596,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 27585,
											"end": 27588,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 27526,
											"end": 27597,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 27526,
											"end": 27597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27526,
											"end": 27597,
											"name": "tag",
											"source": 20,
											"value": "697"
										},
										{
											"begin": 27526,
											"end": 27597,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27519,
											"end": 27597,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 27519,
											"end": 27597,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27606,
											"end": 27671,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "698"
										},
										{
											"begin": 27664,
											"end": 27670,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 27659,
											"end": 27662,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 27652,
											"end": 27656,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 27645,
											"end": 27650,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 27641,
											"end": 27657,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 27606,
											"end": 27671,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 27606,
											"end": 27671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27606,
											"end": 27671,
											"name": "tag",
											"source": 20,
											"value": "698"
										},
										{
											"begin": 27606,
											"end": 27671,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27696,
											"end": 27725,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "699"
										},
										{
											"begin": 27718,
											"end": 27724,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 27696,
											"end": 27725,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 27696,
											"end": 27725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27696,
											"end": 27725,
											"name": "tag",
											"source": 20,
											"value": "699"
										},
										{
											"begin": 27696,
											"end": 27725,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27691,
											"end": 27694,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 27687,
											"end": 27726,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 27680,
											"end": 27726,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27680,
											"end": 27726,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27447,
											"end": 27732,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27355,
											"end": 27732,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 27355,
											"end": 27732,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27355,
											"end": 27732,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27355,
											"end": 27732,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27355,
											"end": 27732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27738,
											"end": 28051,
											"name": "tag",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 27738,
											"end": 28051,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27851,
											"end": 27855,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 27889,
											"end": 27891,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 27878,
											"end": 27887,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27874,
											"end": 27892,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 27866,
											"end": 27892,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 27866,
											"end": 27892,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27938,
											"end": 27947,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 27932,
											"end": 27936,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 27928,
											"end": 27948,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 27924,
											"end": 27925,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 27913,
											"end": 27922,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 27909,
											"end": 27926,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 27902,
											"end": 27949,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 27966,
											"end": 28044,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "701"
										},
										{
											"begin": 28039,
											"end": 28043,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 28030,
											"end": 28036,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 27966,
											"end": 28044,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "431"
										},
										{
											"begin": 27966,
											"end": 28044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27966,
											"end": 28044,
											"name": "tag",
											"source": 20,
											"value": "701"
										},
										{
											"begin": 27966,
											"end": 28044,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27958,
											"end": 28044,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 27958,
											"end": 28044,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27738,
											"end": 28051,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 27738,
											"end": 28051,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27738,
											"end": 28051,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27738,
											"end": 28051,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27738,
											"end": 28051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28057,
											"end": 28289,
											"name": "tag",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 28057,
											"end": 28289,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28197,
											"end": 28231,
											"name": "PUSH",
											"source": 20,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 28193,
											"end": 28194,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28185,
											"end": 28191,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28181,
											"end": 28195,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28174,
											"end": 28232,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 28266,
											"end": 28281,
											"name": "PUSH",
											"source": 20,
											"value": "6F74206120636F6E747261637400000000000000000000000000000000000000"
										},
										{
											"begin": 28261,
											"end": 28263,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 28253,
											"end": 28259,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28249,
											"end": 28264,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28242,
											"end": 28282,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 28057,
											"end": 28289,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28057,
											"end": 28289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28661,
											"name": "tag",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 28295,
											"end": 28661,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28437,
											"end": 28440,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28458,
											"end": 28525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "704"
										},
										{
											"begin": 28522,
											"end": 28524,
											"name": "PUSH",
											"source": 20,
											"value": "2D"
										},
										{
											"begin": 28517,
											"end": 28520,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 28458,
											"end": 28525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 28458,
											"end": 28525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28458,
											"end": 28525,
											"name": "tag",
											"source": 20,
											"value": "704"
										},
										{
											"begin": 28458,
											"end": 28525,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28451,
											"end": 28525,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 28451,
											"end": 28525,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28534,
											"end": 28627,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "705"
										},
										{
											"begin": 28623,
											"end": 28626,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28534,
											"end": 28627,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 28534,
											"end": 28627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28534,
											"end": 28627,
											"name": "tag",
											"source": 20,
											"value": "705"
										},
										{
											"begin": 28534,
											"end": 28627,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28652,
											"end": 28654,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 28647,
											"end": 28650,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28643,
											"end": 28655,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28636,
											"end": 28655,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28636,
											"end": 28655,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28661,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28661,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28661,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28667,
											"end": 29086,
											"name": "tag",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 28667,
											"end": 29086,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28833,
											"end": 28837,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28871,
											"end": 28873,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 28860,
											"end": 28869,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28856,
											"end": 28874,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28848,
											"end": 28874,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28848,
											"end": 28874,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28920,
											"end": 28929,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 28914,
											"end": 28918,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 28910,
											"end": 28930,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 28906,
											"end": 28907,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28895,
											"end": 28904,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 28891,
											"end": 28908,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28884,
											"end": 28931,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 28948,
											"end": 29079,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "707"
										},
										{
											"begin": 29074,
											"end": 29078,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 28948,
											"end": 29079,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 28948,
											"end": 29079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28948,
											"end": 29079,
											"name": "tag",
											"source": 20,
											"value": "707"
										},
										{
											"begin": 28948,
											"end": 29079,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28940,
											"end": 29079,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28940,
											"end": 29079,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28667,
											"end": 29086,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 28667,
											"end": 29086,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28667,
											"end": 29086,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28667,
											"end": 29086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29092,
											"end": 29502,
											"name": "tag",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 29092,
											"end": 29502,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29132,
											"end": 29139,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29155,
											"end": 29175,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "709"
										},
										{
											"begin": 29173,
											"end": 29174,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29155,
											"end": 29175,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 29155,
											"end": 29175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29155,
											"end": 29175,
											"name": "tag",
											"source": 20,
											"value": "709"
										},
										{
											"begin": 29155,
											"end": 29175,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29150,
											"end": 29175,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29150,
											"end": 29175,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29189,
											"end": 29209,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "710"
										},
										{
											"begin": 29207,
											"end": 29208,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 29189,
											"end": 29209,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 29189,
											"end": 29209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29189,
											"end": 29209,
											"name": "tag",
											"source": 20,
											"value": "710"
										},
										{
											"begin": 29189,
											"end": 29209,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29244,
											"end": 29245,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29241,
											"end": 29242,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29237,
											"end": 29246,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 29266,
											"end": 29296,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "711"
										},
										{
											"begin": 29284,
											"end": 29295,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 29266,
											"end": 29296,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 29266,
											"end": 29296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29266,
											"end": 29296,
											"name": "tag",
											"source": 20,
											"value": "711"
										},
										{
											"begin": 29266,
											"end": 29296,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29255,
											"end": 29296,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29255,
											"end": 29296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29445,
											"end": 29446,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29436,
											"end": 29443,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29432,
											"end": 29447,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 29429,
											"end": 29430,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 29426,
											"end": 29448,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 29406,
											"end": 29407,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 29399,
											"end": 29408,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 29379,
											"end": 29462,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 29356,
											"end": 29495,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "712"
										},
										{
											"begin": 29356,
											"end": 29495,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 29475,
											"end": 29493,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "713"
										},
										{
											"begin": 29475,
											"end": 29493,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 29475,
											"end": 29493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29475,
											"end": 29493,
											"name": "tag",
											"source": 20,
											"value": "713"
										},
										{
											"begin": 29475,
											"end": 29493,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29356,
											"end": 29495,
											"name": "tag",
											"source": 20,
											"value": "712"
										},
										{
											"begin": 29356,
											"end": 29495,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29140,
											"end": 29502,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29092,
											"end": 29502,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 29092,
											"end": 29502,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29092,
											"end": 29502,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29092,
											"end": 29502,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29092,
											"end": 29502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29508,
											"end": 29679,
											"name": "tag",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 29508,
											"end": 29679,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29547,
											"end": 29550,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29570,
											"end": 29594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "715"
										},
										{
											"begin": 29588,
											"end": 29593,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29570,
											"end": 29594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 29570,
											"end": 29594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29570,
											"end": 29594,
											"name": "tag",
											"source": 20,
											"value": "715"
										},
										{
											"begin": 29570,
											"end": 29594,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29561,
											"end": 29594,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29561,
											"end": 29594,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29616,
											"end": 29620,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29609,
											"end": 29614,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29606,
											"end": 29621,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 29603,
											"end": 29644,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "716"
										},
										{
											"begin": 29603,
											"end": 29644,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 29624,
											"end": 29642,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "717"
										},
										{
											"begin": 29624,
											"end": 29642,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 29624,
											"end": 29642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29624,
											"end": 29642,
											"name": "tag",
											"source": 20,
											"value": "717"
										},
										{
											"begin": 29624,
											"end": 29642,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29603,
											"end": 29644,
											"name": "tag",
											"source": 20,
											"value": "716"
										},
										{
											"begin": 29603,
											"end": 29644,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29671,
											"end": 29672,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 29664,
											"end": 29669,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29660,
											"end": 29673,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 29653,
											"end": 29673,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29653,
											"end": 29673,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29508,
											"end": 29679,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29508,
											"end": 29679,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29508,
											"end": 29679,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29508,
											"end": 29679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29685,
											"end": 29867,
											"name": "tag",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 29685,
											"end": 29867,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29825,
											"end": 29859,
											"name": "PUSH",
											"source": 20,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 29821,
											"end": 29822,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29813,
											"end": 29819,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29809,
											"end": 29823,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 29802,
											"end": 29860,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 29685,
											"end": 29867,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29685,
											"end": 29867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29873,
											"end": 30239,
											"name": "tag",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 29873,
											"end": 30239,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30015,
											"end": 30018,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30036,
											"end": 30103,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "720"
										},
										{
											"begin": 30100,
											"end": 30102,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 30095,
											"end": 30098,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 30036,
											"end": 30103,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 30036,
											"end": 30103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30036,
											"end": 30103,
											"name": "tag",
											"source": 20,
											"value": "720"
										},
										{
											"begin": 30036,
											"end": 30103,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30029,
											"end": 30103,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30029,
											"end": 30103,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30112,
											"end": 30205,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "721"
										},
										{
											"begin": 30201,
											"end": 30204,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30112,
											"end": 30205,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 30112,
											"end": 30205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30112,
											"end": 30205,
											"name": "tag",
											"source": 20,
											"value": "721"
										},
										{
											"begin": 30112,
											"end": 30205,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30230,
											"end": 30232,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 30225,
											"end": 30228,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30221,
											"end": 30233,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30214,
											"end": 30233,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30214,
											"end": 30233,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29873,
											"end": 30239,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29873,
											"end": 30239,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29873,
											"end": 30239,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29873,
											"end": 30239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30245,
											"end": 30664,
											"name": "tag",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 30245,
											"end": 30664,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30411,
											"end": 30415,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30449,
											"end": 30451,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 30438,
											"end": 30447,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30434,
											"end": 30452,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30426,
											"end": 30452,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30426,
											"end": 30452,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30498,
											"end": 30507,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 30492,
											"end": 30496,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 30488,
											"end": 30508,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 30484,
											"end": 30485,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30473,
											"end": 30482,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 30469,
											"end": 30486,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30462,
											"end": 30509,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 30526,
											"end": 30657,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "723"
										},
										{
											"begin": 30652,
											"end": 30656,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 30526,
											"end": 30657,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 30526,
											"end": 30657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30526,
											"end": 30657,
											"name": "tag",
											"source": 20,
											"value": "723"
										},
										{
											"begin": 30526,
											"end": 30657,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30518,
											"end": 30657,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30518,
											"end": 30657,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30245,
											"end": 30664,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30245,
											"end": 30664,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30245,
											"end": 30664,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30245,
											"end": 30664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30670,
											"end": 30768,
											"name": "tag",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 30670,
											"end": 30768,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30721,
											"end": 30727,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30755,
											"end": 30760,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 30749,
											"end": 30761,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 30739,
											"end": 30761,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30739,
											"end": 30761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30670,
											"end": 30768,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30670,
											"end": 30768,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30670,
											"end": 30768,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30670,
											"end": 30768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30774,
											"end": 30921,
											"name": "tag",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 30774,
											"end": 30921,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30875,
											"end": 30886,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30912,
											"end": 30915,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 30897,
											"end": 30915,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30897,
											"end": 30915,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30774,
											"end": 30921,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 30774,
											"end": 30921,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30774,
											"end": 30921,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30774,
											"end": 30921,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30774,
											"end": 30921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30927,
											"end": 31313,
											"name": "tag",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 30927,
											"end": 31313,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31031,
											"end": 31034,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 31059,
											"end": 31097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "727"
										},
										{
											"begin": 31091,
											"end": 31096,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 31059,
											"end": 31097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 31059,
											"end": 31097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31059,
											"end": 31097,
											"name": "tag",
											"source": 20,
											"value": "727"
										},
										{
											"begin": 31059,
											"end": 31097,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31113,
											"end": 31201,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "728"
										},
										{
											"begin": 31194,
											"end": 31200,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 31189,
											"end": 31192,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 31113,
											"end": 31201,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 31113,
											"end": 31201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31113,
											"end": 31201,
											"name": "tag",
											"source": 20,
											"value": "728"
										},
										{
											"begin": 31113,
											"end": 31201,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31106,
											"end": 31201,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 31106,
											"end": 31201,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31210,
											"end": 31275,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "729"
										},
										{
											"begin": 31268,
											"end": 31274,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 31263,
											"end": 31266,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 31256,
											"end": 31260,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 31249,
											"end": 31254,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 31245,
											"end": 31261,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 31210,
											"end": 31275,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 31210,
											"end": 31275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31210,
											"end": 31275,
											"name": "tag",
											"source": 20,
											"value": "729"
										},
										{
											"begin": 31210,
											"end": 31275,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31300,
											"end": 31306,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 31295,
											"end": 31298,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 31291,
											"end": 31307,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 31284,
											"end": 31307,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 31284,
											"end": 31307,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31035,
											"end": 31313,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30927,
											"end": 31313,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 30927,
											"end": 31313,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30927,
											"end": 31313,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30927,
											"end": 31313,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30927,
											"end": 31313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31319,
											"end": 31590,
											"name": "tag",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 31319,
											"end": 31590,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31449,
											"end": 31452,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 31471,
											"end": 31564,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "731"
										},
										{
											"begin": 31560,
											"end": 31563,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 31551,
											"end": 31557,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 31471,
											"end": 31564,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 31471,
											"end": 31564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31471,
											"end": 31564,
											"name": "tag",
											"source": 20,
											"value": "731"
										},
										{
											"begin": 31471,
											"end": 31564,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31464,
											"end": 31564,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 31464,
											"end": 31564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31581,
											"end": 31584,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 31574,
											"end": 31584,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 31574,
											"end": 31584,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31319,
											"end": 31590,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 31319,
											"end": 31590,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 31319,
											"end": 31590,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31319,
											"end": 31590,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31319,
											"end": 31590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31596,
											"end": 31775,
											"name": "tag",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 31596,
											"end": 31775,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31736,
											"end": 31767,
											"name": "PUSH",
											"source": 20,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 31732,
											"end": 31733,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 31724,
											"end": 31730,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 31720,
											"end": 31734,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 31713,
											"end": 31768,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 31596,
											"end": 31775,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31596,
											"end": 31775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31781,
											"end": 32147,
											"name": "tag",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 31781,
											"end": 32147,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31923,
											"end": 31926,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 31944,
											"end": 32011,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "734"
										},
										{
											"begin": 32008,
											"end": 32010,
											"name": "PUSH",
											"source": 20,
											"value": "1D"
										},
										{
											"begin": 32003,
											"end": 32006,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 31944,
											"end": 32011,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 31944,
											"end": 32011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31944,
											"end": 32011,
											"name": "tag",
											"source": 20,
											"value": "734"
										},
										{
											"begin": 31944,
											"end": 32011,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31937,
											"end": 32011,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 31937,
											"end": 32011,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 32020,
											"end": 32113,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "735"
										},
										{
											"begin": 32109,
											"end": 32112,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 32020,
											"end": 32113,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 32020,
											"end": 32113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 32020,
											"end": 32113,
											"name": "tag",
											"source": 20,
											"value": "735"
										},
										{
											"begin": 32020,
											"end": 32113,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 32138,
											"end": 32140,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 32133,
											"end": 32136,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 32129,
											"end": 32141,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 32122,
											"end": 32141,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 32122,
											"end": 32141,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31781,
											"end": 32147,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 31781,
											"end": 32147,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 31781,
											"end": 32147,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31781,
											"end": 32147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 32153,
											"end": 32572,
											"name": "tag",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 32153,
											"end": 32572,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 32319,
											"end": 32323,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 32357,
											"end": 32359,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 32346,
											"end": 32355,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 32342,
											"end": 32360,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 32334,
											"end": 32360,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 32334,
											"end": 32360,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 32406,
											"end": 32415,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 32400,
											"end": 32404,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 32396,
											"end": 32416,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 32392,
											"end": 32393,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 32381,
											"end": 32390,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 32377,
											"end": 32394,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 32370,
											"end": 32417,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 32434,
											"end": 32565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "737"
										},
										{
											"begin": 32560,
											"end": 32564,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 32434,
											"end": 32565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 32434,
											"end": 32565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 32434,
											"end": 32565,
											"name": "tag",
											"source": 20,
											"value": "737"
										},
										{
											"begin": 32434,
											"end": 32565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 32426,
											"end": 32565,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 32426,
											"end": 32565,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 32153,
											"end": 32572,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 32153,
											"end": 32572,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 32153,
											"end": 32572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 32153,
											"end": 32572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/GameVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"claimReward()": "b88a802f",
							"claimRewardAdminList(address[])": "542e37cc",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address)": "485cc955",
							"playerBalance()": "651f066a",
							"playerBalanceAdmin(address)": "bb6ceb4f",
							"playersReward((address,uint256)[])": "f396d899",
							"proxiableUUID()": "52d1902d",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ChallengeReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ClaimReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_playerSet\",\"type\":\"address[]\"}],\"name\":\"claimRewardAdminList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tether\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"playerBalanceAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct GameVault.PlayerInfo[]\",\"name\":\"_playerSet\",\"type\":\"tuple[]\"}],\"name\":\"playersReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameVault.sol\":\"GameVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/GameVault.sol\":{\"keccak256\":\"0x8ee5b354d0bd2d49bd12a9aa6fa211097d3f1d8dc1af7438abfcb7cbe8d5bd56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4d659f893d859e321eb821d72c4ed985a20d4aec891054d9853391c282516d\",\"dweb:/ipfs/QmR3XMfUjUGxbFj2jp4yx4CY8ZC8spcKTnav4roqfkygw1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 780,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 783,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 762,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1077,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1939,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2322,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 39,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "_roles",
								"offset": 0,
								"slot": "201",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
							},
							{
								"astId": 334,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "__gap",
								"offset": 0,
								"slot": "202",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3325,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "tether",
								"offset": 0,
								"slot": "251",
								"type": "t_contract(IERC20Upgradeable)1156"
							},
							{
								"astId": 3339,
								"contract": "contracts/GameVault.sol:GameVault",
								"label": "playersBalance",
								"offset": 0,
								"slot": "252",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20Upgradeable)1156": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)34_storage"
							},
							"t_struct(RoleData)34_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 31,
										"contract": "contracts/GameVault.sol:GameVault",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 33,
										"contract": "contracts/GameVault.sol:GameVault",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							335
						],
						"AddressUpgradeable": [
							1898
						],
						"ContextUpgradeable": [
							1940
						],
						"ERC165Upgradeable": [
							2323
						],
						"IAccessControlUpgradeable": [
							408
						],
						"IERC165Upgradeable": [
							2335
						],
						"Initializable": [
							942
						],
						"MathUpgradeable": [
							3201
						],
						"SignedMathUpgradeable": [
							3306
						],
						"StringsUpgradeable": [
							2279
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
							"file": "./IAccessControlUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 409,
							"src": "133:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 1941,
							"src": "175:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../utils/StringsUpgradeable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 2280,
							"src": "217:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 2324,
							"src": "259:54:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 943,
							"src": "314:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "Initializable",
										"nameLocations": [
											"2065:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "2065:13:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "2065:13:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2080:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1940,
										"src": "2080:18:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "2080:18:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControlUpgradeable",
										"nameLocations": [
											"2100:25:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "2100:25:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2100:25:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2127:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2323,
										"src": "2127:17:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2127:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 7,
								"nodeType": "StructuredDocumentation",
								"src": "358:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								2323,
								2335,
								408,
								1940,
								942
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2037:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "2209:7:0",
										"statements": []
									},
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 18,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 17,
												"name": "onlyInitializing",
												"nameLocations": [
													"2192:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "2192:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2192:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "2160:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2209:0:0"
									},
									"scope": 335,
									"src": "2151:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "2290:7:0",
										"statements": []
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 24,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 23,
												"name": "onlyInitializing",
												"nameLocations": [
													"2273:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "2273:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2273:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "2231:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2261:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:0:0"
									},
									"scope": 335,
									"src": "2222:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 34,
									"members": [
										{
											"constant": false,
											"id": 31,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2353:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 34,
											"src": "2328:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 30,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2328:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 33,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2378:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 34,
											"src": "2370:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 32,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2370:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2309:8:0",
									"nodeType": "StructDefinition",
									"scope": 335,
									"src": "2302:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2437:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "2400:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 35,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2408:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2400:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 36,
												"name": "RoleData",
												"nameLocations": [
													"2419:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 34,
												"src": "2419:8:0"
											},
											"referencedDeclaration": 34,
											"src": "2419:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$34_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 42,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2474:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "2450:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 40,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2450:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2495:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2918:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2939:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 47,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															146
														],
														"referencedDeclaration": 107,
														"src": "2928:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2928:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2928:16:0"
											},
											{
												"id": 51,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2506:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 53,
									"name": "onlyRole",
									"nameLocation": "2895:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:14:0"
									},
									"src": "2886:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2317
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "3120:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 62,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3137:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 64,
																		"name": "IAccessControlUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "3157:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$408_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$408_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	],
																	"id": 63,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3152:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3152:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$408",
																	"typeString": "type(contract IAccessControlUpgradeable)"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3184:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3152:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3137:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "3223:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3199:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$335_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3205:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2317,
															"src": "3199:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3199:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3137:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 73,
												"nodeType": "Return",
												"src": "3130:105:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2968:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3038:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3096:8:0"
									},
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3063:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3056:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 55,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:20:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3114:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3114:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:6:0"
									},
									"scope": 335,
									"src": "3029:213:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3421:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 86,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "3438:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 88,
															"indexExpression": {
																"id": 87,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "3445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3438:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$34_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3451:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "3438:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 91,
													"indexExpression": {
														"id": 90,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "3459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3438:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 85,
												"id": 92,
												"nodeType": "Return",
												"src": "3431:36:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "3248:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3338:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 82,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3397:8:0"
									},
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3354:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3346:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 77,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3368:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3360:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3345:31:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3415:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:6:0"
									},
									"scope": 335,
									"src": "3329:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "3824:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "3845:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 102,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "3851:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3851:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															146
														],
														"referencedDeclaration": 146,
														"src": "3834:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3834:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "3834:30:0"
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3480:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3777:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3796:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3788:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3787:14:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3824:0:0"
									},
									"scope": 335,
									"src": "3768:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4225:428:0",
										"statements": [
											{
												"condition": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4239:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 116,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "4248:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 117,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "4254:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 115,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4240:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 144,
												"nodeType": "IfStatement",
												"src": "4235:412:0",
												"trueBody": {
													"id": 143,
													"nodeType": "Block",
													"src": "4264:383:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 125,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4372:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 128,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 112,
																								"src": "4454:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 126,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2279,
																								"src": "4423:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$2279_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 127,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4442:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2253,
																							"src": "4423:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 129,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4423:39:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 130,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4488:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 135,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 110,
																										"src": "4572:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 134,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4564:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 133,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4564:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 136,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4564:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 137,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4579:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 131,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2279,
																								"src": "4533:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$2279_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 132,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4552:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2233,
																							"src": "4533:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 138,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4533:49:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 123,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4330:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4334:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4330:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4330:274:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4302:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 121,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4302:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4302:320:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 120,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4278:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4278:358:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "4278:358:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3877:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4161:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4180:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4172:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4194:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4186:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:31:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:0:0"
									},
									"scope": 335,
									"src": "4152:501:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "4917:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 155,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "4934:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 157,
														"indexExpression": {
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4941:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4934:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$34_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4947:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 33,
													"src": "4934:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 154,
												"id": 159,
												"nodeType": "Return",
												"src": "4927:29:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4659:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4843:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4890:8:0"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4864:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:14:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4907:9:0"
									},
									"scope": 335,
									"src": "4834:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5362:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5383:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 177,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 175,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "5372:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5372:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "5372:25:0"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "4969:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 171,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5355:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 170,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "5342:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 173,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 169,
												"name": "onlyRole",
												"nameLocations": [
													"5333:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "5333:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5333:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5268:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5324:8:0"
									},
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5286:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5300:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5292:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:31:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5362:0:0"
									},
									"scope": 335,
									"src": "5259:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										399
									],
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "5788:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 196,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "5810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 197,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "5816:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 195,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "5798:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5798:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "5798:26:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5410:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 191,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "5781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 190,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "5768:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5768:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 189,
												"name": "onlyRole",
												"nameLocations": [
													"5759:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "5759:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5759:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5693:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5750:8:0"
									},
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5712:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "5704:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 183,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "5718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5788:0:0"
									},
									"scope": 335,
									"src": "5684:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										407
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "6445:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "6463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 212,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1925,
																	"src": "6474:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6474:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6463:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6488:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6455:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "6455:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 220,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "6567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 218,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "6549:26:0"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "5837:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6377:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 208,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6436:8:0"
									},
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6398:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "6390:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 203,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6412:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "6404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6389:31:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6445:0:0"
									},
									"scope": 335,
									"src": "6368:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "7335:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "7356:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 234,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 232,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "7345:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7345:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "7345:25:0"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "6588:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7276:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7295:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "7287:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 226,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7309:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "7301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7286:31:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7335:0:0"
									},
									"scope": 335,
									"src": "7267:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "7575:174:0",
										"statements": [
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7593:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "7585:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7585:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "7626:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "7613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7585:46:0"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 252,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "7641:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 254,
															"indexExpression": {
																"id": 253,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "7648:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7641:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$34_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7654:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 33,
														"src": "7641:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "7666:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7641:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "7641:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 260,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "7707:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 261,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7713:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 262,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7732:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 259,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "7690:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7690:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "EmitStatement",
												"src": "7685:57:0"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "7383:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7511:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7533:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "7525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7547:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "7539:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7524:33:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7575:0:0"
									},
									"scope": 335,
									"src": "7502:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7985:165:0",
										"statements": [
											{
												"condition": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7999:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 275,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "8008:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 276,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "8014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 274,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "8000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8000:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 296,
												"nodeType": "IfStatement",
												"src": "7995:149:0",
												"trueBody": {
													"id": 295,
													"nodeType": "Block",
													"src": "8024:120:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 279,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 39,
																				"src": "8038:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"id": 280,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 269,
																				"src": "8045:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8038:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$34_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8051:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 31,
																		"src": "8038:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"id": 283,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "8059:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8038:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8070:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8038:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "8038:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 289,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "8105:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "8111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 291,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "8120:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8120:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 288,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "8093:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8093:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 294,
															"nodeType": "EmitStatement",
															"src": "8088:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "7755:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7926:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7945:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7937:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7959:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7951:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7936:31:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7985:0:0"
									},
									"scope": 335,
									"src": "7917:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "8390:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 307,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8412:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 308,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "8418:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "8404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8404:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 327,
												"nodeType": "IfStatement",
												"src": "8400:149:0",
												"trueBody": {
													"id": 326,
													"nodeType": "Block",
													"src": "8428:121:0",
													"statements": [
														{
															"expression": {
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 310,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 39,
																				"src": "8442:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 312,
																			"indexExpression": {
																				"id": 311,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 301,
																				"src": "8449:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8442:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$34_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8455:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 31,
																		"src": "8442:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 315,
																	"indexExpression": {
																		"id": 314,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "8463:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8442:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8474:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8442:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 318,
															"nodeType": "ExpressionStatement",
															"src": "8442:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 320,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "8510:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 321,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "8516:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 322,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "8525:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8525:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 319,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "8498:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8498:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "EmitStatement",
															"src": "8493:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "8156:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8330:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8342:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 300,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8341:31:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:0"
									},
									"scope": 335,
									"src": "8321:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "8561:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 334,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "8840:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "8820:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 331,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8820:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 333,
										"length": {
											"hexValue": "3439",
											"id": 332,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8828:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "8820:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 336,
							"src": "2019:6829:0",
							"usedErrors": [],
							"usedEvents": [
								347,
								356,
								365,
								788
							]
						}
					],
					"src": "108:8741:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
					"exportedSymbols": {
						"IAccessControlUpgradeable": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 408,
							"linearizedBaseContracts": [
								408
							],
							"name": "IAccessControlUpgradeable",
							"nameLocation": "219:25:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "251:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 347,
									"name": "RoleAdminChanged",
									"nameLocation": "554:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "587:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "571:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 340,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "609:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "593:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "644:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "628:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:87:1"
									},
									"src": "548:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "664:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 356,
									"name": "RoleGranted",
									"nameLocation": "887:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "915:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "899:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 349,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "921:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "946:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:71:1"
									},
									"src": "881:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "976:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 365,
									"name": "RoleRevoked",
									"nameLocation": "1262:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1290:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1274:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 358,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1296:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1337:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1321:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:71:1"
									},
									"src": "1256:89:1"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1351:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1441:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1471:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1463:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 408,
									"src": "1432:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1515:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1713:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1734:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1726:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:14:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1763:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:9:1"
									},
									"scope": 408,
									"src": "1704:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1778:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2031:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2049:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2041:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2063:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2055:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:1"
									},
									"scope": 408,
									"src": "2022:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "2087:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2324:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2335:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 393,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:31:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:1"
									},
									"scope": 408,
									"src": "2315:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2381:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2875:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2910:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2902:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:31:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:1"
									},
									"scope": 408,
									"src": "2866:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 409,
							"src": "209:2721:1",
							"usedErrors": [],
							"usedEvents": [
								347,
								356,
								365
							]
						}
					],
					"src": "94:2837:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							429
						]
					},
					"id": 430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 411,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:2",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 429,
							"linearizedBaseContracts": [
								429
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "276:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "302:68:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 416,
									"name": "Upgraded",
									"nameLocation": "381:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "406:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "390:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:32:2"
									},
									"src": "375:47:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "428:67:2",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 423,
									"name": "AdminChanged",
									"nameLocation": "506:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "527:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "519:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:41:2"
									},
									"src": "500:60:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "566:59:2",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 428,
									"name": "BeaconUpgraded",
									"nameLocation": "636:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "667:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "651:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:24:2"
									},
									"src": "630:45:2"
								}
							],
							"scope": 430,
							"src": "266:411:2",
							"usedErrors": [],
							"usedEvents": [
								416,
								423,
								428
							]
						}
					],
					"src": "107:571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							439
						]
					},
					"id": 440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 432,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:3",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:3",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:3"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 435,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:3"
									},
									"scope": 439,
									"src": "830:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 440,
							"src": "342:547:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:777:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1898
						],
						"ERC1967UpgradeUpgradeable": [
							763
						],
						"IBeaconUpgradeable": [
							773
						],
						"IERC1822ProxiableUpgradeable": [
							439
						],
						"IERC1967Upgradeable": [
							429
						],
						"Initializable": [
							942
						],
						"StorageSlotUpgradeable": [
							2050
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 774,
							"src": "141:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 430,
							"src": "184:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 440,
							"src": "235:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 445,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 1899,
							"src": "292:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 2051,
							"src": "337:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 943,
							"src": "386:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 449,
										"name": "Initializable",
										"nameLocations": [
											"656:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "656:13:4"
									},
									"id": 450,
									"nodeType": "InheritanceSpecifier",
									"src": "656:13:4"
								},
								{
									"baseName": {
										"id": 451,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"671:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 429,
										"src": "671:19:4"
									},
									"id": 452,
									"nodeType": "InheritanceSpecifier",
									"src": "671:19:4"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 448,
								"nodeType": "StructuredDocumentation",
								"src": "424:184:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763,
								429,
								942
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "627:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "756:7:4",
										"statements": []
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 455,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 454,
												"name": "onlyInitializing",
												"nameLocations": [
													"739:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "739:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "739:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "706:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:4"
									},
									"scope": 763,
									"src": "697:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "838:7:4",
										"statements": []
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 461,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 460,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "821:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "778:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:4"
									},
									"scope": 763,
									"src": "769:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 467,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "954:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "929:108:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 465,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "929:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 466,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "971:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "1044:214:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 471,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1289:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "1263:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 469,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1263:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 470,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1312:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "1519:89:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 479,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "1574:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 477,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "1536:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2050_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1559:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "1536:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1946_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1536:59:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1596:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1945,
													"src": "1536:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 476,
												"id": 482,
												"nodeType": "Return",
												"src": "1529:72:4"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1385:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1466:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:2:4"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1510:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:9:4"
									},
									"scope": 763,
									"src": "1457:151:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "1762:218:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 493,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "1810:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 491,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "1780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1898_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1799:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1586,
																"src": "1780:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1780:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1830:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1772:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "1772:106:4"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 501,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "1926:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "1888:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2050_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1911:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1972,
																"src": "1888:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1946_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1888:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1948:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1945,
														"src": "1888:65:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1956:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1888:85:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "1888:85:4"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "1614:80:4",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1708:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1735:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1727:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:27:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:0:4"
									},
									"scope": 763,
									"src": "1699:281:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "2142:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "2171:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 514,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2152:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "2152:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 519,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "2213:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 518,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2204:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "EmitStatement",
												"src": "2199:32:4"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "1986:95:4",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2095:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2114:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2106:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:27:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2142:0:4"
									},
									"scope": 763,
									"src": "2086:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "2470:178:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 534,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2491:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 533,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2480:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "2480:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 537,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "2523:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2528:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2523:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2537:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2523:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 541,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "2542:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2523:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "2519:123:4",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "2553:89:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 546,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 526,
																		"src": "2607:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "2626:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 543,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "2567:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1898_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2586:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1785,
																	"src": "2567:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2567:64:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "2567:64:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2244:123:4",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2381:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2407:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2399:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2439:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2426:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2426:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2450:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2445:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:62:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:4"
									},
									"scope": 763,
									"src": "2372:276:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2922:842:4",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 565,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "3274:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 563,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "3236:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2050_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3259:14:4",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1983,
															"src": "3236:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1949_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3236:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1949_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3290:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1948,
													"src": "3236:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 603,
													"nodeType": "Block",
													"src": "3365:393:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 588,
																		"nodeType": "Block",
																		"src": "3470:115:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 584,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 582,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 579,
																								"src": "3496:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 583,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 471,
																								"src": "3504:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3496:28:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 585,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3526:43:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 581,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3488:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 586,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3488:82:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 587,
																				"nodeType": "ExpressionStatement",
																				"src": "3488:82:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 589,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 580,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 579,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3464:4:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 589,
																				"src": "3456:12:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 578,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3456:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3455:14:4"
																	},
																	"src": "3447:138:4"
																},
																{
																	"block": {
																		"id": 594,
																		"nodeType": "Block",
																		"src": "3592:89:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 591,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3617:48:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 590,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3610:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3610:56:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 593,
																				"nodeType": "ExpressionStatement",
																				"src": "3610:56:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 595,
																	"nodeType": "TryCatchClause",
																	"src": "3586:95:4"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 574,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "3412:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 573,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "3383:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$439_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3383:47:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$439",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3431:13:4",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 438,
																	"src": "3383:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3383:63:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 596,
															"nodeType": "TryStatement",
															"src": "3379:302:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 598,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "3712:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 599,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "3731:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 600,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "3737:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 597,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "3694:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3694:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 602,
															"nodeType": "ExpressionStatement",
															"src": "3694:53:4"
														}
													]
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "3232:526:4",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "3297:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 569,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "3330:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 568,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "3311:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3311:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "3311:37:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "2654:161:4",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2829:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2859:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2851:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2851:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2891:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2878:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2878:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2902:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2897:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2897:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2850:62:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2922:0:4"
									},
									"scope": 763,
									"src": "2820:944:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3770:189:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 610,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3990:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "3964:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 608,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3964:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 609,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4004:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4185:80:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 618,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "4240:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 616,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "4202:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2050_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4225:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "4202:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1946_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4202:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4253:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1945,
													"src": "4202:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 615,
												"id": 621,
												"nodeType": "Return",
												"src": "4195:63:4"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "4077:50:4",
										"text": " @dev Returns the current admin."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4141:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4150:2:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4176:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:9:4"
									},
									"scope": 763,
									"src": "4132:133:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "4392:167:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "4410:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4430:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4422:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4422:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4422:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4410:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4434:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4402:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4402:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "4402:73:4"
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 642,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "4523:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 639,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "4485:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2050_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4508:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1972,
																"src": "4485:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1946_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4485:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4536:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1945,
														"src": "4485:56:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 645,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "4544:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4485:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "4485:67:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4271:71:4",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4356:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4374:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4366:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:18:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4392:0:4"
									},
									"scope": 763,
									"src": "4347:212:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "4719:86:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 656,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "4747:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4747:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "4760:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 655,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4734:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4734:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "EmitStatement",
												"src": "4729:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "4789:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 661,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "4779:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "4779:19:4"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "4565:100:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4679:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4700:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4692:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:18:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4719:0:4"
									},
									"scope": 763,
									"src": "4670:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "4811:232:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 670,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5074:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "5048:107:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 668,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5048:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 669,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5089:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "5272:81:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 678,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "5327:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 676,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "5289:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2050_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5312:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "5289:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1946_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5289:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5341:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1945,
													"src": "5289:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 675,
												"id": 681,
												"nodeType": "Return",
												"src": "5282:64:4"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "5162:51:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5227:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5237:2:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5263:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5262:9:4"
									},
									"scope": 763,
									"src": "5218:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "5482:368:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 692,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "5530:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 690,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "5500:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1898_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5519:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1586,
																"src": "5500:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5500:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5542:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5492:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "5492:90:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 701,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "5662:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 700,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "5643:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$773_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5643:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$773",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5673:14:4",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 772,
																		"src": "5643:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5643:46:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 698,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "5613:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1898_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5632:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1586,
																"src": "5613:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5613:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5704:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5592:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:172:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "5592:172:4"
											},
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 712,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5812:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 709,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "5774:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2050_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5797:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1972,
																"src": "5774:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1946_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5774:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1945,
														"src": "5774:57:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 715,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "5834:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5774:69:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "5774:69:4"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "5359:71:4",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5444:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5463:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "5455:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:19:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5482:0:4"
									},
									"scope": 763,
									"src": "5435:415:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "6249:239:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "6270:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 729,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "6259:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6259:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "6259:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 734,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "6310:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 733,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "6295:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6295:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "EmitStatement",
												"src": "6290:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 737,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "6334:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6339:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6334:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6348:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6334:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 741,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "6353:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6334:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 755,
												"nodeType": "IfStatement",
												"src": "6330:152:4",
												"trueBody": {
													"id": 754,
													"nodeType": "Block",
													"src": "6364:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 747,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 722,
																						"src": "6437:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 746,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "6418:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$773_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6418:29:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$773",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6448:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 772,
																			"src": "6418:44:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6418:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 751,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6466:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 743,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "6378:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1898_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6397:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1785,
																	"src": "6378:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6378:93:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 753,
															"nodeType": "ExpressionStatement",
															"src": "6378:93:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "5856:292:4",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6162:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6194:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "6186:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6218:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "6205:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6229:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "6224:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6224:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:54:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6249:0:4"
									},
									"scope": 763,
									"src": "6153:335:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "6494:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 762,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "6773:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "6753:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 759,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6753:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 761,
										"length": {
											"hexValue": "3530",
											"id": 760,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6761:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "6753:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 764,
							"src": "609:6172:4",
							"usedErrors": [],
							"usedEvents": [
								416,
								423,
								428,
								788
							]
						}
					],
					"src": "116:6666:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							773
						]
					},
					"id": 774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 766,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 773,
							"linearizedBaseContracts": [
								773
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:5"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:5"
									},
									"scope": 773,
									"src": "400:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 774,
							"src": "198:262:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:368:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1898
						],
						"Initializable": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 775,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 943,
							"sourceUnit": 1899,
							"src": "138:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 777,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:6",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "Initializable",
							"nameLocation": "2412:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:6",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 780,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 942,
									"src": "2546:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 779,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:6",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 783,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 942,
									"src": "2675:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 782,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:6",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 788,
									"name": "Initialized",
									"nameLocation": "2809:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2821:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 785,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:6"
									},
									"src": "2803:33:6"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "3269:483:6",
										"statements": [
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "3279:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 791,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:6",
													"subExpression": {
														"id": 793,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "3302:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 797,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "3347:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 798,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "3365:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 802,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:6",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 807,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$942",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$942",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 806,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 805,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 808,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 803,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1898,
																						"src": "3388:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1898_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:6",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1586,
																					"src": "3388:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 811,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "3436:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 815,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:6"
											},
											{
												"expression": {
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3536:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:6"
											},
											{
												"condition": {
													"id": 824,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "3566:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "3562:65:6",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "3582:45:6",
													"statements": [
														{
															"expression": {
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 825,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "3596:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 828,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:6"
														}
													]
												}
											},
											{
												"id": 831,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:6"
											},
											{
												"condition": {
													"id": 832,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "3651:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "3647:99:6",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "3667:79:6",
													"statements": [
														{
															"expression": {
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 833,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "3681:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 836,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 837,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "3721:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 840,
															"nodeType": "EmitStatement",
															"src": "3716:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:6",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 844,
									"name": "initializer",
									"nameLocation": "3255:11:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:6"
									},
									"src": "3246:506:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "4863:255:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:6",
																"subExpression": {
																	"id": 850,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "4882:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "4899:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 853,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "4914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:6"
											},
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "4982:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 860,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "4997:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:6"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5014:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:6"
											},
											{
												"id": 867,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:6"
											},
											{
												"expression": {
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 868,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5055:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 873,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "5103:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 872,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "5091:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "EmitStatement",
												"src": "5086:25:6"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:6",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 877,
									"name": "reinitializer",
									"nameLocation": "4834:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "4848:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 846,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:6"
									},
									"src": "4825:293:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "5356:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5374:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:6"
											},
											{
												"id": 885,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:6"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:6",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 887,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:6"
									},
									"src": "5328:125:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "5988:231:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:6",
															"subExpression": {
																"id": 892,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "6007:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "6078:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 899,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 898,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "6074:139:6",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "6111:102:6",
													"statements": [
														{
															"expression": {
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 904,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "6125:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 906,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 905,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 911,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 915,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 914,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 913,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:6",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 912,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "6174:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "6169:33:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:6",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:6"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:6"
									},
									"scope": 942,
									"src": "5939:280:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "6393:36:6",
										"statements": [
											{
												"expression": {
													"id": 929,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 780,
													"src": "6410:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "6403:19:6"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:6",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:6"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "6386:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 926,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:6"
									},
									"scope": 942,
									"src": "6329:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "6601:37:6",
										"statements": [
											{
												"expression": {
													"id": 938,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 783,
													"src": "6618:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 937,
												"id": 939,
												"nodeType": "Return",
												"src": "6611:20:6"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:6",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:6"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "6595:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:6"
									},
									"scope": 942,
									"src": "6545:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 943,
							"src": "2394:4246:6",
							"usedErrors": [],
							"usedEvents": [
								788
							]
						}
					],
					"src": "113:6528:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1898
						],
						"ERC1967UpgradeUpgradeable": [
							763
						],
						"IBeaconUpgradeable": [
							773
						],
						"IERC1822ProxiableUpgradeable": [
							439
						],
						"IERC1967Upgradeable": [
							429
						],
						"Initializable": [
							942
						],
						"StorageSlotUpgradeable": [
							2050
						],
						"UUPSUpgradeable": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1079,
							"sourceUnit": 440,
							"src": "140:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1079,
							"sourceUnit": 764,
							"src": "197:50:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1079,
							"sourceUnit": 943,
							"src": "248:29:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 949,
										"name": "Initializable",
										"nameLocations": [
											"965:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "965:13:7"
									},
									"id": 950,
									"nodeType": "InheritanceSpecifier",
									"src": "965:13:7"
								},
								{
									"baseName": {
										"id": 951,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"980:28:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 439,
										"src": "980:28:7"
									},
									"id": 952,
									"nodeType": "InheritanceSpecifier",
									"src": "980:28:7"
								},
								{
									"baseName": {
										"id": 953,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1010:25:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "1010:25:7"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "1010:25:7"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 948,
								"nodeType": "StructuredDocumentation",
								"src": "279:648:7",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078,
								763,
								429,
								439,
								942
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "946:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "1102:7:7",
										"statements": []
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 957,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 956,
												"name": "onlyInitializing",
												"nameLocations": [
													"1085:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "1085:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "1051:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:2:7"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:7"
									},
									"scope": 1078,
									"src": "1042:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "1185:7:7",
										"statements": []
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 963,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 962,
												"name": "onlyInitializing",
												"nameLocations": [
													"1168:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "1168:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1168:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "1124:32:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:7"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:0:7"
									},
									"scope": 1078,
									"src": "1115:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "1197:87:7",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 973,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1315:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "1289:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 968,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 971,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1332:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1078",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1078",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 970,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1324:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 969,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1324:7:7",
												"typeDescriptions": {}
											}
										},
										"id": 972,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1324:13:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "1863:205:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 979,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1889:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1078",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1078",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 977,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1881:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1881:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 981,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1898:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1881:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "1873:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 987,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "1971:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1971:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 989,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1995:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1971:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "1963:87:7"
											},
											{
												"id": 994,
												"nodeType": "PlaceholderStatement",
												"src": "2060:1:7"
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "1344:493:7",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 996,
									"name": "onlyProxy",
									"nameLocation": "1851:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:7"
									},
									"src": "1842:226:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "2298:120:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1002,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2324:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1078",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1078",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2316:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2316:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1004,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "2333:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:92:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "2308:92:7"
											},
											{
												"id": 1009,
												"nodeType": "PlaceholderStatement",
												"src": "2410:1:7"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "2074:195:7",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 1011,
									"name": "notDelegated",
									"nameLocation": "2283:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:2:7"
									},
									"src": "2274:144:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										438
									],
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "3093:44:7",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "3110:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1021,
												"nodeType": "Return",
												"src": "3103:27:7"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "2424:577:7",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1015,
												"name": "notDelegated",
												"nameLocations": [
													"3062:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "3062:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:12:7"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3015:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1014,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3053:8:7"
									},
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:7"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3084:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1017,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:9:7"
									},
									"scope": 1078,
									"src": "3006:131:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "3458:124:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1032,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "3486:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1031,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "3468:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3468:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "3468:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "3536:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3565:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3555:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1037,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3559:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3555:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3569:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1035,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3514:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3514:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "3514:61:7"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "3143:239:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "3659cfe6",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1029,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1028,
												"name": "onlyProxy",
												"nameLocations": [
													"3448:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 996,
												"src": "3448:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3448:9:7"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3396:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3414:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3406:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:27:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3458:0:7"
									},
									"scope": 1078,
									"src": "3387:195:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "4006:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "4034:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1055,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "4016:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4016:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "4016:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "4084:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "4103:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1059,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "4062:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "4062:52:7"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "3588:308:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1053,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1052,
												"name": "onlyProxy",
												"nameLocations": [
													"3996:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 996,
												"src": "3996:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3996:9:7"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3910:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3935:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3927:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3967:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3954:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3954:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:46:7"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4006:0:7"
									},
									"scope": 1078,
									"src": "3901:220:7",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "4127:397:7",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4538:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4564:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4556:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:27:7"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4599:0:7"
									},
									"scope": 1078,
									"src": "4529:71:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "4606:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1077,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4885:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "4865:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1074,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4865:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1076,
										"length": {
											"hexValue": "3530",
											"id": 1075,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4873:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4865:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1079,
							"src": "928:3965:7",
							"usedErrors": [],
							"usedEvents": [
								416,
								423,
								428,
								788
							]
						}
					],
					"src": "115:4779:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1156
						]
					},
					"id": 1157,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1081,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1156,
							"linearizedBaseContracts": [
								1156
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1090,
									"name": "Transfer",
									"nameLocation": "405:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "414:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "436:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "456:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:8"
									},
									"src": "399:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1099,
									"name": "Approval",
									"nameLocation": "636:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "645:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "668:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:8"
									},
									"src": "630:78:8"
								},
								{
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:8"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "831:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:8"
									},
									"scope": 1156,
									"src": "785:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "942:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:8"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "982:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:8"
									},
									"scope": 1156,
									"src": "923:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1234:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:8"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:8"
									},
									"scope": 1156,
									"src": "1204:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1568:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1583:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:8"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1623:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:8"
									},
									"scope": 1156,
									"src": "1549:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2302:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2319:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:8"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2353:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:8"
									},
									"scope": 1156,
									"src": "2285:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2679:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2693:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2705:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:8"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2739:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:8"
									},
									"scope": 1156,
									"src": "2657:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1157,
							"src": "202:2545:8",
							"usedErrors": [],
							"usedEvents": [
								1090,
								1099
							]
						}
					],
					"src": "106:2642:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
					"exportedSymbols": {
						"IERC20PermitUpgradeable": [
							1192
						]
					},
					"id": 1193,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1158,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20PermitUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1159,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:9",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1192,
							"linearizedBaseContracts": [
								1192
							],
							"name": "IERC20PermitUpgradeable",
							"nameLocation": "639:23:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "669:792:9",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1475:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1499:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1491:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1522:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1514:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1547:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1539:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1570:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1562:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1594:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1588:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1169,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1613:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1605:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1632:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1624:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:158:9"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1648:0:9"
									},
									"scope": 1192,
									"src": "1466:183:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "1655:294:9",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1963:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1978:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "1970:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:15:9"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2008:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:9:9"
									},
									"scope": 1192,
									"src": "1954:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "2023:128:9",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2218:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2234:2:9"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2260:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:9:9"
									},
									"scope": 1192,
									"src": "2209:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1193,
							"src": "629:1642:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:2149:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1898
						],
						"IERC20PermitUpgradeable": [
							1192
						],
						"IERC20Upgradeable": [
							1156
						],
						"SafeERC20Upgradeable": [
							1568
						]
					},
					"id": 1569,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1194,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 1195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1569,
							"sourceUnit": 1157,
							"src": "140:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
							"file": "../extensions/IERC20PermitUpgradeable.sol",
							"id": 1196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1569,
							"sourceUnit": 1193,
							"src": "175:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 1197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1569,
							"sourceUnit": 1899,
							"src": "227:47:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1198,
								"nodeType": "StructuredDocumentation",
								"src": "276:457:10",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1568,
							"linearizedBaseContracts": [
								1568
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "742:20:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1201,
									"libraryName": {
										"id": 1199,
										"name": "AddressUpgradeable",
										"nameLocations": [
											"775:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1898,
										"src": "775:18:10"
									},
									"nodeType": "UsingForDirective",
									"src": "769:37:10",
									"typeName": {
										"id": 1200,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "798:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "1079:103:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "1109:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1216,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1205,
																			"src": "1139:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1145:8:10",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1123,
																		"src": "1139:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1154:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1139:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1219,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "1164:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "1168:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1214,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1116:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1120:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1116:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1116:58:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1212,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "1089:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:86:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1089:86:10"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "812:179:10",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1005:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1036:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1018:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1203,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1018:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "1018:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "1018:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1051:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1043:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1063:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1055:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:52:10"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:0:10"
									},
									"scope": 1568,
									"src": "996:186:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "1522:113:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "1552:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "1582:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1588:12:10",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1155,
																		"src": "1582:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1601:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1582:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1245,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "1611:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1246,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "1617:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1247,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "1621:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1559:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1563:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1559:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1559:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "1532:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1532:96:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "1532:96:10"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "1188:228:10",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1430:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1465:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "1447:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1227,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1447:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "1447:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "1447:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1480:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "1472:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1494:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "1486:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "1498:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:66:10"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1522:0:10"
									},
									"scope": 1568,
									"src": "1421:214:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "1982:497:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1264,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "2231:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2240:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2231:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2230:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1272,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2271:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1568",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1568",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 1271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2263:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1270,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2263:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2263:13:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1274,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1258,
																					"src": "2278:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1268,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "2247:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2253:9:10",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1133,
																				"src": "2247:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2247:39:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2290:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2247:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1278,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2246:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2230:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2209:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:163:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "2209:163:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "2402:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1287,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "2432:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2438:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1143,
																		"src": "2432:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2446:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2432:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1290,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "2456:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1291,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "2465:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1285,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2409:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2413:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2409:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:62:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1283,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "2382:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2382:90:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "2382:90:10"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "1641:249:10",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1904:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1934:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1916:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1916:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "1916:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "1916:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1949:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1941:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1966:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1958:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:57:10"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:10"
									},
									"scope": 1568,
									"src": "1895:584:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "2767:194:10",
										"statements": [
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2785:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1332,
														"src": "2777:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2777:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1313,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2824:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1568",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1568",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																],
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2816:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1311,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2816:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2816:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "2831:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1309,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "2800:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2806:9:10",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1133,
														"src": "2800:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2800:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2777:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "2869:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1322,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "2899:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2905:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1143,
																		"src": "2899:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2913:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2899:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1325,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "2923:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1326,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "2932:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1327,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "2947:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2932:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1320,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2876:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2880:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2876:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2876:77:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1318,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "2849:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:105:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "2849:105:10"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "2485:180:10",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2679:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2719:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2701:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1299,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1298,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"2701:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "2701:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "2701:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2734:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2726:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2751:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2743:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:57:10"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:10"
									},
									"scope": 1568,
									"src": "2670:291:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "3249:321:10",
										"statements": [
											{
												"id": 1376,
												"nodeType": "UncheckedBlock",
												"src": "3259:305:10",
												"statements": [
													{
														"assignments": [
															1345
														],
														"declarations": [
															{
																"constant": false,
																"id": 1345,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3291:12:10",
																"nodeType": "VariableDeclaration",
																"scope": 1376,
																"src": "3283:20:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1344,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3283:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1354,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1350,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3330:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1568",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1568",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3322:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1348,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3322:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3322:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1352,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "3337:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1346,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "3306:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3312:9:10",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1133,
																"src": "3306:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3306:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3283:62:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1356,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "3367:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1357,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "3383:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3367:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3390:43:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1355,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3359:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3359:75:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1361,
														"nodeType": "ExpressionStatement",
														"src": "3359:75:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1363,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "3468:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1366,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "3498:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3504:7:10",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1143,
																				"src": "3498:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3512:8:10",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3498:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1369,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "3522:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1370,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1345,
																				"src": "3531:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1371,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1341,
																				"src": "3546:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3531:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1364,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3475:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3479:18:10",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3475:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3475:77:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1362,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "3448:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3448:105:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1375,
														"nodeType": "ExpressionStatement",
														"src": "3448:105:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "2967:180:10",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3161:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3201:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3183:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1335,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3183:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "3183:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "3183:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3216:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3208:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3233:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3225:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:57:10"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:10"
									},
									"scope": 1568,
									"src": "3152:418:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "3977:333:10",
										"statements": [
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4000:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "3987:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1389,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3987:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1399,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1393,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "4038:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4044:7:10",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1143,
																"src": "4038:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4052:8:10",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4038:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1396,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "4062:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4071:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1391,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4015:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4019:18:10",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4015:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4015:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3987:90:10"
											},
											{
												"condition": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4092:45:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1401,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "4117:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															{
																"id": 1402,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "4124:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																	"typeString": "contract IERC20Upgradeable"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1400,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "4093:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20Upgradeable,bytes memory) returns (bool)"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4093:44:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "4088:216:10",
												"trueBody": {
													"id": 1422,
													"nodeType": "Block",
													"src": "4139:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1406,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "4173:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 1409,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1382,
																						"src": "4203:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																							"typeString": "contract IERC20Upgradeable"
																						}
																					},
																					"id": 1410,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4209:7:10",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1143,
																					"src": "4203:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 1411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4217:8:10",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4203:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 1412,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1384,
																				"src": "4227:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 1413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4236:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 1407,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4180:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4184:18:10",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4180:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4180:58:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1405,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "4153:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4153:86:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1416,
															"nodeType": "ExpressionStatement",
															"src": "4153:86:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1418,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "4273:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"id": 1419,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "4280:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1417,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "4253:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1156_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4253:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1421,
															"nodeType": "ExpressionStatement",
															"src": "4253:40:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "3576:308:10",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3898:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3929:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "3911:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3911:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "3911:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "3911:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3944:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "3936:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3961:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "3953:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3910:57:10"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3977:0:10"
									},
									"scope": 1568,
									"src": "3889:421:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "4688:257:10",
										"statements": [
											{
												"assignments": [
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4706:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "4698:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4698:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1452,
												"initialValue": {
													"arguments": [
														{
															"id": 1450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "4733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1448,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "4720:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1192",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4726:6:10",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "4720:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4698:41:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "4762:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "4769:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "4778:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1459,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "4785:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1460,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "4795:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1461,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "4798:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1462,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "4801:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "4749:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1192",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4755:6:10",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1177,
														"src": "4749:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4749:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "4749:54:10"
											},
											{
												"assignments": [
													1466
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4821:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "4813:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4813:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1471,
												"initialValue": {
													"arguments": [
														{
															"id": 1469,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "4847:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1467,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "4834:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1192",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4840:6:10",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "4834:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4813:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1473,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "4871:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1474,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "4885:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4899:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4885:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4871:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4902:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4863:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "4863:75:10"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "4316:141:10",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4471:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4515:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4491:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1192",
													"typeString": "contract IERC20PermitUpgradeable"
												},
												"typeName": {
													"id": 1428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1427,
														"name": "IERC20PermitUpgradeable",
														"nameLocations": [
															"4491:23:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1192,
														"src": "4491:23:10"
													},
													"referencedDeclaration": 1192,
													"src": "4491:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1192",
														"typeString": "contract IERC20PermitUpgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4538:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4530:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4561:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4553:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4586:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4578:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4609:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4601:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4633:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4627:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1438,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4627:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4644:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4671:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "4663:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1442,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:197:10"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4688:0:10"
									},
									"scope": 1568,
									"src": "4462:483:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "5409:572:10",
										"statements": [
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5771:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "5758:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5758:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"arguments": [
														{
															"id": 1498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5812:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5818:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1495,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "5792:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5784:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5784:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5799:12:10",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1658,
														"src": "5784:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5784:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:95:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1503,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "5871:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5882:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5871:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5892:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5871:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1509,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "5908:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 1511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5921:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 1510,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5921:4:10",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1512,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5920:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 1507,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5897:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5901:6:10",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5897:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5897:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5871:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 1502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5863:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5863:111:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "5863:111:10"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "4951:372:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5337:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5375:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "5357:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1485,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1484,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"5357:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "5357:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "5357:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5395:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "5382:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5382:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:44:10"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5409:0:10"
									},
									"scope": 1568,
									"src": "5328:653:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "6582:516:10",
										"statements": [
											{
												"assignments": [
													1531,
													1533
												],
												"declarations": [
													{
														"constant": false,
														"id": 1531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6883:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "6878:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6878:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6905:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "6892:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6892:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1541,
												"initialValue": {
													"arguments": [
														{
															"id": 1539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "6939:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1536,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "6927:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6919:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1534,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6919:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6919:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6934:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6919:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6877:67:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1542,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "6973:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1543,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1533,
																				"src": "6985:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6996:6:10",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6985:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7006:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6985:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1549,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1533,
																				"src": "7022:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7035:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1550,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "7035:4:10",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1552,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7034:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1547,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "7011:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7015:6:10",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "7011:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7011:30:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6985:56:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1555,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6984:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6973:69:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1561,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "7084:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	],
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7076:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1559,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7076:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7076:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1557,
																"name": "AddressUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "7046:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1898_$",
																	"typeString": "type(library AddressUpgradeable)"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7065:10:10",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1586,
															"src": "7046:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7046:45:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6973:118:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1565,
												"nodeType": "Return",
												"src": "6954:137:10"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "5987:490:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6491:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6533:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6515:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1521,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"6515:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "6515:17:10"
													},
													"referencedDeclaration": 1156,
													"src": "6515:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6553:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6540:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6540:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:44:10"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6576:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:6:10"
									},
									"scope": 1568,
									"src": "6482:616:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1569,
							"src": "734:6366:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6986:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1898
						]
					},
					"id": 1899,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1570,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1571,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1898,
							"linearizedBaseContracts": [
								1898
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "1489:254:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1579,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "1713:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1578,
												"id": 1584,
												"nodeType": "Return",
												"src": "1706:30:11"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:11",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1443:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:11"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1483:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:11"
									},
									"scope": 1898,
									"src": "1423:320:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "2729:241:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1597,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1898",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1898",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1595,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1600,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "2772:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:11"
											},
											{
												"assignments": [
													1606,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "2824:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1605,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1613,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1607,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1589,
																"src": "2842:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1609,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "2864:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1615,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2893:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:11"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "2677:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "2704:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:11"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:11"
									},
									"scope": 1898,
									"src": "2658:312:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "3801:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1631,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "3840:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1632,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "3848:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1630,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1678,
															1722
														],
														"referencedDeclaration": 1722,
														"src": "3818:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1636,
												"nodeType": "Return",
												"src": "3811:79:11"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "3734:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "3750:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:11"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "3787:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:11"
									},
									"scope": 1898,
									"src": "3712:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "4266:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1651,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "4305:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "4313:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1654,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "4322:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1650,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1678,
															1722
														],
														"referencedDeclaration": 1722,
														"src": "4283:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1649,
												"id": 1656,
												"nodeType": "Return",
												"src": "4276:59:11"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4150:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4174:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4201:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:11"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4252:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:11"
									},
									"scope": 1898,
									"src": "4119:223:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "4817:111:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1671,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "4856:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1672,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "4864:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1673,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "4870:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1670,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1678,
															1722
														],
														"referencedDeclaration": 1722,
														"src": "4834:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1676,
												"nodeType": "Return",
												"src": "4827:94:11"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4735:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4751:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4770:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:11"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4803:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:11"
									},
									"scope": 1898,
									"src": "4704:224:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "5355:267:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1695,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1898",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1898",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1693,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1698,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "5398:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:11"
											},
											{
												"assignments": [
													1704,
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "5457:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1703,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "5471:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1705,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1713,
												"initialValue": {
													"arguments": [
														{
															"id": 1711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "5524:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1707,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "5498:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "5517:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1715,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "5573:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1716,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "5581:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1717,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "5590:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1718,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "5602:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1714,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "5546:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1691,
												"id": 1720,
												"nodeType": "Return",
												"src": "5539:76:11"
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:11",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5216:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5240:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5267:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5290:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1686,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:11"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5341:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:11"
									},
									"scope": 1898,
									"src": "5176:446:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "5899:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1733,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "5935:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1734,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "5943:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1732,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1739,
															1768
														],
														"referencedDeclaration": 1768,
														"src": "5916:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1737,
												"nodeType": "Return",
												"src": "5909:80:11"
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5827:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5843:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:11"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5885:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:11"
									},
									"scope": 1898,
									"src": "5799:197:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "6338:168:11",
										"statements": [
											{
												"assignments": [
													1752,
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "6349:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1751,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "6363:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1753,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"arguments": [
														{
															"id": 1757,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "6408:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1755,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "6390:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1761,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "6457:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1762,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "6465:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1763,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "6474:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1764,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "6486:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1760,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "6430:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1766,
												"nodeType": "Return",
												"src": "6423:76:11"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6217:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6241:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6268:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:11"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6324:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:11"
									},
									"scope": 1898,
									"src": "6180:326:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "6782:101:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "6820:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "6828:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1778,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1785,
															1814
														],
														"referencedDeclaration": 1814,
														"src": "6799:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1777,
												"id": 1783,
												"nodeType": "Return",
												"src": "6792:84:11"
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6715:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6731:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:11"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6768:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:11"
									},
									"scope": 1898,
									"src": "6685:198:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "7224:170:11",
										"statements": [
											{
												"assignments": [
													1798,
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1813,
														"src": "7235:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1797,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1813,
														"src": "7249:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1805,
												"initialValue": {
													"arguments": [
														{
															"id": 1803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "7296:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1801,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "7276:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1807,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "7345:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1808,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "7353:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1809,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "7362:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1810,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "7374:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1806,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "7318:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1812,
												"nodeType": "Return",
												"src": "7311:76:11"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "7108:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "7132:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "7159:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:11"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "7210:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:11"
									},
									"scope": 1898,
									"src": "7069:325:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "7876:434:11",
										"statements": [
											{
												"condition": {
													"id": 1828,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1819,
													"src": "7890:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1850,
													"nodeType": "Block",
													"src": "8246:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1846,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "8268:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1847,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "8280:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1845,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "8260:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:11"
														}
													]
												},
												"id": 1851,
												"nodeType": "IfStatement",
												"src": "7886:418:11",
												"trueBody": {
													"id": 1844,
													"nodeType": "Block",
													"src": "7899:341:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1829,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "7917:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:11",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1841,
															"nodeType": "IfStatement",
															"src": "7913:286:11",
															"trueBody": {
																"id": 1840,
																"nodeType": "Block",
																"src": "7941:258:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1835,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1817,
																							"src": "8143:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1834,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1586,
																						"src": "8132:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1836,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1837,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1833,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1839,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1842,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "8219:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1827,
															"id": 1843,
															"nodeType": "Return",
															"src": "8212:17:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7727:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7751:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7773:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7806:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1822,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:11"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7862:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:11"
									},
									"scope": 1898,
									"src": "7682:628:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "8691:135:11",
										"statements": [
											{
												"condition": {
													"id": 1865,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1856,
													"src": "8705:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "8762:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1870,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "8784:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1871,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "8796:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1869,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "8776:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1873,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:11"
														}
													]
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "8701:119:11",
												"trueBody": {
													"id": 1868,
													"nodeType": "Block",
													"src": "8714:42:11",
													"statements": [
														{
															"expression": {
																"id": 1866,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1858,
																"src": "8735:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1864,
															"id": 1867,
															"nodeType": "Return",
															"src": "8728:17:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:11",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "8566:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "8588:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "8621:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:11"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "8677:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:11"
									},
									"scope": 1898,
									"src": "8531:295:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "8915:457:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1884,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "8991:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1894,
													"nodeType": "Block",
													"src": "9321:45:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1891,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "9342:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1890,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1893,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:11"
														}
													]
												},
												"id": 1895,
												"nodeType": "IfStatement",
												"src": "8987:379:11",
												"trueBody": {
													"id": 1889,
													"nodeType": "Block",
													"src": "9014:301:11",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:11",
																"nodeType": "YulBlock",
																"src": "9172:133:11",
																"statements": [
																	{
																		"nativeSrc": "9190:40:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:11"
																			},
																			"nativeSrc": "9213:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:11",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:11",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:11"
																					},
																					"nativeSrc": "9254:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:11"
																			},
																			"nativeSrc": "9247:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:11"
																		},
																		"nativeSrc": "9247:44:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:11"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1879,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1879,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:11",
																	"valueSize": 1
																}
															],
															"id": 1888,
															"nodeType": "InlineAssembly",
															"src": "9163:142:11"
														}
													]
												}
											}
										]
									},
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "8849:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1878,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "8874:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:11"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:11"
									},
									"scope": 1898,
									"src": "8832:540:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1899,
							"src": "194:9180:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1898
						],
						"ContextUpgradeable": [
							1940
						],
						"Initializable": [
							942
						]
					},
					"id": 1941,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1900,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1941,
							"sourceUnit": 943,
							"src": "110:42:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1903,
										"name": "Initializable",
										"nameLocations": [
											"691:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "691:13:12"
									},
									"id": 1904,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:12"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1902,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1940,
							"linearizedBaseContracts": [
								1940,
								942
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "763:7:12",
										"statements": []
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1906,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "746:16:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:12"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:12"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:12"
									},
									"scope": 1940,
									"src": "711:59:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "838:7:12",
										"statements": []
									},
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1913,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1912,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "821:16:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:12"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:12"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:12"
									},
									"scope": 1940,
									"src": "776:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "912:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1921,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1920,
												"id": 1923,
												"nodeType": "Return",
												"src": "922:17:12"
											}
										]
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:12"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "903:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:12"
									},
									"scope": 1940,
									"src": "850:96:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "1019:32:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1930,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1929,
												"id": 1932,
												"nodeType": "Return",
												"src": "1029:15:12"
											}
										]
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:12"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "1003:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:12"
									},
									"scope": 1940,
									"src": "952:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:12",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1939,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1940,
									"src": "1316:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1936,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1938,
										"length": {
											"hexValue": "3530",
											"id": 1937,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1941,
							"src": "651:693:12",
							"usedErrors": [],
							"usedEvents": [
								788
							]
						}
					],
					"src": "86:1259:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							2050
						]
					},
					"id": 2051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1942,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1943,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:13",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 2050,
							"linearizedBaseContracts": [
								2050
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1428:22:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1946,
									"members": [
										{
											"constant": false,
											"id": 1945,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1494:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1946,
											"src": "1486:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1944,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1486:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1464:11:13",
									"nodeType": "StructDefinition",
									"scope": 2050,
									"src": "1457:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1949,
									"members": [
										{
											"constant": false,
											"id": 1948,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1546:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1949,
											"src": "1541:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1947,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1541:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1519:11:13",
									"nodeType": "StructDefinition",
									"scope": 2050,
									"src": "1512:46:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1952,
									"members": [
										{
											"constant": false,
											"id": 1951,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1601:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1952,
											"src": "1593:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1950,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1593:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1571:11:13",
									"nodeType": "StructDefinition",
									"scope": 2050,
									"src": "1564:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1955,
									"members": [
										{
											"constant": false,
											"id": 1954,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1656:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "1648:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1648:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1626:11:13",
									"nodeType": "StructDefinition",
									"scope": 2050,
									"src": "1619:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.StringSlot",
									"id": 1958,
									"members": [
										{
											"constant": false,
											"id": 1957,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1709:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "1702:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1956,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1702:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1681:10:13",
									"nodeType": "StructDefinition",
									"scope": 2050,
									"src": "1674:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BytesSlot",
									"id": 1961,
									"members": [
										{
											"constant": false,
											"id": 1960,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1760:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1961,
											"src": "1754:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1959,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1754:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1734:9:13",
									"nodeType": "StructDefinition",
									"scope": 2050,
									"src": "1727:45:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "1954:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2016:38:13",
													"nodeType": "YulBlock",
													"src": "2016:38:13",
													"statements": [
														{
															"nativeSrc": "2030:14:13",
															"nodeType": "YulAssignment",
															"src": "2030:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2040:4:13",
																"nodeType": "YulIdentifier",
																"src": "2040:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2030:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1968,
														"isOffset": false,
														"isSlot": true,
														"src": "2030:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1964,
														"isOffset": false,
														"isSlot": false,
														"src": "2040:4:13",
														"valueSize": 1
													}
												],
												"id": 1970,
												"nodeType": "InlineAssembly",
												"src": "2007:47:13"
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "1778:87:13",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1879:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1902:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "1894:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1963,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:14:13"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1951:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "1931:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1966,
														"name": "AddressSlot",
														"nameLocations": [
															"1931:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "1931:11:13"
													},
													"referencedDeclaration": 1946,
													"src": "1931:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1946_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:23:13"
									},
									"scope": 2050,
									"src": "1870:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "2242:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2304:38:13",
													"nodeType": "YulBlock",
													"src": "2304:38:13",
													"statements": [
														{
															"nativeSrc": "2318:14:13",
															"nodeType": "YulAssignment",
															"src": "2318:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2328:4:13",
																"nodeType": "YulIdentifier",
																"src": "2328:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2318:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1979,
														"isOffset": false,
														"isSlot": true,
														"src": "2318:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": false,
														"src": "2328:4:13",
														"valueSize": 1
													}
												],
												"id": 1981,
												"nodeType": "InlineAssembly",
												"src": "2295:47:13"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "2066:87:13",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2167:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2190:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2182:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:14:13"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2239:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2219:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1949_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1977,
														"name": "BooleanSlot",
														"nameLocations": [
															"2219:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1949,
														"src": "2219:11:13"
													},
													"referencedDeclaration": 1949,
													"src": "2219:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1949_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:23:13"
									},
									"scope": 2050,
									"src": "2158:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "2530:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2592:38:13",
													"nodeType": "YulBlock",
													"src": "2592:38:13",
													"statements": [
														{
															"nativeSrc": "2606:14:13",
															"nodeType": "YulAssignment",
															"src": "2606:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2616:4:13",
																"nodeType": "YulIdentifier",
																"src": "2616:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2606:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1990,
														"isOffset": false,
														"isSlot": true,
														"src": "2606:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1986,
														"isOffset": false,
														"isSlot": false,
														"src": "2616:4:13",
														"valueSize": 1
													}
												],
												"id": 1992,
												"nodeType": "InlineAssembly",
												"src": "2583:47:13"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "2354:87:13",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2455:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2478:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "2470:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1985,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:14:13"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2527:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "2507:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1952_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 1989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1988,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2507:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1952,
														"src": "2507:11:13"
													},
													"referencedDeclaration": 1952,
													"src": "2507:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1952_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:23:13"
									},
									"scope": 2050,
									"src": "2446:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "2818:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2880:38:13",
													"nodeType": "YulBlock",
													"src": "2880:38:13",
													"statements": [
														{
															"nativeSrc": "2894:14:13",
															"nodeType": "YulAssignment",
															"src": "2894:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2904:4:13",
																"nodeType": "YulIdentifier",
																"src": "2904:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2894:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2001,
														"isOffset": false,
														"isSlot": true,
														"src": "2894:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1997,
														"isOffset": false,
														"isSlot": false,
														"src": "2904:4:13",
														"valueSize": 1
													}
												],
												"id": 2003,
												"nodeType": "InlineAssembly",
												"src": "2871:47:13"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "2642:87:13",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2743:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2766:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2758:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:14:13"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2815:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2795:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1955_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 2000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1999,
														"name": "Uint256Slot",
														"nameLocations": [
															"2795:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1955,
														"src": "2795:11:13"
													},
													"referencedDeclaration": 1955,
													"src": "2795:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1955_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:23:13"
									},
									"scope": 2050,
									"src": "2734:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "3103:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3165:38:13",
													"nodeType": "YulBlock",
													"src": "3165:38:13",
													"statements": [
														{
															"nativeSrc": "3179:14:13",
															"nodeType": "YulAssignment",
															"src": "3179:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3189:4:13",
																"nodeType": "YulIdentifier",
																"src": "3189:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3179:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2012,
														"isOffset": false,
														"isSlot": true,
														"src": "3179:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2008,
														"isOffset": false,
														"isSlot": false,
														"src": "3189:4:13",
														"valueSize": 1
													}
												],
												"id": 2014,
												"nodeType": "InlineAssembly",
												"src": "3156:47:13"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "2930:86:13",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3030:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3052:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "3044:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2007,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:14:13"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3100:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "3081:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1958_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 2011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2010,
														"name": "StringSlot",
														"nameLocations": [
															"3081:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "3081:10:13"
													},
													"referencedDeclaration": 1958,
													"src": "3081:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1958_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:22:13"
									},
									"scope": 2050,
									"src": "3021:188:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "3411:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3473:44:13",
													"nodeType": "YulBlock",
													"src": "3473:44:13",
													"statements": [
														{
															"nativeSrc": "3487:20:13",
															"nodeType": "YulAssignment",
															"src": "3487:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3497:10:13",
																"nodeType": "YulIdentifier",
																"src": "3497:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3487:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2023,
														"isOffset": false,
														"isSlot": true,
														"src": "3487:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2019,
														"isOffset": false,
														"isSlot": true,
														"src": "3497:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2025,
												"nodeType": "InlineAssembly",
												"src": "3464:53:13"
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "3215:101:13",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3330:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3359:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "3344:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2018,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3344:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:22:13"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3408:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "3389:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1958_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 2022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2021,
														"name": "StringSlot",
														"nameLocations": [
															"3389:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "3389:10:13"
													},
													"referencedDeclaration": 1958,
													"src": "3389:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1958_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:22:13"
									},
									"scope": 2050,
									"src": "3321:202:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "3699:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3761:38:13",
													"nodeType": "YulBlock",
													"src": "3761:38:13",
													"statements": [
														{
															"nativeSrc": "3775:14:13",
															"nodeType": "YulAssignment",
															"src": "3775:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3785:4:13",
																"nodeType": "YulIdentifier",
																"src": "3785:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3775:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2034,
														"isOffset": false,
														"isSlot": true,
														"src": "3775:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2030,
														"isOffset": false,
														"isSlot": false,
														"src": "3785:4:13",
														"valueSize": 1
													}
												],
												"id": 2036,
												"nodeType": "InlineAssembly",
												"src": "3752:47:13"
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "3529:85:13",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3628:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3649:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "3641:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2029,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:14:13"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3696:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "3678:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1961_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 2033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2032,
														"name": "BytesSlot",
														"nameLocations": [
															"3678:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1961,
														"src": "3678:9:13"
													},
													"referencedDeclaration": 1961,
													"src": "3678:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1961_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:21:13"
									},
									"scope": 2050,
									"src": "3619:186:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "4002:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4064:44:13",
													"nodeType": "YulBlock",
													"src": "4064:44:13",
													"statements": [
														{
															"nativeSrc": "4078:20:13",
															"nodeType": "YulAssignment",
															"src": "4078:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4088:10:13",
																"nodeType": "YulIdentifier",
																"src": "4088:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4078:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2045,
														"isOffset": false,
														"isSlot": true,
														"src": "4078:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2041,
														"isOffset": false,
														"isSlot": true,
														"src": "4088:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2047,
												"nodeType": "InlineAssembly",
												"src": "4055:53:13"
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "3811:99:13",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3924:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3951:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3937:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3937:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:21:13"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3999:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3981:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1961_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 2044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2043,
														"name": "BytesSlot",
														"nameLocations": [
															"3981:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1961,
														"src": "3981:9:13"
													},
													"referencedDeclaration": 1961,
													"src": "3981:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1961_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:21:13"
									},
									"scope": 2050,
									"src": "3915:199:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2051,
							"src": "1420:2696:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3924:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3201
						],
						"SignedMathUpgradeable": [
							3306
						],
						"StringsUpgradeable": [
							2279
						]
					},
					"id": 2280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 2053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 3202,
							"src": "126:36:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
							"file": "./math/SignedMathUpgradeable.sol",
							"id": 2054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 3307,
							"src": "163:42:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2055,
								"nodeType": "StructuredDocumentation",
								"src": "207:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2279,
							"linearizedBaseContracts": [
								2279
							],
							"name": "StringsUpgradeable",
							"nameLocation": "250:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2058,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "300:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "275:54:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2056,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2057,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2061,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "358:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "335:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2059,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2060,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "551:636:14",
										"statements": [
											{
												"id": 2107,
												"nodeType": "UncheckedBlock",
												"src": "561:620:14",
												"statements": [
													{
														"assignments": [
															2070
														],
														"declarations": [
															{
																"constant": false,
																"id": 2070,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "593:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2107,
																"src": "585:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2069,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "585:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2077,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2073,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "624:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2071,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3201,
																		"src": "602:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3201_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "618:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3038,
																	"src": "602:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "602:28:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "585:49:14"
													},
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "662:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2107,
																"src": "648:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2078,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2084,
														"initialValue": {
															"arguments": [
																{
																	"id": 2082,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "682:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "671:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2080,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:41:14"
													},
													{
														"assignments": [
															2086
														],
														"declarations": [
															{
																"constant": false,
																"id": 2086,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "711:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 2107,
																"src": "703:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2085,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "703:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2087,
														"nodeType": "VariableDeclarationStatement",
														"src": "703:11:14"
													},
													{
														"AST": {
															"nativeSrc": "784:67:14",
															"nodeType": "YulBlock",
															"src": "784:67:14",
															"statements": [
																{
																	"nativeSrc": "802:35:14",
																	"nodeType": "YulAssignment",
																	"src": "802:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "813:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "825:2:14",
																						"nodeType": "YulLiteral",
																						"src": "825:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "829:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "821:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:14"
																				},
																				"nativeSrc": "821:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "821:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "809:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:14"
																		},
																		"nativeSrc": "809:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "809:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "802:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "813:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2070,
																"isOffset": false,
																"isSlot": false,
																"src": "829:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2086,
																"isOffset": false,
																"isSlot": false,
																"src": "802:3:14",
																"valueSize": 1
															}
														],
														"id": 2088,
														"nodeType": "InlineAssembly",
														"src": "775:76:14"
													},
													{
														"body": {
															"id": 2103,
															"nodeType": "Block",
															"src": "877:267:14",
															"statements": [
																{
																	"expression": {
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "895:5:14",
																		"subExpression": {
																			"id": 2090,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2086,
																			"src": "895:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2092,
																	"nodeType": "ExpressionStatement",
																	"src": "895:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "978:84:14",
																		"nodeType": "YulBlock",
																		"src": "978:84:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1008:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1008:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1022:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1022:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1029:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1029:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1018:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1018:3:14"
																									},
																									"nativeSrc": "1018:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1018:14:14"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "1034:8:14",
																									"nodeType": "YulIdentifier",
																									"src": "1034:8:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1013:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1013:4:14"
																							},
																							"nativeSrc": "1013:30:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1013:30:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1000:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1000:7:14"
																					},
																					"nativeSrc": "1000:44:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1000:44:14"
																				},
																				"nativeSrc": "1000:44:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1000:44:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2058,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1034:8:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2086,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1008:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2064,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1022:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 2093,
																	"nodeType": "InlineAssembly",
																	"src": "969:93:14"
																},
																{
																	"expression": {
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2094,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2064,
																			"src": "1079:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1088:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1079:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2097,
																	"nodeType": "ExpressionStatement",
																	"src": "1079:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2098,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2064,
																			"src": "1112:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1121:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1112:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2102,
																	"nodeType": "IfStatement",
																	"src": "1108:21:14",
																	"trueBody": {
																		"id": 2101,
																		"nodeType": "Break",
																		"src": "1124:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2104,
														"nodeType": "WhileStatement",
														"src": "864:280:14"
													},
													{
														"expression": {
															"id": 2105,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "1164:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2068,
														"id": 2106,
														"nodeType": "Return",
														"src": "1157:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "385:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "489:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "498:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:14"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "536:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:15:14"
									},
									"scope": 2279,
									"src": "480:707:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "1357:114:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2112,
																			"src": "1398:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:14",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2130,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2112,
																					"src": "1455:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 2128,
																					"name": "SignedMathUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3306,
																					"src": "1429:21:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMathUpgradeable_$3306_$",
																						"typeString": "type(library SignedMathUpgradeable)"
																					}
																				},
																				"id": 2129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1451:3:14",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3305,
																				"src": "1429:25:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:32:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2127,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2109,
																			2137
																		],
																		"referencedDeclaration": 2109,
																		"src": "1420:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:42:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2119,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:14",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:82:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2117,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:90:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2135,
												"nodeType": "Return",
												"src": "1367:97:14"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "1193:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1296:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1312:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1305:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2111,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:14:14"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1342:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2114,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:14"
									},
									"scope": 2279,
									"src": "1287:184:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "1650:111:14",
										"statements": [
											{
												"id": 2155,
												"nodeType": "UncheckedBlock",
												"src": "1660:95:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "1703:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2149,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2140,
																				"src": "1733:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2147,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3201,
																				"src": "1710:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3201_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1726:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3161,
																			"src": "1710:22:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1710:29:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1710:33:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2145,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2157,
																	2233,
																	2253
																],
																"referencedDeclaration": 2233,
																"src": "1691:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:53:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2144,
														"id": 2154,
														"nodeType": "Return",
														"src": "1684:60:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "1477:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1585:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1605:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "1597:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:15:14"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "1635:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1635:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:15:14"
									},
									"scope": 2279,
									"src": "1576:185:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "1974:347:14",
										"statements": [
											{
												"assignments": [
													2168
												],
												"declarations": [
													{
														"constant": false,
														"id": 2168,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1997:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2232,
														"src": "1984:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2167,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1984:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2177,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2016:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2172,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "2020:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2016:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2006:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2169,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2010:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:47:14"
											},
											{
												"expression": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2178,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "2041:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2180,
														"indexExpression": {
															"hexValue": "30",
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2053:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2041:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "2041:15:14"
											},
											{
												"expression": {
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2184,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "2066:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2186,
														"indexExpression": {
															"hexValue": "31",
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2066:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "2066:15:14"
											},
											{
												"body": {
													"id": 2218,
													"nodeType": "Block",
													"src": "2136:83:14",
													"statements": [
														{
															"expression": {
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2204,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "2150:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2206,
																	"indexExpression": {
																		"id": 2205,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2191,
																		"src": "2157:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2150:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2207,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2058,
																		"src": "2162:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2211,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2208,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "2171:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2179:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2171:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2162:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2150:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2213,
															"nodeType": "ExpressionStatement",
															"src": "2150:33:14"
														},
														{
															"expression": {
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2197:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2207:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2197:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2217,
															"nodeType": "ExpressionStatement",
															"src": "2197:11:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2198,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "2124:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2124:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2219,
												"initializationExpression": {
													"assignments": [
														2191
													],
													"declarations": [
														{
															"constant": false,
															"id": 2191,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2104:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2219,
															"src": "2096:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2190,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2096:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2197,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2193,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "2112:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2108:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2096:26:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2131:3:14",
														"subExpression": {
															"id": 2201,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "2133:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2203,
													"nodeType": "ExpressionStatement",
													"src": "2131:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2091:128:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2221,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "2236:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "2228:55:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2229,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "2307:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2300:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2227,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2300:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2166,
												"id": 2231,
												"nodeType": "Return",
												"src": "2293:21:14"
											}
										]
									},
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "1767:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1893:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "1905:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1928:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "1920:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:31:14"
									},
									"returnParameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "1959:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:14"
									},
									"scope": 2279,
									"src": "1884:437:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "2546:76:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2246,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2236,
																			"src": "2591:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2583:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2244,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2583:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2583:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2575:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2575:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2249,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "2599:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2241,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2157,
															2233,
															2253
														],
														"referencedDeclaration": 2233,
														"src": "2563:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2240,
												"id": 2251,
												"nodeType": "Return",
												"src": "2556:59:14"
											}
										]
									},
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "2327:141:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2482:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2502:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "2494:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:14:14"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "2531:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2531:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:14"
									},
									"scope": 2279,
									"src": "2473:149:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2277,
										"nodeType": "Block",
										"src": "2777:66:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2266,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "2810:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2804:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2264,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2804:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2263,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2794:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:19:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2272,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2258,
																		"src": "2833:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2827:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2270,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2827:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2269,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2817:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:19:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2794:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2262,
												"id": 2276,
												"nodeType": "Return",
												"src": "2787:49:14"
											}
										]
									},
									"documentation": {
										"id": 2254,
										"nodeType": "StructuredDocumentation",
										"src": "2628:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2708:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2728:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "2714:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2745:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "2731:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2731:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:34:14"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "2771:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:14"
									},
									"scope": 2279,
									"src": "2699:144:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2280,
							"src": "242:2603:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2745:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1898
						],
						"ERC165Upgradeable": [
							2323
						],
						"IERC165Upgradeable": [
							2335
						],
						"Initializable": [
							942
						]
					},
					"id": 2324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2281,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 2282,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 2336,
							"src": "124:34:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 2283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 943,
							"src": "159:45:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2285,
										"name": "Initializable",
										"nameLocations": [
											"822:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "822:13:15"
									},
									"id": 2286,
									"nodeType": "InheritanceSpecifier",
									"src": "822:13:15"
								},
								{
									"baseName": {
										"id": 2287,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"837:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2335,
										"src": "837:18:15"
									},
									"id": 2288,
									"nodeType": "InheritanceSpecifier",
									"src": "837:18:15"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2284,
								"nodeType": "StructuredDocumentation",
								"src": "206:576:15",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2323,
							"linearizedBaseContracts": [
								2323,
								2335,
								942
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "801:17:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "913:7:15",
										"statements": []
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2291,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2290,
												"name": "onlyInitializing",
												"nameLocations": [
													"896:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "896:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "896:16:15"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "871:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:15"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:15"
									},
									"scope": 2323,
									"src": "862:58:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "987:7:15",
										"statements": []
									},
									"id": 2300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2297,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2296,
												"name": "onlyInitializing",
												"nameLocations": [
													"970:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "970:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:16:15"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "935:23:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:15"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:15"
									},
									"scope": 2323,
									"src": "926:68:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2334
									],
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "1151:75:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2309,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "1168:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2311,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "1188:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2335_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2335_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 2310,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1183:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1183:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$2335",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1208:11:15",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1183:36:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1168:51:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2308,
												"id": 2315,
												"nodeType": "Return",
												"src": "1161:58:15"
											}
										]
									},
									"documentation": {
										"id": 2301,
										"nodeType": "StructuredDocumentation",
										"src": "999:56:15",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1069:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2305,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1127:8:15"
									},
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1094:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "1087:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2302,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:20:15"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "1145:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:15"
									},
									"scope": 2323,
									"src": "1060:166:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "1232:254:15",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 2322,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1511:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1491:25:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2319,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2321,
										"length": {
											"hexValue": "3530",
											"id": 2320,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1499:2:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1491:11:15",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2324,
							"src": "783:736:15",
							"usedErrors": [],
							"usedEvents": [
								788
							]
						}
					],
					"src": "99:1421:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							2335
						]
					},
					"id": 2336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2326,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:16",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2335,
							"linearizedBaseContracts": [
								2335
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "812:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2328,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:16"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "855:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:16"
									},
									"scope": 2335,
									"src": "785:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2336,
							"src": "405:458:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3201
						]
					},
					"id": 3202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2338,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:17",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3201,
							"linearizedBaseContracts": [
								3201
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 2342,
									"members": [
										{
											"id": 2339,
											"name": "Down",
											"nameLocation": "256:4:17",
											"nodeType": "EnumValue",
											"src": "256:4:17"
										},
										{
											"id": 2340,
											"name": "Up",
											"nameLocation": "298:2:17",
											"nodeType": "EnumValue",
											"src": "298:2:17"
										},
										{
											"id": 2341,
											"name": "Zero",
											"nameLocation": "329:4:17",
											"nodeType": "EnumValue",
											"src": "329:4:17"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:17",
									"nodeType": "EnumDefinition",
									"src": "232:122:17"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "491:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2352,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "508:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2353,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "512:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2356,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "520:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:17",
													"trueExpression": {
														"id": 2355,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2345,
														"src": "516:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2351,
												"id": 2358,
												"nodeType": "Return",
												"src": "501:20:17"
											}
										]
									},
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:17",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "437:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "448:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:17"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "482:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:17"
									},
									"scope": 3201,
									"src": "424:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "666:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2370,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "683:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2371,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "687:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2374,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "695:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:17",
													"trueExpression": {
														"id": 2373,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "691:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2376,
												"nodeType": "Return",
												"src": "676:20:17"
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:17",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "612:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "623:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:17"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "657:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:17"
									},
									"scope": 3201,
									"src": "599:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "887:82:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2388,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2381,
																	"src": "942:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2389,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "946:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2391,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2381,
																		"src": "952:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2393,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2383,
																		"src": "956:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2395,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2387,
												"id": 2399,
												"nodeType": "Return",
												"src": "934:28:17"
											}
										]
									},
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:17",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "833:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "844:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:17"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "878:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:17"
									},
									"scope": 3201,
									"src": "816:153:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "1239:123:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2411,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "1327:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2415,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2404,
																			"src": "1341:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2418,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2419,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "1350:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:17",
													"trueExpression": {
														"hexValue": "30",
														"id": 2414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2410,
												"id": 2424,
												"nodeType": "Return",
												"src": "1320:35:17"
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:17",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "1185:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "1196:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:17"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "1230:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:17"
									},
									"scope": 3201,
									"src": "1168:194:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "1776:4115:17",
										"statements": [
											{
												"id": 2547,
												"nodeType": "UncheckedBlock",
												"src": "1786:4099:17",
												"statements": [
													{
														"assignments": [
															2439
														],
														"declarations": [
															{
																"constant": false,
																"id": 2439,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2115:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2547,
																"src": "2107:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2438,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2107:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2440,
														"nodeType": "VariableDeclarationStatement",
														"src": "2107:13:17"
													},
													{
														"assignments": [
															2442
														],
														"declarations": [
															{
																"constant": false,
																"id": 2442,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2187:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2547,
																"src": "2179:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2441,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2443,
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:13:17"
													},
													{
														"AST": {
															"nativeSrc": "2259:157:17",
															"nodeType": "YulBlock",
															"src": "2259:157:17",
															"statements": [
																{
																	"nativeSrc": "2277:30:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2277:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2294:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2294:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2297:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2297:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2304:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2304:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2300:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:17"
																				},
																				"nativeSrc": "2300:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2300:6:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2287:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:17"
																		},
																		"nativeSrc": "2287:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:17"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2281:2:17",
																			"nodeType": "YulTypedName",
																			"src": "2281:2:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2324:18:17",
																	"nodeType": "YulAssignment",
																	"src": "2324:18:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2337:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2337:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2340:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2340:1:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2333:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:17"
																		},
																		"nativeSrc": "2333:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:9:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2324:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "2324:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "2359:43:17",
																	"nodeType": "YulAssignment",
																	"src": "2359:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2376:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2380:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2380:5:17"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2372:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:17"
																				},
																				"nativeSrc": "2372:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:14:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2391:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2391:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2395:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2395:5:17"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2388:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "2388:2:17"
																				},
																				"nativeSrc": "2388:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2388:13:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2368:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:17"
																		},
																		"nativeSrc": "2368:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2368:34:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2359:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "2359:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "2380:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "2395:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2442,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2429,
																"isOffset": false,
																"isSlot": false,
																"src": "2294:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2429,
																"isOffset": false,
																"isSlot": false,
																"src": "2337:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "2297:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "2340:1:17",
																"valueSize": 1
															}
														],
														"id": 2444,
														"nodeType": "InlineAssembly",
														"src": "2250:166:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2445,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "2497:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "2493:368:17",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "2509:352:17",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2448,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2439,
																			"src": "2827:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2449,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "2835:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2827:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2437,
																	"id": 2451,
																	"nodeType": "Return",
																	"src": "2820:26:17"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2455,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "2971:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2456,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2442,
																		"src": "2985:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2971:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 2454,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2963:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:53:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2460,
														"nodeType": "ExpressionStatement",
														"src": "2963:53:17"
													},
													{
														"assignments": [
															2462
														],
														"declarations": [
															{
																"constant": false,
																"id": 2462,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3280:9:17",
																"nodeType": "VariableDeclaration",
																"scope": 2547,
																"src": "3272:17:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2461,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2463,
														"nodeType": "VariableDeclarationStatement",
														"src": "3272:17:17"
													},
													{
														"AST": {
															"nativeSrc": "3312:291:17",
															"nodeType": "YulBlock",
															"src": "3312:291:17",
															"statements": [
																{
																	"nativeSrc": "3381:38:17",
																	"nodeType": "YulAssignment",
																	"src": "3381:38:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3401:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "3401:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3404:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:17"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3407:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "3407:11:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3394:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:17"
																		},
																		"nativeSrc": "3394:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:25:17"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3381:9:17",
																			"nodeType": "YulIdentifier",
																			"src": "3381:9:17"
																		}
																	]
																},
																{
																	"nativeSrc": "3501:41:17",
																	"nodeType": "YulAssignment",
																	"src": "3501:41:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3514:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3524:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3524:9:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3535:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3535:5:17"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3521:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:17"
																				},
																				"nativeSrc": "3521:20:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3521:20:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3510:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:17"
																		},
																		"nativeSrc": "3510:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:32:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3501:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3501:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "3559:30:17",
																	"nodeType": "YulAssignment",
																	"src": "3559:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3572:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:17"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3579:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3568:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:17"
																		},
																		"nativeSrc": "3568:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3568:21:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3559:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3559:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2433,
																"isOffset": false,
																"isSlot": false,
																"src": "3407:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "3535:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "3559:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "3572:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2442,
																"isOffset": false,
																"isSlot": false,
																"src": "3501:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2442,
																"isOffset": false,
																"isSlot": false,
																"src": "3514:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2462,
																"isOffset": false,
																"isSlot": false,
																"src": "3381:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2462,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2462,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2429,
																"isOffset": false,
																"isSlot": false,
																"src": "3401:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "3404:1:17",
																"valueSize": 1
															}
														],
														"id": 2464,
														"nodeType": "InlineAssembly",
														"src": "3303:300:17"
													},
													{
														"assignments": [
															2466
														],
														"declarations": [
															{
																"constant": false,
																"id": 2466,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3918:4:17",
																"nodeType": "VariableDeclaration",
																"scope": 2547,
																"src": "3910:12:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2465,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2474,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2467,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "3925:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3940:12:17",
																			"subExpression": {
																				"id": 2468,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "3941:11:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3955:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3940:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2472,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3939:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3910:47:17"
													},
													{
														"AST": {
															"nativeSrc": "3980:362:17",
															"nodeType": "YulBlock",
															"src": "3980:362:17",
															"statements": [
																{
																	"nativeSrc": "4045:37:17",
																	"nodeType": "YulAssignment",
																	"src": "4045:37:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4064:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "4064:11:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4077:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "4077:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4060:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:17"
																		},
																		"nativeSrc": "4060:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:22:17"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4045:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "4045:11:17"
																		}
																	]
																},
																{
																	"nativeSrc": "4149:25:17",
																	"nodeType": "YulAssignment",
																	"src": "4149:25:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4162:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4162:5:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4169:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4158:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:17"
																		},
																		"nativeSrc": "4158:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:16:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4149:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "4149:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "4289:39:17",
																	"nodeType": "YulAssignment",
																	"src": "4289:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4309:1:17",
																								"nodeType": "YulLiteral",
																								"src": "4309:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4312:4:17",
																								"nodeType": "YulIdentifier",
																								"src": "4312:4:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4305:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "4305:3:17"
																						},
																						"nativeSrc": "4305:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "4305:12:17"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4319:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "4319:4:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4301:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:17"
																				},
																				"nativeSrc": "4301:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4301:23:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:17"
																		},
																		"nativeSrc": "4297:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:31:17"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4289:4:17",
																			"nodeType": "YulIdentifier",
																			"src": "4289:4:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2433,
																"isOffset": false,
																"isSlot": false,
																"src": "4045:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2433,
																"isOffset": false,
																"isSlot": false,
																"src": "4064:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "4149:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2439,
																"isOffset": false,
																"isSlot": false,
																"src": "4162:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "4077:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "4169:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "4289:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "4312:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "4319:4:17",
																"valueSize": 1
															}
														],
														"id": 2475,
														"nodeType": "InlineAssembly",
														"src": "3971:371:17"
													},
													{
														"expression": {
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2476,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2439,
																"src": "4408:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2477,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "4417:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2478,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2466,
																	"src": "4425:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4417:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4408:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2481,
														"nodeType": "ExpressionStatement",
														"src": "4408:21:17"
													},
													{
														"assignments": [
															2483
														],
														"declarations": [
															{
																"constant": false,
																"id": 2483,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4755:7:17",
																"nodeType": "VariableDeclaration",
																"scope": 2547,
																"src": "4747:15:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2482,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4747:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2490,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4766:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2485,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "4770:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4766:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2487,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4765:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4785:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4765:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4747:39:17"
													},
													{
														"expression": {
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2491,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2483,
																"src": "5003:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2493,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "5018:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2494,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "5032:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5018:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5014:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5003:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2498,
														"nodeType": "ExpressionStatement",
														"src": "5003:36:17"
													},
													{
														"expression": {
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2499,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2483,
																"src": "5072:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2501,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "5087:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2502,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "5101:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5072:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2506,
														"nodeType": "ExpressionStatement",
														"src": "5072:36:17"
													},
													{
														"expression": {
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2507,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2483,
																"src": "5142:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5153:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2509,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "5157:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2510,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "5171:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5157:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5153:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5142:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2514,
														"nodeType": "ExpressionStatement",
														"src": "5142:36:17"
													},
													{
														"expression": {
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2515,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2483,
																"src": "5212:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5223:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2517,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "5227:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2518,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "5241:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5227:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5212:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2522,
														"nodeType": "ExpressionStatement",
														"src": "5212:36:17"
													},
													{
														"expression": {
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2523,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2483,
																"src": "5282:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2525,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "5297:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2526,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "5311:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5297:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5293:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5282:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2530,
														"nodeType": "ExpressionStatement",
														"src": "5282:36:17"
													},
													{
														"expression": {
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2531,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2483,
																"src": "5353:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2533,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "5368:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2534,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "5382:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5368:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5353:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2538,
														"nodeType": "ExpressionStatement",
														"src": "5353:36:17"
													},
													{
														"expression": {
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2539,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2436,
																"src": "5823:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2439,
																	"src": "5832:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2541,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "5840:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2544,
														"nodeType": "ExpressionStatement",
														"src": "5823:24:17"
													},
													{
														"expression": {
															"id": 2545,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "5868:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2437,
														"id": 2546,
														"nodeType": "Return",
														"src": "5861:13:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2427,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:17",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1702:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "1694:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1713:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "1705:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1724:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "1716:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:43:17"
									},
									"returnParameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1768:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "1760:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:16:17"
									},
									"scope": 3201,
									"src": "1678:4213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2592,
										"nodeType": "Block",
										"src": "6133:189:17",
										"statements": [
											{
												"assignments": [
													2565
												],
												"declarations": [
													{
														"constant": false,
														"id": 2565,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6151:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "6143:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6143:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2571,
												"initialValue": {
													"arguments": [
														{
															"id": 2567,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2552,
															"src": "6167:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2568,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "6170:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2569,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2556,
															"src": "6173:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2566,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2549,
															2593
														],
														"referencedDeclaration": 2549,
														"src": "6160:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:42:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2342",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 2575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2572,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2559,
															"src": "6199:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2342",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2573,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "6211:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2342_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6220:2:17",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2340,
															"src": "6211:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2342",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "6199:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2577,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2552,
																	"src": "6233:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2578,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2554,
																	"src": "6236:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2579,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2556,
																	"src": "6239:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2576,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6226:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6226:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6199:56:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2589,
												"nodeType": "IfStatement",
												"src": "6195:98:17",
												"trueBody": {
													"id": 2588,
													"nodeType": "Block",
													"src": "6257:36:17",
													"statements": [
														{
															"expression": {
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2584,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "6271:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6271:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2587,
															"nodeType": "ExpressionStatement",
															"src": "6271:11:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2590,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2565,
													"src": "6309:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2563,
												"id": 2591,
												"nodeType": "Return",
												"src": "6302:13:17"
											}
										]
									},
									"documentation": {
										"id": 2550,
										"nodeType": "StructuredDocumentation",
										"src": "5897:121:17",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6032:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6047:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "6039:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6058:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "6050:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6069:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "6061:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6091:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "6082:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2342",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2557,
														"name": "Rounding",
														"nameLocations": [
															"6082:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2342,
														"src": "6082:8:17"
													},
													"referencedDeclaration": 2342,
													"src": "6082:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2342",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:62:17"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "6124:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:17"
									},
									"scope": 3201,
									"src": "6023:299:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2704,
										"nodeType": "Block",
										"src": "6598:1585:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2601,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "6612:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6617:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6612:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2607,
												"nodeType": "IfStatement",
												"src": "6608:45:17",
												"trueBody": {
													"id": 2606,
													"nodeType": "Block",
													"src": "6620:33:17",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2600,
															"id": 2605,
															"nodeType": "Return",
															"src": "6634:8:17"
														}
													]
												}
											},
											{
												"assignments": [
													2609
												],
												"declarations": [
													{
														"constant": false,
														"id": 2609,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7340:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2704,
														"src": "7332:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7332:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2618,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7349:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2612,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "7360:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2611,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2873,
																			2909
																		],
																		"referencedDeclaration": 2873,
																		"src": "7355:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7355:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7355:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2616,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7354:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:36:17"
											},
											{
												"id": 2703,
												"nodeType": "UncheckedBlock",
												"src": "7769:408:17",
												"statements": [
													{
														"expression": {
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2619,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "7793:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2620,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "7803:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2621,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "7812:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2622,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7816:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7812:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7803:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2625,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7802:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7827:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7802:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7793:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2629,
														"nodeType": "ExpressionStatement",
														"src": "7793:35:17"
													},
													{
														"expression": {
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2630,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "7842:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2631,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "7852:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2632,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "7861:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2633,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7865:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7861:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7852:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2636,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7851:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7876:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7851:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2640,
														"nodeType": "ExpressionStatement",
														"src": "7842:35:17"
													},
													{
														"expression": {
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2641,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "7891:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2642,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "7901:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2643,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "7910:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2644,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7914:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7910:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7901:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2647,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7900:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7900:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7891:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2651,
														"nodeType": "ExpressionStatement",
														"src": "7891:35:17"
													},
													{
														"expression": {
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2652,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "7940:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2653,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "7950:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2654,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "7959:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2655,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7963:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7959:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7950:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2658,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7949:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7949:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7940:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2662,
														"nodeType": "ExpressionStatement",
														"src": "7940:35:17"
													},
													{
														"expression": {
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2663,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "7989:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2664,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "7999:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2665,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "8008:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2666,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "8012:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8008:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7999:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2669,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7998:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8023:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7998:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7989:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2673,
														"nodeType": "ExpressionStatement",
														"src": "7989:35:17"
													},
													{
														"expression": {
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2674,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "8038:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2675,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "8048:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2676,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "8057:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2677,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "8061:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8057:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8048:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2680,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8047:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8072:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8047:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8038:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2684,
														"nodeType": "ExpressionStatement",
														"src": "8038:35:17"
													},
													{
														"expression": {
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2685,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "8087:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2686,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "8097:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2687,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "8106:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2688,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "8110:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8106:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8097:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2691,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8096:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8121:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8096:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8087:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2695,
														"nodeType": "ExpressionStatement",
														"src": "8087:35:17"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2697,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2609,
																	"src": "8147:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2698,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2596,
																		"src": "8155:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2699,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2609,
																		"src": "8159:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8155:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2696,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "8143:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8143:23:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2600,
														"id": 2702,
														"nodeType": "Return",
														"src": "8136:30:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "6328:208:17",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6550:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6563:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "6555:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:11:17"
									},
									"returnParameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "6589:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:17"
									},
									"scope": 3201,
									"src": "6541:1642:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2740,
										"nodeType": "Block",
										"src": "8359:161:17",
										"statements": [
											{
												"id": 2739,
												"nodeType": "UncheckedBlock",
												"src": "8369:145:17",
												"statements": [
													{
														"assignments": [
															2717
														],
														"declarations": [
															{
																"constant": false,
																"id": 2717,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8401:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 2739,
																"src": "8393:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2716,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8393:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2721,
														"initialValue": {
															"arguments": [
																{
																	"id": 2719,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2708,
																	"src": "8415:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2718,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2705,
																	2741
																],
																"referencedDeclaration": 2705,
																"src": "8410:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8410:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8393:24:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2722,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2717,
																"src": "8438:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2342",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2723,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2711,
																					"src": "8448:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2724,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "8460:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2342_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8469:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2340,
																					"src": "8460:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8448:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2727,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2717,
																						"src": "8475:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2728,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2717,
																						"src": "8484:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8475:15:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2730,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "8493:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8475:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8448:46:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8501:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8448:54:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8497:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2736,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8447:56:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8438:65:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2715,
														"id": 2738,
														"nodeType": "Return",
														"src": "8431:72:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2706,
										"nodeType": "StructuredDocumentation",
										"src": "8189:89:17",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8292:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8305:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "8297:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8297:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8317:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "8308:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2342",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2709,
														"name": "Rounding",
														"nameLocations": [
															"8308:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2342,
														"src": "8308:8:17"
													},
													"referencedDeclaration": 2342,
													"src": "8308:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2342",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8296:30:17"
									},
									"returnParameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "8350:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:17"
									},
									"scope": 3201,
									"src": "8283:237:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2872,
										"nodeType": "Block",
										"src": "8705:922:17",
										"statements": [
											{
												"assignments": [
													2750
												],
												"declarations": [
													{
														"constant": false,
														"id": 2750,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8723:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2872,
														"src": "8715:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8715:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2752,
												"initialValue": {
													"hexValue": "30",
													"id": 2751,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8732:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:18:17"
											},
											{
												"id": 2869,
												"nodeType": "UncheckedBlock",
												"src": "8743:855:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "8771:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8780:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8771:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8771:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2767,
														"nodeType": "IfStatement",
														"src": "8767:99:17",
														"trueBody": {
															"id": 2766,
															"nodeType": "Block",
															"src": "8789:77:17",
															"statements": [
																{
																	"expression": {
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "8807:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8807:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2761,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:13:17"
																},
																{
																	"expression": {
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2762,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "8838:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8848:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8838:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2765,
																	"nodeType": "ExpressionStatement",
																	"src": "8838:13:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "8883:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8883:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8883:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2782,
														"nodeType": "IfStatement",
														"src": "8879:96:17",
														"trueBody": {
															"id": 2781,
															"nodeType": "Block",
															"src": "8900:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2773,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "8918:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8928:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8918:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:12:17"
																},
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2777,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "8948:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8958:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8948:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "8948:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "8992:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9001:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8992:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9006:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8992:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2797,
														"nodeType": "IfStatement",
														"src": "8988:96:17",
														"trueBody": {
															"id": 2796,
															"nodeType": "Block",
															"src": "9009:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "9027:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9037:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9027:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "9027:12:17"
																},
																{
																	"expression": {
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "9057:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9067:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9057:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2795,
																	"nodeType": "ExpressionStatement",
																	"src": "9057:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2798,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "9101:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9101:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9115:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9101:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2812,
														"nodeType": "IfStatement",
														"src": "9097:96:17",
														"trueBody": {
															"id": 2811,
															"nodeType": "Block",
															"src": "9118:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "9136:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9146:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9136:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2806,
																	"nodeType": "ExpressionStatement",
																	"src": "9136:12:17"
																},
																{
																	"expression": {
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2807,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "9166:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9176:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9166:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2810,
																	"nodeType": "ExpressionStatement",
																	"src": "9166:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "9210:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9219:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9210:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9223:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9210:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2827,
														"nodeType": "IfStatement",
														"src": "9206:93:17",
														"trueBody": {
															"id": 2826,
															"nodeType": "Block",
															"src": "9226:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 2820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2818,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "9244:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9254:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9244:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2821,
																	"nodeType": "ExpressionStatement",
																	"src": "9244:11:17"
																},
																{
																	"expression": {
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2822,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "9273:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9273:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2825,
																	"nodeType": "ExpressionStatement",
																	"src": "9273:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "9316:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9325:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9316:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9316:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2842,
														"nodeType": "IfStatement",
														"src": "9312:93:17",
														"trueBody": {
															"id": 2841,
															"nodeType": "Block",
															"src": "9332:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2833,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "9350:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9360:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9350:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "9350:11:17"
																},
																{
																	"expression": {
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2837,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "9379:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9379:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2840,
																	"nodeType": "ExpressionStatement",
																	"src": "9379:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2843,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "9422:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9431:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9422:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9435:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9422:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2857,
														"nodeType": "IfStatement",
														"src": "9418:93:17",
														"trueBody": {
															"id": 2856,
															"nodeType": "Block",
															"src": "9438:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 2850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "9456:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9456:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2851,
																	"nodeType": "ExpressionStatement",
																	"src": "9456:11:17"
																},
																{
																	"expression": {
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2852,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "9485:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9485:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2855,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2858,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "9528:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9537:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9528:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9541:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2868,
														"nodeType": "IfStatement",
														"src": "9524:64:17",
														"trueBody": {
															"id": 2867,
															"nodeType": "Block",
															"src": "9544:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2863,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2750,
																			"src": "9562:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9572:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9562:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2866,
																	"nodeType": "ExpressionStatement",
																	"src": "9562:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2870,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2750,
													"src": "9614:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2748,
												"id": 2871,
												"nodeType": "Return",
												"src": "9607:13:17"
											}
										]
									},
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "8526:113:17",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8653:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8666:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "8658:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:15:17"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "8696:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:9:17"
									},
									"scope": 3201,
									"src": "8644:983:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2908,
										"nodeType": "Block",
										"src": "9860:165:17",
										"statements": [
											{
												"id": 2907,
												"nodeType": "UncheckedBlock",
												"src": "9870:149:17",
												"statements": [
													{
														"assignments": [
															2885
														],
														"declarations": [
															{
																"constant": false,
																"id": 2885,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9902:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 2907,
																"src": "9894:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9894:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2889,
														"initialValue": {
															"arguments": [
																{
																	"id": 2887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2876,
																	"src": "9916:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2886,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2873,
																	2909
																],
																"referencedDeclaration": 2873,
																"src": "9911:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9911:11:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9894:28:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2890,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2885,
																"src": "9943:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2342",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2891,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2879,
																					"src": "9953:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2892,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "9965:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2342_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9974:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2340,
																					"src": "9965:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9953:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2895,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9980:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2896,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2885,
																						"src": "9985:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9980:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2898,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2876,
																					"src": "9994:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9980:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9953:46:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10006:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9953:54:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10002:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9952:56:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9943:65:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2883,
														"id": 2906,
														"nodeType": "Return",
														"src": "9936:72:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2874,
										"nodeType": "StructuredDocumentation",
										"src": "9633:142:17",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9789:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9802:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "9794:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9818:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "9809:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2342",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2877,
														"name": "Rounding",
														"nameLocations": [
															"9809:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2342,
														"src": "9809:8:17"
													},
													"referencedDeclaration": 2342,
													"src": "9809:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2342",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:34:17"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "9851:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:17"
									},
									"scope": 3201,
									"src": "9780:245:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3037,
										"nodeType": "Block",
										"src": "10212:854:17",
										"statements": [
											{
												"assignments": [
													2918
												],
												"declarations": [
													{
														"constant": false,
														"id": 2918,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10230:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3037,
														"src": "10222:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2920,
												"initialValue": {
													"hexValue": "30",
													"id": 2919,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10239:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:18:17"
											},
											{
												"id": 3034,
												"nodeType": "UncheckedBlock",
												"src": "10250:787:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2921,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "10278:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10287:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10287:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10278:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2937,
														"nodeType": "IfStatement",
														"src": "10274:103:17",
														"trueBody": {
															"id": 2936,
															"nodeType": "Block",
															"src": "10297:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 2930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2912,
																			"src": "10315:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10324:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10330:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10324:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10315:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2931,
																	"nodeType": "ExpressionStatement",
																	"src": "10315:17:17"
																},
																{
																	"expression": {
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2932,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2918,
																			"src": "10350:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10360:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10350:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2935,
																	"nodeType": "ExpressionStatement",
																	"src": "10350:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2938,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "10394:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10409:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10403:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10394:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2954,
														"nodeType": "IfStatement",
														"src": "10390:103:17",
														"trueBody": {
															"id": 2953,
															"nodeType": "Block",
															"src": "10413:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 2947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2943,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2912,
																			"src": "10431:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10440:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10446:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10440:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10431:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2948,
																	"nodeType": "ExpressionStatement",
																	"src": "10431:17:17"
																},
																{
																	"expression": {
																		"id": 2951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2949,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2918,
																			"src": "10466:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10476:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10466:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2952,
																	"nodeType": "ExpressionStatement",
																	"src": "10466:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2955,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "10510:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10519:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10525:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10519:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10510:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2971,
														"nodeType": "IfStatement",
														"src": "10506:103:17",
														"trueBody": {
															"id": 2970,
															"nodeType": "Block",
															"src": "10529:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2960,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2912,
																			"src": "10547:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10556:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10556:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10547:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2965,
																	"nodeType": "ExpressionStatement",
																	"src": "10547:17:17"
																},
																{
																	"expression": {
																		"id": 2968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2966,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2918,
																			"src": "10582:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10592:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10582:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2969,
																	"nodeType": "ExpressionStatement",
																	"src": "10582:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2972,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "10626:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10635:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10626:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2988,
														"nodeType": "IfStatement",
														"src": "10622:100:17",
														"trueBody": {
															"id": 2987,
															"nodeType": "Block",
															"src": "10644:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 2981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2977,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2912,
																			"src": "10662:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10671:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10677:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10671:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10662:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2982,
																	"nodeType": "ExpressionStatement",
																	"src": "10662:16:17"
																},
																{
																	"expression": {
																		"id": 2985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2983,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2918,
																			"src": "10696:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10706:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10696:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2986,
																	"nodeType": "ExpressionStatement",
																	"src": "10696:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2989,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "10739:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10748:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10754:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10748:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10739:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3005,
														"nodeType": "IfStatement",
														"src": "10735:100:17",
														"trueBody": {
															"id": 3004,
															"nodeType": "Block",
															"src": "10757:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2994,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2912,
																			"src": "10775:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10784:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10790:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10784:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10775:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2999,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:16:17"
																},
																{
																	"expression": {
																		"id": 3002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3000,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2918,
																			"src": "10809:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10819:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10809:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3003,
																	"nodeType": "ExpressionStatement",
																	"src": "10809:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3006,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "10852:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10861:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10861:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10852:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3022,
														"nodeType": "IfStatement",
														"src": "10848:100:17",
														"trueBody": {
															"id": 3021,
															"nodeType": "Block",
															"src": "10870:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2912,
																			"src": "10888:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10897:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10903:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10897:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10888:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3016,
																	"nodeType": "ExpressionStatement",
																	"src": "10888:16:17"
																},
																{
																	"expression": {
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2918,
																			"src": "10922:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10932:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10922:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3020,
																	"nodeType": "ExpressionStatement",
																	"src": "10922:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3023,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "10965:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10974:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10980:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10974:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10965:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3033,
														"nodeType": "IfStatement",
														"src": "10961:66:17",
														"trueBody": {
															"id": 3032,
															"nodeType": "Block",
															"src": "10983:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3028,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2918,
																			"src": "11001:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11011:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11001:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3031,
																	"nodeType": "ExpressionStatement",
																	"src": "11001:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3035,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2918,
													"src": "11053:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2916,
												"id": 3036,
												"nodeType": "Return",
												"src": "11046:13:17"
											}
										]
									},
									"documentation": {
										"id": 2910,
										"nodeType": "StructuredDocumentation",
										"src": "10031:114:17",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10159:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10173:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "10165:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10164:15:17"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "10203:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10202:9:17"
									},
									"scope": 3201,
									"src": "10150:916:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3073,
										"nodeType": "Block",
										"src": "11301:167:17",
										"statements": [
											{
												"id": 3072,
												"nodeType": "UncheckedBlock",
												"src": "11311:151:17",
												"statements": [
													{
														"assignments": [
															3050
														],
														"declarations": [
															{
																"constant": false,
																"id": 3050,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11343:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3072,
																"src": "11335:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3049,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11335:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3054,
														"initialValue": {
															"arguments": [
																{
																	"id": 3052,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3041,
																	"src": "11358:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3051,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3038,
																	3074
																],
																"referencedDeclaration": 3038,
																"src": "11352:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11352:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11335:29:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3055,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3050,
																"src": "11385:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2342",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3056,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3044,
																					"src": "11395:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3057,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "11407:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2342_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3058,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11416:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2340,
																					"src": "11407:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11395:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3060,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11422:2:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3061,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3050,
																						"src": "11428:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11422:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3063,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3041,
																					"src": "11437:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11422:20:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11395:47:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11395:55:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11445:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11394:57:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11385:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3048,
														"id": 3071,
														"nodeType": "Return",
														"src": "11378:73:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3039,
										"nodeType": "StructuredDocumentation",
										"src": "11072:143:17",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11229:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11243:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "11235:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11235:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11259:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "11250:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2342",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 3043,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3042,
														"name": "Rounding",
														"nameLocations": [
															"11250:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2342,
														"src": "11250:8:17"
													},
													"referencedDeclaration": 2342,
													"src": "11250:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2342",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11234:34:17"
									},
									"returnParameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "11292:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:9:17"
									},
									"scope": 3201,
									"src": "11220:248:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3160,
										"nodeType": "Block",
										"src": "11782:600:17",
										"statements": [
											{
												"assignments": [
													3083
												],
												"declarations": [
													{
														"constant": false,
														"id": 3083,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11800:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3160,
														"src": "11792:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11792:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3085,
												"initialValue": {
													"hexValue": "30",
													"id": 3084,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11809:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11792:18:17"
											},
											{
												"id": 3157,
												"nodeType": "UncheckedBlock",
												"src": "11820:533:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3086,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "11848:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11857:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11848:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11863:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11848:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3100,
														"nodeType": "IfStatement",
														"src": "11844:98:17",
														"trueBody": {
															"id": 3099,
															"nodeType": "Block",
															"src": "11866:76:17",
															"statements": [
																{
																	"expression": {
																		"id": 3093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3091,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3077,
																			"src": "11884:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11894:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11884:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3094,
																	"nodeType": "ExpressionStatement",
																	"src": "11884:13:17"
																},
																{
																	"expression": {
																		"id": 3097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3095,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3083,
																			"src": "11915:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3098,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3101,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "11959:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11968:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11959:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11973:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11959:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3115,
														"nodeType": "IfStatement",
														"src": "11955:95:17",
														"trueBody": {
															"id": 3114,
															"nodeType": "Block",
															"src": "11976:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3106,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3077,
																			"src": "11994:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12004:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11994:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3109,
																	"nodeType": "ExpressionStatement",
																	"src": "11994:12:17"
																},
																{
																	"expression": {
																		"id": 3112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3110,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3083,
																			"src": "12024:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12034:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12024:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3113,
																	"nodeType": "ExpressionStatement",
																	"src": "12024:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "12067:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12076:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12067:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12081:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12067:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3130,
														"nodeType": "IfStatement",
														"src": "12063:95:17",
														"trueBody": {
															"id": 3129,
															"nodeType": "Block",
															"src": "12084:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3077,
																			"src": "12102:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12112:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12102:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3124,
																	"nodeType": "ExpressionStatement",
																	"src": "12102:12:17"
																},
																{
																	"expression": {
																		"id": 3127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3125,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3083,
																			"src": "12132:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12142:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12132:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3128,
																	"nodeType": "ExpressionStatement",
																	"src": "12132:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "12175:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12184:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12175:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12189:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12175:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3145,
														"nodeType": "IfStatement",
														"src": "12171:95:17",
														"trueBody": {
															"id": 3144,
															"nodeType": "Block",
															"src": "12192:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3136,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3077,
																			"src": "12210:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12220:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12210:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3139,
																	"nodeType": "ExpressionStatement",
																	"src": "12210:12:17"
																},
																{
																	"expression": {
																		"id": 3142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3083,
																			"src": "12240:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12240:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3143,
																	"nodeType": "ExpressionStatement",
																	"src": "12240:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "12283:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12292:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12283:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12283:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3156,
														"nodeType": "IfStatement",
														"src": "12279:64:17",
														"trueBody": {
															"id": 3155,
															"nodeType": "Block",
															"src": "12299:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3151,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3083,
																			"src": "12317:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12327:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12317:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3154,
																	"nodeType": "ExpressionStatement",
																	"src": "12317:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3158,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3083,
													"src": "12369:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3081,
												"id": 3159,
												"nodeType": "Return",
												"src": "12362:13:17"
											}
										]
									},
									"documentation": {
										"id": 3075,
										"nodeType": "StructuredDocumentation",
										"src": "11474:240:17",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11728:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3077,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11743:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "11735:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:15:17"
									},
									"returnParameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "11773:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:9:17"
									},
									"scope": 3201,
									"src": "11719:663:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3199,
										"nodeType": "Block",
										"src": "12619:174:17",
										"statements": [
											{
												"id": 3198,
												"nodeType": "UncheckedBlock",
												"src": "12629:158:17",
												"statements": [
													{
														"assignments": [
															3173
														],
														"declarations": [
															{
																"constant": false,
																"id": 3173,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12661:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3198,
																"src": "12653:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3172,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12653:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3177,
														"initialValue": {
															"arguments": [
																{
																	"id": 3175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3164,
																	"src": "12677:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3174,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3161,
																	3200
																],
																"referencedDeclaration": 3161,
																"src": "12670:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12670:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12653:30:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3178,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "12704:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2342",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3179,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3167,
																					"src": "12714:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3180,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "12726:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2342_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12735:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2340,
																					"src": "12726:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2342",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12714:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3183,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12741:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3186,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3184,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3173,
																									"src": "12747:6:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3185,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12757:1:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12747:11:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3187,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12746:13:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12741:18:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3189,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3164,
																					"src": "12762:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12741:26:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12714:53:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12774:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12714:61:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3195,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12713:63:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12704:72:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3171,
														"id": 3197,
														"nodeType": "Return",
														"src": "12697:79:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3162,
										"nodeType": "StructuredDocumentation",
										"src": "12388:144:17",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12546:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12561:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "12553:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12577:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "12568:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2342",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 3166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3165,
														"name": "Rounding",
														"nameLocations": [
															"12568:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2342,
														"src": "12568:8:17"
													},
													"referencedDeclaration": 2342,
													"src": "12568:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2342",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:34:17"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "12610:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:9:17"
									},
									"scope": 3201,
									"src": "12537:256:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3202,
							"src": "202:12593:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12693:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
					"exportedSymbols": {
						"SignedMathUpgradeable": [
							3306
						]
					},
					"id": 3307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3204,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:18",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3306,
							"linearizedBaseContracts": [
								3306
							],
							"name": "SignedMathUpgradeable",
							"nameLocation": "223:21:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3221,
										"nodeType": "Block",
										"src": "386:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3214,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3207,
															"src": "403:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3215,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "407:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "403:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3218,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "415:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "403:13:18",
													"trueExpression": {
														"id": 3217,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3207,
														"src": "411:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3213,
												"id": 3220,
												"nodeType": "Return",
												"src": "396:20:18"
											}
										]
									},
									"documentation": {
										"id": 3205,
										"nodeType": "StructuredDocumentation",
										"src": "251:66:18",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "331:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "342:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "335:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3206,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "352:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "345:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3208,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:20:18"
									},
									"returnParameters": {
										"id": 3213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "378:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3211,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:8:18"
									},
									"scope": 3306,
									"src": "322:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3239,
										"nodeType": "Block",
										"src": "565:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3232,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3225,
															"src": "582:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3233,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "586:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "582:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3236,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3227,
														"src": "594:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "582:13:18",
													"trueExpression": {
														"id": 3235,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3225,
														"src": "590:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3231,
												"id": 3238,
												"nodeType": "Return",
												"src": "575:20:18"
											}
										]
									},
									"documentation": {
										"id": 3223,
										"nodeType": "StructuredDocumentation",
										"src": "429:67:18",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "510:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3225,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "521:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "514:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3224,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "531:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "524:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3226,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:20:18"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "557:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3229,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:8:18"
									},
									"scope": 3306,
									"src": "501:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3283,
										"nodeType": "Block",
										"src": "807:162:18",
										"statements": [
											{
												"assignments": [
													3251
												],
												"declarations": [
													{
														"constant": false,
														"id": 3251,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "876:1:18",
														"nodeType": "VariableDeclaration",
														"scope": 3283,
														"src": "869:8:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3250,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "869:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3264,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3252,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3243,
																	"src": "881:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3253,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3245,
																	"src": "885:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "881:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3256,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3243,
																				"src": "892:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3257,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3245,
																				"src": "896:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "892:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3259,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "891:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "902:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "891:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3262,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "890:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "880:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "869:35:18"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3265,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3251,
														"src": "921:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3270,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3251,
																						"src": "941:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3269,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "933:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3268,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "933:7:18",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "933:10:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "947:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "933:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "926:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3266,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "926:6:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "926:25:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3275,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3243,
																				"src": "955:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3276,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3245,
																				"src": "959:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "955:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3278,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "954:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "926:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3280,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:41:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3249,
												"id": 3282,
												"nodeType": "Return",
												"src": "914:48:18"
											}
										]
									},
									"documentation": {
										"id": 3241,
										"nodeType": "StructuredDocumentation",
										"src": "608:126:18",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "748:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "763:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "756:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3242,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "773:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "766:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3244,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:18"
									},
									"returnParameters": {
										"id": 3249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "799:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3247,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:8:18"
									},
									"scope": 3306,
									"src": "739:230:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3304,
										"nodeType": "Block",
										"src": "1113:158:18",
										"statements": [
											{
												"id": 3303,
												"nodeType": "UncheckedBlock",
												"src": "1123:142:18",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3294,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3287,
																			"src": "1238:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1243:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1251:2:18",
																		"subExpression": {
																			"id": 3298,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3287,
																			"src": "1252:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1238:15:18",
																	"trueExpression": {
																		"id": 3297,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3287,
																		"src": "1247:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1230:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3292,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1230:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1230:24:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3291,
														"id": 3302,
														"nodeType": "Return",
														"src": "1223:31:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3285,
										"nodeType": "StructuredDocumentation",
										"src": "975:78:18",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1067:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1078:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3305,
												"src": "1071:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3286,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:10:18"
									},
									"returnParameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3305,
												"src": "1104:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:18"
									},
									"scope": 3306,
									"src": "1058:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3307,
							"src": "215:1058:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1165:18"
				},
				"id": 18
			},
			"contracts/GameVault.sol": {
				"ast": {
					"absolutePath": "contracts/GameVault.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							335
						],
						"AddressUpgradeable": [
							1898
						],
						"ContextUpgradeable": [
							1940
						],
						"ERC165Upgradeable": [
							2323
						],
						"ERC1967UpgradeUpgradeable": [
							763
						],
						"GameVault": [
							3579
						],
						"IAccessControlUpgradeable": [
							408
						],
						"IBeaconUpgradeable": [
							773
						],
						"IERC165Upgradeable": [
							2335
						],
						"IERC1822ProxiableUpgradeable": [
							439
						],
						"IERC1967Upgradeable": [
							429
						],
						"IERC20PermitUpgradeable": [
							1192
						],
						"IERC20Upgradeable": [
							1156
						],
						"Initializable": [
							942
						],
						"MathUpgradeable": [
							3201
						],
						"SafeERC20Upgradeable": [
							1568
						],
						"SignedMathUpgradeable": [
							3306
						],
						"StorageSlotUpgradeable": [
							2050
						],
						"StringsUpgradeable": [
							2279
						],
						"UUPSUpgradeable": [
							1078
						]
					},
					"id": 3580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 3309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3580,
							"sourceUnit": 943,
							"src": "56:75:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 3310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3580,
							"sourceUnit": 1079,
							"src": "132:77:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 3311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3580,
							"sourceUnit": 1569,
							"src": "210:88:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 3312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3580,
							"sourceUnit": 336,
							"src": "299:81:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3313,
										"name": "Initializable",
										"nameLocations": [
											"403:13:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "403:13:19"
									},
									"id": 3314,
									"nodeType": "InheritanceSpecifier",
									"src": "403:13:19"
								},
								{
									"baseName": {
										"id": 3315,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"418:15:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "418:15:19"
									},
									"id": 3316,
									"nodeType": "InheritanceSpecifier",
									"src": "418:15:19"
								},
								{
									"baseName": {
										"id": 3317,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"435:24:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "435:24:19"
									},
									"id": 3318,
									"nodeType": "InheritanceSpecifier",
									"src": "435:24:19"
								}
							],
							"canonicalName": "GameVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3579,
							"linearizedBaseContracts": [
								3579,
								335,
								2323,
								2335,
								408,
								1940,
								1078,
								763,
								429,
								439,
								942
							],
							"name": "GameVault",
							"nameLocation": "390:9:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3322,
									"libraryName": {
										"id": 3319,
										"name": "SafeERC20Upgradeable",
										"nameLocations": [
											"472:20:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1568,
										"src": "472:20:19"
									},
									"nodeType": "UsingForDirective",
									"src": "466:49:19",
									"typeName": {
										"id": 3321,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3320,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"497:17:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1156,
											"src": "497:17:19"
										},
										"referencedDeclaration": 1156,
										"src": "497:17:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"constant": false,
									"id": 3325,
									"mutability": "mutable",
									"name": "tether",
									"nameLocation": "538:6:19",
									"nodeType": "VariableDeclaration",
									"scope": 3579,
									"src": "520:24:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 3324,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3323,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"520:17:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1156,
											"src": "520:17:19"
										},
										"referencedDeclaration": 1156,
										"src": "520:17:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "56a0124f4d4ec310935ffb37f85801f8749aa96857a2762e2ff9274b91621ad1",
									"id": 3329,
									"name": "ChallengeReward",
									"nameLocation": "556:15:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3327,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "572:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:9:19"
									},
									"src": "550:31:19"
								},
								{
									"anonymous": false,
									"eventSelector": "ba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e",
									"id": 3335,
									"name": "ClaimReward",
									"nameLocation": "592:11:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "604:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3333,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "613:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:18:19"
									},
									"src": "586:36:19"
								},
								{
									"constant": false,
									"id": 3339,
									"mutability": "mutable",
									"name": "playersBalance",
									"nameLocation": "655:14:19",
									"nodeType": "VariableDeclaration",
									"scope": 3579,
									"src": "627:42:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3338,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3336,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "635:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "627:27:19",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "646:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "GameVault.PlayerInfo",
									"id": 3344,
									"members": [
										{
											"constant": false,
											"id": 3341,
											"mutability": "mutable",
											"name": "player",
											"nameLocation": "711:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 3344,
											"src": "703:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3340,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "703:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3343,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "735:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 3344,
											"src": "727:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "727:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PlayerInfo",
									"nameLocation": "682:10:19",
									"nodeType": "StructDefinition",
									"scope": 3579,
									"src": "675:74:19",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3364,
										"nodeType": "Block",
										"src": "849:100:19",
										"statements": [
											{
												"expression": {
													"id": 3357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3353,
														"name": "tether",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3325,
														"src": "859:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3355,
																"name": "_tether",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "886:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3354,
															"name": "IERC20Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "868:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1156_$",
																"typeString": "type(contract IERC20Upgradeable)"
															}
														},
														"id": 3356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "868:26:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "859:35:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 3358,
												"nodeType": "ExpressionStatement",
												"src": "859:35:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3360,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "915:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3361,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3348,
															"src": "935:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3359,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "904:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:38:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3363,
												"nodeType": "ExpressionStatement",
												"src": "904:38:19"
											}
										]
									},
									"functionSelector": "485cc955",
									"id": 3365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3351,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3350,
												"name": "initializer",
												"nameLocations": [
													"837:11:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 844,
												"src": "837:11:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "837:11:19"
										}
									],
									"name": "initialize",
									"nameLocation": "763:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3346,
												"mutability": "mutable",
												"name": "_tether",
												"nameLocation": "792:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3365,
												"src": "784:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3348,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "817:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3365,
												"src": "809:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:55:19"
									},
									"returnParameters": {
										"id": 3352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:0:19"
									},
									"scope": 3579,
									"src": "754:195:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3400,
										"nodeType": "Block",
										"src": "1048:147:19",
										"statements": [
											{
												"body": {
													"id": 3398,
													"nodeType": "Block",
													"src": "1102:87:19",
													"statements": [
														{
															"expression": {
																"id": 3396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3386,
																		"name": "playersBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3339,
																		"src": "1116:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3391,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3387,
																				"name": "_playerSet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3369,
																				"src": "1131:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct GameVault.PlayerInfo calldata[] calldata"
																				}
																			},
																			"id": 3389,
																			"indexExpression": {
																				"id": 3388,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3376,
																				"src": "1142:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1131:13:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PlayerInfo_$3344_calldata_ptr",
																				"typeString": "struct GameVault.PlayerInfo calldata"
																			}
																		},
																		"id": 3390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1145:6:19",
																		"memberName": "player",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3341,
																		"src": "1131:20:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1116:36:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3392,
																			"name": "_playerSet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3369,
																			"src": "1157:10:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct GameVault.PlayerInfo calldata[] calldata"
																			}
																		},
																		"id": 3394,
																		"indexExpression": {
																			"id": 3393,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3376,
																			"src": "1168:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1157:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerInfo_$3344_calldata_ptr",
																			"typeString": "struct GameVault.PlayerInfo calldata"
																		}
																	},
																	"id": 3395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1171:7:19",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3343,
																	"src": "1157:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1116:62:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3397,
															"nodeType": "ExpressionStatement",
															"src": "1116:62:19"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3379,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3376,
														"src": "1075:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3380,
															"name": "_playerSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3369,
															"src": "1078:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct GameVault.PlayerInfo calldata[] calldata"
															}
														},
														"id": 3381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1089:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1078:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1075:20:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3399,
												"initializationExpression": {
													"assignments": [
														3376
													],
													"declarations": [
														{
															"constant": false,
															"id": 3376,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1070:1:19",
															"nodeType": "VariableDeclaration",
															"scope": 3399,
															"src": "1062:9:19",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3375,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1062:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3378,
													"initialValue": {
														"hexValue": "30",
														"id": 3377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1072:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1062:11:19"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1097:3:19",
														"subExpression": {
															"id": 3383,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3376,
															"src": "1097:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3385,
													"nodeType": "ExpressionStatement",
													"src": "1097:3:19"
												},
												"nodeType": "ForStatement",
												"src": "1058:131:19"
											}
										]
									},
									"functionSelector": "f396d899",
									"id": 3401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3372,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "1029:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3371,
												"name": "onlyRole",
												"nameLocations": [
													"1020:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "1020:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "1020:28:19"
										}
									],
									"name": "playersReward",
									"nameLocation": "963:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "_playerSet",
												"nameLocation": "999:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "977:32:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PlayerInfo_$3344_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct GameVault.PlayerInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 3367,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3366,
															"name": "PlayerInfo",
															"nameLocations": [
																"977:10:19"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3344,
															"src": "977:10:19"
														},
														"referencedDeclaration": 3344,
														"src": "977:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PlayerInfo_$3344_storage_ptr",
															"typeString": "struct GameVault.PlayerInfo"
														}
													},
													"id": 3368,
													"nodeType": "ArrayTypeName",
													"src": "977:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PlayerInfo_$3344_storage_$dyn_storage_ptr",
														"typeString": "struct GameVault.PlayerInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:34:19"
									},
									"returnParameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1048:0:19"
									},
									"scope": 3579,
									"src": "954:241:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3458,
										"nodeType": "Block",
										"src": "1232:387:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3405,
																	"name": "playersBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3339,
																	"src": "1250:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3408,
																"indexExpression": {
																	"expression": {
																		"id": 3406,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1265:3:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1269:6:19",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1265:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1250:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1279:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1250:30:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520616e7920726577617264",
															"id": 3411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1283:27:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b",
																"typeString": "literal_string \"You don't have any reward\""
															},
															"value": "You don't have any reward"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b",
																"typeString": "literal_string \"You don't have any reward\""
															}
														],
														"id": 3404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1242:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:69:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3413,
												"nodeType": "ExpressionStatement",
												"src": "1242:69:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3415,
																	"name": "playersBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3339,
																	"src": "1329:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3418,
																"indexExpression": {
																	"expression": {
																		"id": 3416,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1344:3:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1348:6:19",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1344:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1329:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3423,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1384:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GameVault_$3579",
																					"typeString": "contract GameVault"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_GameVault_$3579",
																					"typeString": "contract GameVault"
																				}
																			],
																			"id": 3422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1376:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3421,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1376:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1376:13:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3419,
																		"name": "tether",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3325,
																		"src": "1359:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 3420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1366:9:19",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1113,
																	"src": "1359:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 3425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1359:31:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:61:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e27742077697468647261772061742074686973206d6f6d656e74",
															"id": 3427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1392:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3",
																"typeString": "literal_string \"You can't withdraw at this moment\""
															},
															"value": "You can't withdraw at this moment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3",
																"typeString": "literal_string \"You can't withdraw at this moment\""
															}
														],
														"id": 3414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1321:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1321:107:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3429,
												"nodeType": "ExpressionStatement",
												"src": "1321:107:19"
											},
											{
												"assignments": [
													3431
												],
												"declarations": [
													{
														"constant": false,
														"id": 3431,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1446:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3458,
														"src": "1438:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1438:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3436,
												"initialValue": {
													"baseExpression": {
														"id": 3432,
														"name": "playersBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "1455:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3435,
													"indexExpression": {
														"expression": {
															"id": 3433,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1470:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1474:6:19",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1470:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1455:26:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1438:43:19"
											},
											{
												"expression": {
													"id": 3442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3437,
															"name": "playersBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3339,
															"src": "1491:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3440,
														"indexExpression": {
															"expression": {
																"id": 3438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1506:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1510:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1506:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1491:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1520:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1491:30:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3443,
												"nodeType": "ExpressionStatement",
												"src": "1491:30:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3447,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1547:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1551:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1547:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3431,
															"src": "1559:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3444,
															"name": "tether",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3325,
															"src": "1531:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 3446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1538:8:19",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "1531:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3451,
												"nodeType": "ExpressionStatement",
												"src": "1531:35:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1593:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1597:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1593:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3431,
															"src": "1605:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3452,
														"name": "ClaimReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3335,
														"src": "1581:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1581:31:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3457,
												"nodeType": "EmitStatement",
												"src": "1576:36:19"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 3459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "1209:11:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:19"
									},
									"returnParameters": {
										"id": 3403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:0:19"
									},
									"scope": 3579,
									"src": "1200:419:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3512,
										"nodeType": "Block",
										"src": "1675:369:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3465,
																	"name": "playersBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3339,
																	"src": "1693:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3467,
																"indexExpression": {
																	"id": 3466,
																	"name": "_player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3461,
																	"src": "1708:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1693:23:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1719:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1693:27:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520616e7920726577617264",
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1723:27:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b",
																"typeString": "literal_string \"You don't have any reward\""
															},
															"value": "You don't have any reward"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daf3fc1494ba566af5528ed9b48d0cafd136ab4b30790d4f6ea68d34c858de3b",
																"typeString": "literal_string \"You don't have any reward\""
															}
														],
														"id": 3464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1685:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1685:66:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3472,
												"nodeType": "ExpressionStatement",
												"src": "1685:66:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3474,
																	"name": "playersBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3339,
																	"src": "1769:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3476,
																"indexExpression": {
																	"id": 3475,
																	"name": "_player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3461,
																	"src": "1784:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1769:23:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3481,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1821:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GameVault_$3579",
																					"typeString": "contract GameVault"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_GameVault_$3579",
																					"typeString": "contract GameVault"
																				}
																			],
																			"id": 3480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1813:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3479,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1813:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1813:13:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3477,
																		"name": "tether",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3325,
																		"src": "1796:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 3478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1803:9:19",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1113,
																	"src": "1796:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 3483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1796:31:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1769:58:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e27742077697468647261772061742074686973206d6f6d656e74",
															"id": 3485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1829:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3",
																"typeString": "literal_string \"You can't withdraw at this moment\""
															},
															"value": "You can't withdraw at this moment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba41f577ee4cd0e064a2e1da9f2c15e035fd81c221ea6732c9541ad17d7aeca3",
																"typeString": "literal_string \"You can't withdraw at this moment\""
															}
														],
														"id": 3473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1761:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:104:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3487,
												"nodeType": "ExpressionStatement",
												"src": "1761:104:19"
											},
											{
												"assignments": [
													3489
												],
												"declarations": [
													{
														"constant": false,
														"id": 3489,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1883:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3512,
														"src": "1875:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1875:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3493,
												"initialValue": {
													"baseExpression": {
														"id": 3490,
														"name": "playersBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "1892:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3492,
													"indexExpression": {
														"id": 3491,
														"name": "_player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "1907:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1892:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1875:40:19"
											},
											{
												"expression": {
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3494,
															"name": "playersBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3339,
															"src": "1925:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3496,
														"indexExpression": {
															"id": 3495,
															"name": "_player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3461,
															"src": "1940:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1925:23:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1951:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1925:27:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3499,
												"nodeType": "ExpressionStatement",
												"src": "1925:27:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3503,
															"name": "_player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3461,
															"src": "1978:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3504,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3489,
															"src": "1987:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3500,
															"name": "tether",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3325,
															"src": "1962:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1156",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 3502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1969:8:19",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "1962:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1962:32:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3506,
												"nodeType": "ExpressionStatement",
												"src": "1962:32:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3508,
															"name": "_player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3461,
															"src": "2021:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3509,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3489,
															"src": "2030:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3507,
														"name": "ClaimReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3335,
														"src": "2009:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:28:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3511,
												"nodeType": "EmitStatement",
												"src": "2004:33:19"
											}
										]
									},
									"id": 3513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardAdmin",
									"nameLocation": "1633:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "_player",
												"nameLocation": "1658:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3513,
												"src": "1650:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:17:19"
									},
									"returnParameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1675:0:19"
									},
									"scope": 3579,
									"src": "1624:420:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3541,
										"nodeType": "Block",
										"src": "2146:117:19",
										"statements": [
											{
												"body": {
													"id": 3539,
													"nodeType": "Block",
													"src": "2202:55:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3534,
																			"name": "_playerSet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3516,
																			"src": "2232:10:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3536,
																		"indexExpression": {
																			"id": 3535,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3523,
																			"src": "2243:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2232:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3533,
																	"name": "claimRewardAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3513,
																	"src": "2215:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 3537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2215:31:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3538,
															"nodeType": "ExpressionStatement",
															"src": "2215:31:19"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3526,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3523,
														"src": "2176:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3527,
															"name": "_playerSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3516,
															"src": "2179:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2190:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2179:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2176:20:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3540,
												"initializationExpression": {
													"assignments": [
														3523
													],
													"declarations": [
														{
															"constant": false,
															"id": 3523,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2168:1:19",
															"nodeType": "VariableDeclaration",
															"scope": 3540,
															"src": "2160:9:19",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3522,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2160:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3525,
													"initialValue": {
														"hexValue": "30",
														"id": 3524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2172:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2160:13:19"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2198:3:19",
														"subExpression": {
															"id": 3530,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3523,
															"src": "2198:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3532,
													"nodeType": "ExpressionStatement",
													"src": "2198:3:19"
												},
												"nodeType": "ForStatement",
												"src": "2156:101:19"
											}
										]
									},
									"functionSelector": "542e37cc",
									"id": 3542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3519,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "2126:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3520,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3518,
												"name": "onlyRole",
												"nameLocations": [
													"2117:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "2117:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2117:28:19"
										}
									],
									"name": "claimRewardAdminList",
									"nameLocation": "2058:20:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "_playerSet",
												"nameLocation": "2096:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 3542,
												"src": "2079:27:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3514,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2079:7:19",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3515,
													"nodeType": "ArrayTypeName",
													"src": "2079:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:29:19"
									},
									"returnParameters": {
										"id": 3521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:0:19"
									},
									"scope": 3579,
									"src": "2049:214:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3552,
										"nodeType": "Block",
										"src": "2322:50:19",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3547,
														"name": "playersBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "2339:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3550,
													"indexExpression": {
														"expression": {
															"id": 3548,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2354:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2358:6:19",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2354:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2339:26:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3551,
												"nodeType": "Return",
												"src": "2332:33:19"
											}
										]
									},
									"functionSelector": "651f066a",
									"id": 3553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playerBalance",
									"nameLocation": "2277:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:2:19"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "2315:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2315:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:6:19"
									},
									"scope": 3579,
									"src": "2268:104:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3567,
										"nodeType": "Block",
										"src": "2478:47:19",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3563,
														"name": "playersBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "2495:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3565,
													"indexExpression": {
														"id": 3564,
														"name": "_player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3555,
														"src": "2510:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2495:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3562,
												"id": 3566,
												"nodeType": "Return",
												"src": "2488:30:19"
											}
										]
									},
									"functionSelector": "bb6ceb4f",
									"id": 3568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3558,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "2445:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3559,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3557,
												"name": "onlyRole",
												"nameLocations": [
													"2436:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "2436:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2436:28:19"
										}
									],
									"name": "playerBalanceAdmin",
									"nameLocation": "2386:18:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3555,
												"mutability": "mutable",
												"name": "_player",
												"nameLocation": "2413:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "2405:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:17:19"
									},
									"returnParameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "2473:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2473:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:6:19"
									},
									"scope": 3579,
									"src": "2377:148:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1072
									],
									"body": {
										"id": 3577,
										"nodeType": "Block",
										"src": "2653:2:19",
										"statements": []
									},
									"id": 3578,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3574,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "2633:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3573,
												"name": "onlyRole",
												"nameLocations": [
													"2624:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "2624:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2624:28:19"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "2539:17:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3572,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2615:8:19"
									},
									"parameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2574:17:19",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "2566:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2556:41:19"
									},
									"returnParameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2653:0:19"
									},
									"scope": 3579,
									"src": "2530:125:19",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3580,
							"src": "381:2276:19",
							"usedErrors": [],
							"usedEvents": [
								347,
								356,
								365,
								416,
								423,
								428,
								788,
								3329,
								3335
							]
						}
					],
					"src": "31:2627:19"
				},
				"id": 19
			}
		}
	}
}