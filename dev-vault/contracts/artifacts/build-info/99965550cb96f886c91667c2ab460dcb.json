{
	"id": "99965550cb96f886c91667c2ab460dcb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DevVault.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\ncontract DevVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable{\n\n    IERC20Upgradeable tether;\n    function initialize (address _tether, address _owner) public initializer{\n        _setupRole(DEFAULT_ADMIN_ROLE, _owner);\n        tether = IERC20Upgradeable(_tether);\n    }\n    function withdraw (address _to) external onlyRole(DEFAULT_ADMIN_ROLE){\n        uint balance = tether.balanceOf(address(this));\n        tether.transfer(_to, balance);\n    }\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal virtual override onlyRole(DEFAULT_ADMIN_ROLE) {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport {Initializable} from \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 785,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1951,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2335,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"IAccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 785,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 764,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 785,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 785,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 764,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1080,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"IERC20PermitUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP13 0xBB PUSH20 0x9CDB68900B569221F510F5AFB92DC80505593201 0xCA SSTORE OR PUSH26 0x3AD13C9764736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "734:6366:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP13 0xBB PUSH20 0x9CDB68900B569221F510F5AFB92DC80505593201 0xCA SSTORE OR PUSH26 0x3AD13C9764736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "734:6366:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20Upgradeable,bytes memory)": "infinite",
								"forceApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safePermit(contract IERC20PermitUpgradeable,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033",
									".code": [
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/DevVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/DevVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 785,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1951,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH22 0x873C7E83D8846A1DFDB96D0E97B5554D6B9F9ED70651 DUP15 ADDRESS KECCAK256 LOG1 0xC3 MOD LOG0 0xCB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1420:2696:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH22 0x873C7E83D8846A1DFDB96D0E97B5554D6B9F9ED70651 DUP15 ADDRESS KECCAK256 LOG1 0xC3 MOD LOG0 0xCB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1420:2696:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a75873c7e83d8846a1dfdb96d0e97b5554d6b9f9ed706518e3020a1c306a0cb64736f6c634300081a0033",
									".code": [
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/DevVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH22 0x250184BB4FC075ACC089971FAE471990B53AF4207270 0xA7 PUSH32 0xC6D50129E21D64736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "242:2603:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH22 0x250184BB4FC075ACC089971FAE471990B53AF4207270 0xA7 PUSH32 0xC6D50129E21D64736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "242:2603:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205175250184bb4fc075acc089971fae471990b53af4207270a77fc6d50129e21d64736f6c634300081a0033",
									".code": [
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/DevVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 785,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2335,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 TIMESTAMP SWAP3 0xD DUP8 ADDRESS 0xB7 PUSH21 0x3AA0238D3F516E39157A903AC3819D1CF843797900 SWAP11 TLOAD DUP15 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12593:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 TIMESTAMP SWAP3 0xD DUP8 ADDRESS 0xB7 PUSH21 0x3AA0238D3F516E39157A903AC3819D1CF843797900 SWAP11 TLOAD DUP15 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12593:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e642920d8730b7743aa0238d3f516e39157a903ac3819d1cf8437979009a5c8e64736f6c634300081a0033",
									".code": [
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/DevVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"SignedMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP10 PUSH18 0xEF41998B70918147B919B90CA9342DF0ABB1 PUSH28 0x49E9414210AB1FFA4C2964736F6C634300081A003300000000000000 ",
							"sourceMap": "215:1058:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP10 PUSH18 0xEF41998B70918147B919B90CA9342DF0ABB1 PUSH28 0x49E9414210AB1FFA4C2964736F6C634300081A003300000000000000 ",
							"sourceMap": "215:1058:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220198971ef41998b70918147b919b90ca9342df0abb17b49e9414210ab1ffa4c2964736f6c634300081a0033",
									".code": [
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/DevVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DevVault.sol": {
				"DevVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tether",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DevVault.sol\":381:975  contract DevVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable{... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1198:1202  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1155:1203  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/DevVault.sol\":381:975  contract DevVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/DevVault.sol\":381:975  contract DevVault is Initializable, UUPSUpgradeable, AccessControlUpgradeable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f1ef286\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3408:3603  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/DevVault.sol\":495:667  function initialize (address _tether, address _owner) public initializer{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3922:4142  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/DevVault.sol\":672:843  function withdraw (address _to) external onlyRole(DEFAULT_ADMIN_ROLE){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3027:3158  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3135:3139  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3173:3216  type(IAccessControlUpgradeable).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3216  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3169  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3216  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3256  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_74\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3220:3256  super.supportsInterface(interfaceId) */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3244:3255  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3220:3243  super.supportsInterface */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3220:3256  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3256  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3151:3256  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4962:4966  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4948:4977  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5363:5381  getRoleAdmin(role) */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5376:5380  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5363:5375  getRoleAdmin */\n      tag_26\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5363:5381  getRoleAdmin(role) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      tag_83\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5404:5408  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5410:5417  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5403  _grantRole */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6495:6507  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6495:6505  _msgSender */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6495:6507  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6491  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6582:6586  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6588:6595  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6581  _revokeRole */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3408:3603  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1764:1770  __self */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1755:1759  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1739:1819  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1861:1867  __self */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1855  _getImplementation */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1829:1916  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3489:3525  _authorizeUpgrade(newImplementation) */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3507:3524  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3489:3506  _authorizeUpgrade */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3489:3525  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3535:3596  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3557:3574  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3586:3587  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3576:3588  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_109:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3590:3595  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3535:3556  _upgradeToAndCallUUPS */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3535:3596  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3408:3603  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"contracts/DevVault.sol\":495:667  function initialize (address _tether, address _owner) public initializer{... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3315  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3361  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_113\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3417  AddressUpgradeable.isContract */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3432  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3452:3453  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3566:3580  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3612:3616  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_120:\n        /* \"contracts/DevVault.sol\":577:615  _setupRole(DEFAULT_ADMIN_ROLE, _owner) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"contracts/DevVault.sol\":588:606  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/DevVault.sol\":608:614  _owner */\n      dup4\n        /* \"contracts/DevVault.sol\":577:587  _setupRole */\n      tag_123\n        /* \"contracts/DevVault.sol\":577:615  _setupRole(DEFAULT_ADMIN_ROLE, _owner) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/DevVault.sol\":652:659  _tether */\n      dup3\n        /* \"contracts/DevVault.sol\":625:631  tether */\n      0xfb\n      0x00\n        /* \"contracts/DevVault.sol\":625:660  tether = IERC20Upgradeable(_tether) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3694  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3733:3734  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"contracts/DevVault.sol\":495:667  function initialize (address _tether, address _owner) public initializer{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3922:4142  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1764:1770  __self */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1755:1759  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1739:1819  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_96\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1861:1867  __self */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1855  _getImplementation */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1829:1916  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_101\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4037:4073  _authorizeUpgrade(newImplementation) */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4055:4072  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4037:4054  _authorizeUpgrade */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4037:4073  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4083:4135  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4105:4122  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4124:4128  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4130:4134  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4083:4104  _upgradeToAndCallUUPS */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4083:4135  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3922:4142  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DevVault.sol\":672:843  function withdraw (address _to) external onlyRole(DEFAULT_ADMIN_ROLE){... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"contracts/DevVault.sol\":722:740  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/DevVault.sol\":751:763  uint balance */\n      0x00\n        /* \"contracts/DevVault.sol\":766:772  tether */\n      0xfb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DevVault.sol\":766:782  tether.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/DevVault.sol\":791:795  this */\n      address\n        /* \"contracts/DevVault.sol\":766:797  tether.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/DevVault.sol\":751:797  uint balance = tether.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/DevVault.sol\":807:813  tether */\n      0xfb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DevVault.sol\":807:822  tether.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/DevVault.sol\":823:826  _to */\n      dup5\n        /* \"contracts/DevVault.sol\":828:835  balance */\n      dup4\n        /* \"contracts/DevVault.sol\":807:836  tether.transfer(_to, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      pop\n        /* \"contracts/DevVault.sol\":741:843  {... */\n      pop\n        /* \"contracts/DevVault.sol\":672:843  function withdraw (address _to) external onlyRole(DEFAULT_ADMIN_ROLE){... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3027:3158  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3105:3112  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2199:2205  __self */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2182:2205  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2190:2194  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2182:2205  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2174:2266  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1180:1246  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3131:3151  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3124:3151  return _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3027:3158  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3436:3440  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3465  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3466:3470  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3479  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3488  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3480:3487  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3488  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3452:3488  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5789:5807  getRoleAdmin(role) */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5802:5806  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5789:5801  getRoleAdmin */\n      tag_26\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5789:5807  getRoleAdmin(role) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5831:5835  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5837:5844  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5830  _revokeRole */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1081:1247  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1166:1170  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1204:1240  type(IERC165Upgradeable).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1189:1240  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1189:1200  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1189:1240  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1182:1240  return interfaceId == type(IERC165Upgradeable).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1081:1247  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3789:3892  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3866:3870  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3872:3884  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3872:3882  _msgSender */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3872:3884  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3865  _checkRole */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3789:3892  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8029:8033  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8028  hasRole */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8016:8165  if (!hasRole(role, account)) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8091:8095  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8065  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8066:8070  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8079  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8088  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8080:8087  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8088  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8151  _msgSender */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8132:8139  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8126:8130  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8016:8165  if (!hasRole(role, account)) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":939:946  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":958:975  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8433:8437  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8439:8446  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8432  hasRole */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8421:8570  if (hasRole(role, account)) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8495:8500  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8469  _roles */\n      0xc9\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8470:8474  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8483  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8492  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8484:8491  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8492  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8500  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8546:8558  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8546:8556  _msgSender */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8546:8558  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8537:8544  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8531:8535  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8421:8570  if (hasRole(role, account)) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1478:1629  function _getImplementation() internal view returns (address) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1531:1538  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1557:1616  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1180:1246  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1595:1615  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1557:1594  StorageSlotUpgradeable.getAddressSlot */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1557:1616  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1557:1622  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1550:1622  return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1478:1629  function _getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DevVault.sol\":848:973  function _authorizeUpgrade(... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"contracts/DevVault.sol\":951:969  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/DevVault.sol\":848:973  function _authorizeUpgrade(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2841:3785  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3257:3310  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT) */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":839:905  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3295:3309  _ROLLBACK_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3257:3294  StorageSlotUpgradeable.getBooleanSlot */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3257:3310  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3257:3316  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3253:3779  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3332:3369  _setImplementation(newImplementation) */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3351:3368  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3332:3350  _setImplementation */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3332:3369  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3253:3779  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      jump(tag_188)\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3433:3450  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3404:3465  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3404:3467  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x01\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3400:3702  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3631:3687  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3400:3702  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1180:1246  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3525:3545  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3517:3521  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3517:3545  slot == _IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3509:3591  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3468:3606  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3715:3768  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3733:3750  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3752:3756  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3758:3767  forceCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3715:3732  _upgradeToAndCall */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3715:3768  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3253:3779  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2841:3785  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1483:1487  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1735:1736  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1720  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1706:1736  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7288:7398  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7366:7391  _grantRole(role, account) */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7377:7381  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7383:7390  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7366:7376  _grantRole */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7366:7391  _grantRole(role, account) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7288:7398  function _setupRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4173:4674  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4269:4273  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4275:4282  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4268  hasRole */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4256:4668  if (!hasRole(role, account)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4475:4482  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4474  StringsUpgradeable.toHexString */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4593:4597  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4585:4598  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4600:4602  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4584  StringsUpgradeable.toHexString */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4351:4625  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4299:4657  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4256:4668  if (!hasRole(role, account)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4173:4674  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1870:2060  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1931:1952  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2040:2044  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2030:2044  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1870:2060  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2158:2348  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2219:2240  BooleanSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2328:2332  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2318:2332  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":2158:2348  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1720:2001  function _setImplementation(address newImplementation) private {... */\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1801:1849  AddressUpgradeable.isContract(newImplementation) */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1831:1848  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1801:1830  AddressUpgradeable.isContract */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1801:1849  AddressUpgradeable.isContract(newImplementation) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1793:1899  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1977:1994  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1909:1968  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1180:1246  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1947:1967  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1909:1946  StorageSlotUpgradeable.getAddressSlot */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1909:1968  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1909:1974  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1909:1994  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1720:2001  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2393:2669  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2501:2530  _upgradeTo(newImplementation) */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2512:2529  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2501:2511  _upgradeTo */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2501:2530  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2558:2559  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2548  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2555  data.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2559  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2572  data.length > 0 || forceCall */\n      dup1\n      tag_229\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2563:2572  forceCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2572  data.length > 0 || forceCall */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2540:2663  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2588:2652  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2628:2645  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2647:2651  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2588:2627  AddressUpgradeable.functionDelegateCall */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2588:2652  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_231:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2540:2663  if (data.length > 0 || forceCall) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2393:2669  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2531:2544  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2591:2595  addr */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2575:2597  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":376:378  20 */\n      0x14\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2574  toHexString */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2556:2615  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1959:1972  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2003  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2029:2030  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2020:2026  length */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2017  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2006:2031  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_108\n      jump\t// in\n    tag_241:\n    tag_240:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_242\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_242:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2031  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2047  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2048:2049  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2050  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_244\n      tag_245\n      jump\t// in\n    tag_244:\n    tag_243:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2072  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2073:2074  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2075  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_247\n      tag_245\n      jump\t// in\n    tag_247:\n    tag_246:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2105  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2121:2122  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2112:2118  length */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2109  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_251\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_252\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2122  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2128:2129  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2125  i */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2129  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2170  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2179:2182  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2176  value */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2182  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2183  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_254\n      tag_245\n      jump\t// in\n    tag_254:\n    tag_253:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2156  buffer */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2157:2158  i */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2159  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_256\n      tag_245\n      jump\t// in\n    tag_256:\n    tag_255:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2183  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2207:2208  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2197:2208  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2131:2134  --i */\n      dup1\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2245:2246  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2241  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2246  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2307:2313  buffer */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2293:2314  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2107:2259  function _upgradeTo(address newImplementation) internal {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2173:2210  _setImplementation(newImplementation) */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2192:2209  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2173:2191  _setImplementation */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2173:2210  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2234:2251  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2225:2252  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2107:2259  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6768:6780  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6820:6826  target */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6828:6832  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6819  functionDelegateCall */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6792:6876  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7210:7222  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7235:7247  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7249:7272  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7282  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7295  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7296:7300  data */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7301  target.delegatecall(data) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_272\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_271)\n    tag_272:\n      0x60\n      swap2\n      pop\n    tag_271:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7234:7301  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7345:7351  target */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7353:7360  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7362:7372  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7374:7386  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7344  verifyCallResultFromTarget */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7311:7387  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7862:7874  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7890:7897  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7938:7939  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7927  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7934  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7939  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8150  isContract(target) */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8143:8149  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8142  isContract */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8150  isContract(target) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8219:8229  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8212:8229  return returndata */\n      swap1\n      pop\n      jump(tag_275)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8268:8278  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8280:8292  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8267  _revert */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_275:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8832:9372  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9011:9012  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9001  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9008  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9012  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9219:9229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9213:9230  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9275:9290  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9262:9272  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9258:9260  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9254:9273  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9247:9291  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9342:9354  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9335:9355  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_289:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_290:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_291:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_292:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_293:\n        /* \"#utility.yul\":561:584   */\n      tag_367\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_292\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_368:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_294:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_370\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_293\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_18:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_373\n      tag_290\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":833:952   */\n    tag_372:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_374\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_294\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_295:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_296:\n        /* \"#utility.yul\":1268:1289   */\n      tag_377\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_295\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_21:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_379\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_296\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_297:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_298:\n        /* \"#utility.yul\":1674:1698   */\n      tag_382\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_297\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_383:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_299:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_385\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_298\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_25:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_388\n      tag_290\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1950:2069   */\n    tag_387:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_389\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_299\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_300:\n        /* \"#utility.yul\":2296:2320   */\n      tag_391\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_297\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_28:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_393\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_300\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_301:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_302:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_396\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_301\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_303:\n        /* \"#utility.yul\":2868:2892   */\n      tag_398\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_302\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_399:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_304:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_401\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_303\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_32:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_404\n      tag_290\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3161:3280   */\n    tag_403:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_405\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_299\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_406\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_304\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3877   */\n    tag_41:\n        /* \"#utility.yul\":3607:3613   */\n      0x00\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3635:3642   */\n      dup5\n        /* \"#utility.yul\":3631:3654   */\n      sub\n        /* \"#utility.yul\":3627:3659   */\n      slt\n        /* \"#utility.yul\":3624:3743   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3662:3741   */\n      tag_409\n      tag_290\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3624:3743   */\n    tag_408:\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3807:3860   */\n      tag_410\n        /* \"#utility.yul\":3852:3859   */\n      dup5\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_304\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3753:3870   */\n      pop\n        /* \"#utility.yul\":3548:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4357   */\n    tag_46:\n        /* \"#utility.yul\":3951:3957   */\n      0x00\n        /* \"#utility.yul\":3959:3965   */\n      dup1\n        /* \"#utility.yul\":4008:4010   */\n      0x40\n        /* \"#utility.yul\":3996:4005   */\n      dup4\n        /* \"#utility.yul\":3987:3994   */\n      dup6\n        /* \"#utility.yul\":3983:4006   */\n      sub\n        /* \"#utility.yul\":3979:4011   */\n      slt\n        /* \"#utility.yul\":3976:4095   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":4014:4093   */\n      tag_413\n      tag_290\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3976:4095   */\n    tag_412:\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4159:4212   */\n      tag_414\n        /* \"#utility.yul\":4204:4211   */\n      dup6\n        /* \"#utility.yul\":4195:4201   */\n      dup3\n        /* \"#utility.yul\":4184:4193   */\n      dup7\n        /* \"#utility.yul\":4180:4202   */\n      add\n        /* \"#utility.yul\":4159:4212   */\n      tag_304\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4149:4212   */\n      swap3\n      pop\n        /* \"#utility.yul\":4105:4222   */\n      pop\n        /* \"#utility.yul\":4261:4263   */\n      0x20\n        /* \"#utility.yul\":4287:4340   */\n      tag_415\n        /* \"#utility.yul\":4332:4339   */\n      dup6\n        /* \"#utility.yul\":4323:4329   */\n      dup3\n        /* \"#utility.yul\":4312:4321   */\n      dup7\n        /* \"#utility.yul\":4308:4330   */\n      add\n        /* \"#utility.yul\":4287:4340   */\n      tag_304\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4277:4340   */\n      swap2\n      pop\n        /* \"#utility.yul\":4232:4350   */\n      pop\n        /* \"#utility.yul\":3883:4357   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4480   */\n    tag_305:\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4469:4470   */\n      dup1\n        /* \"#utility.yul\":4462:4474   */\n      revert\n        /* \"#utility.yul\":4486:4603   */\n    tag_306:\n        /* \"#utility.yul\":4595:4596   */\n      0x00\n        /* \"#utility.yul\":4592:4593   */\n      dup1\n        /* \"#utility.yul\":4585:4597   */\n      revert\n        /* \"#utility.yul\":4609:4711   */\n    tag_307:\n        /* \"#utility.yul\":4650:4656   */\n      0x00\n        /* \"#utility.yul\":4701:4703   */\n      0x1f\n        /* \"#utility.yul\":4697:4704   */\n      not\n        /* \"#utility.yul\":4692:4694   */\n      0x1f\n        /* \"#utility.yul\":4685:4690   */\n      dup4\n        /* \"#utility.yul\":4681:4695   */\n      add\n        /* \"#utility.yul\":4677:4705   */\n      and\n        /* \"#utility.yul\":4667:4705   */\n      swap1\n      pop\n        /* \"#utility.yul\":4609:4711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4717:4897   */\n    tag_108:\n        /* \"#utility.yul\":4765:4842   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4762:4763   */\n      0x00\n        /* \"#utility.yul\":4755:4843   */\n      mstore\n        /* \"#utility.yul\":4862:4866   */\n      0x41\n        /* \"#utility.yul\":4859:4860   */\n      0x04\n        /* \"#utility.yul\":4852:4867   */\n      mstore\n        /* \"#utility.yul\":4886:4890   */\n      0x24\n        /* \"#utility.yul\":4883:4884   */\n      0x00\n        /* \"#utility.yul\":4876:4891   */\n      revert\n        /* \"#utility.yul\":4903:5184   */\n    tag_308:\n        /* \"#utility.yul\":4986:5013   */\n      tag_421\n        /* \"#utility.yul\":5008:5012   */\n      dup3\n        /* \"#utility.yul\":4986:5013   */\n      tag_307\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4978:4984   */\n      dup2\n        /* \"#utility.yul\":4974:5014   */\n      add\n        /* \"#utility.yul\":5116:5122   */\n      dup2\n        /* \"#utility.yul\":5104:5114   */\n      dup2\n        /* \"#utility.yul\":5101:5123   */\n      lt\n        /* \"#utility.yul\":5080:5098   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5068:5078   */\n      dup3\n        /* \"#utility.yul\":5065:5099   */\n      gt\n        /* \"#utility.yul\":5062:5124   */\n      or\n        /* \"#utility.yul\":5059:5147   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5127:5145   */\n      tag_423\n      tag_108\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5059:5147   */\n    tag_422:\n        /* \"#utility.yul\":5167:5177   */\n      dup1\n        /* \"#utility.yul\":5163:5165   */\n      0x40\n        /* \"#utility.yul\":5156:5178   */\n      mstore\n        /* \"#utility.yul\":4946:5184   */\n      pop\n        /* \"#utility.yul\":4903:5184   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5319   */\n    tag_309:\n        /* \"#utility.yul\":5224:5230   */\n      0x00\n        /* \"#utility.yul\":5251:5271   */\n      tag_425\n      tag_289\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5241:5271   */\n      swap1\n      pop\n        /* \"#utility.yul\":5280:5313   */\n      tag_426\n        /* \"#utility.yul\":5308:5312   */\n      dup3\n        /* \"#utility.yul\":5300:5306   */\n      dup3\n        /* \"#utility.yul\":5280:5313   */\n      tag_308\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5190:5319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5325:5632   */\n    tag_310:\n        /* \"#utility.yul\":5386:5390   */\n      0x00\n        /* \"#utility.yul\":5476:5494   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5468:5474   */\n      dup3\n        /* \"#utility.yul\":5465:5495   */\n      gt\n        /* \"#utility.yul\":5462:5518   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5498:5516   */\n      tag_429\n      tag_108\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5462:5518   */\n    tag_428:\n        /* \"#utility.yul\":5536:5565   */\n      tag_430\n        /* \"#utility.yul\":5558:5564   */\n      dup3\n        /* \"#utility.yul\":5536:5565   */\n      tag_307\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5528:5565   */\n      swap1\n      pop\n        /* \"#utility.yul\":5620:5624   */\n      0x20\n        /* \"#utility.yul\":5614:5618   */\n      dup2\n        /* \"#utility.yul\":5610:5625   */\n      add\n        /* \"#utility.yul\":5602:5625   */\n      swap1\n      pop\n        /* \"#utility.yul\":5325:5632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5638:5786   */\n    tag_311:\n        /* \"#utility.yul\":5736:5742   */\n      dup3\n        /* \"#utility.yul\":5731:5734   */\n      dup2\n        /* \"#utility.yul\":5726:5729   */\n      dup4\n        /* \"#utility.yul\":5713:5743   */\n      calldatacopy\n        /* \"#utility.yul\":5777:5778   */\n      0x00\n        /* \"#utility.yul\":5768:5774   */\n      dup4\n        /* \"#utility.yul\":5763:5766   */\n      dup4\n        /* \"#utility.yul\":5759:5775   */\n      add\n        /* \"#utility.yul\":5752:5779   */\n      mstore\n        /* \"#utility.yul\":5638:5786   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:6215   */\n    tag_312:\n        /* \"#utility.yul\":5869:5874   */\n      0x00\n        /* \"#utility.yul\":5894:5959   */\n      tag_433\n        /* \"#utility.yul\":5910:5958   */\n      tag_434\n        /* \"#utility.yul\":5951:5957   */\n      dup5\n        /* \"#utility.yul\":5910:5958   */\n      tag_310\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5894:5959   */\n      tag_309\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5885:5959   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5975:5980   */\n      dup2\n        /* \"#utility.yul\":5968:5989   */\n      mstore\n        /* \"#utility.yul\":6020:6024   */\n      0x20\n        /* \"#utility.yul\":6013:6018   */\n      dup2\n        /* \"#utility.yul\":6009:6025   */\n      add\n        /* \"#utility.yul\":6058:6061   */\n      dup5\n        /* \"#utility.yul\":6049:6055   */\n      dup5\n        /* \"#utility.yul\":6044:6047   */\n      dup5\n        /* \"#utility.yul\":6040:6056   */\n      add\n        /* \"#utility.yul\":6037:6062   */\n      gt\n        /* \"#utility.yul\":6034:6146   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":6065:6144   */\n      tag_436\n      tag_306\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6034:6146   */\n    tag_435:\n        /* \"#utility.yul\":6155:6209   */\n      tag_437\n        /* \"#utility.yul\":6202:6208   */\n      dup5\n        /* \"#utility.yul\":6197:6200   */\n      dup3\n        /* \"#utility.yul\":6192:6195   */\n      dup6\n        /* \"#utility.yul\":6155:6209   */\n      tag_311\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5875:6215   */\n      pop\n        /* \"#utility.yul\":5792:6215   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6234:6572   */\n    tag_313:\n        /* \"#utility.yul\":6289:6294   */\n      0x00\n        /* \"#utility.yul\":6338:6341   */\n      dup3\n        /* \"#utility.yul\":6331:6335   */\n      0x1f\n        /* \"#utility.yul\":6323:6329   */\n      dup4\n        /* \"#utility.yul\":6319:6336   */\n      add\n        /* \"#utility.yul\":6315:6342   */\n      slt\n        /* \"#utility.yul\":6305:6427   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6346:6425   */\n      tag_440\n      tag_305\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6305:6427   */\n    tag_439:\n        /* \"#utility.yul\":6463:6469   */\n      dup2\n        /* \"#utility.yul\":6450:6470   */\n      calldataload\n        /* \"#utility.yul\":6488:6566   */\n      tag_441\n        /* \"#utility.yul\":6562:6565   */\n      dup5\n        /* \"#utility.yul\":6554:6560   */\n      dup3\n        /* \"#utility.yul\":6547:6551   */\n      0x20\n        /* \"#utility.yul\":6539:6545   */\n      dup7\n        /* \"#utility.yul\":6535:6552   */\n      add\n        /* \"#utility.yul\":6488:6566   */\n      tag_312\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6479:6566   */\n      swap2\n      pop\n        /* \"#utility.yul\":6295:6572   */\n      pop\n        /* \"#utility.yul\":6234:6572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6578:7230   */\n    tag_50:\n        /* \"#utility.yul\":6655:6661   */\n      0x00\n        /* \"#utility.yul\":6663:6669   */\n      dup1\n        /* \"#utility.yul\":6712:6714   */\n      0x40\n        /* \"#utility.yul\":6700:6709   */\n      dup4\n        /* \"#utility.yul\":6691:6698   */\n      dup6\n        /* \"#utility.yul\":6687:6710   */\n      sub\n        /* \"#utility.yul\":6683:6715   */\n      slt\n        /* \"#utility.yul\":6680:6799   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":6718:6797   */\n      tag_444\n      tag_290\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":6680:6799   */\n    tag_443:\n        /* \"#utility.yul\":6838:6839   */\n      0x00\n        /* \"#utility.yul\":6863:6916   */\n      tag_445\n        /* \"#utility.yul\":6908:6915   */\n      dup6\n        /* \"#utility.yul\":6899:6905   */\n      dup3\n        /* \"#utility.yul\":6888:6897   */\n      dup7\n        /* \"#utility.yul\":6884:6906   */\n      add\n        /* \"#utility.yul\":6863:6916   */\n      tag_304\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6853:6916   */\n      swap3\n      pop\n        /* \"#utility.yul\":6809:6926   */\n      pop\n        /* \"#utility.yul\":6993:6995   */\n      0x20\n        /* \"#utility.yul\":6982:6991   */\n      dup4\n        /* \"#utility.yul\":6978:6996   */\n      add\n        /* \"#utility.yul\":6965:6997   */\n      calldataload\n        /* \"#utility.yul\":7024:7042   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7016:7022   */\n      dup2\n        /* \"#utility.yul\":7013:7043   */\n      gt\n        /* \"#utility.yul\":7010:7127   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7046:7125   */\n      tag_447\n      tag_291\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7010:7127   */\n    tag_446:\n        /* \"#utility.yul\":7151:7213   */\n      tag_448\n        /* \"#utility.yul\":7205:7212   */\n      dup6\n        /* \"#utility.yul\":7196:7202   */\n      dup3\n        /* \"#utility.yul\":7185:7194   */\n      dup7\n        /* \"#utility.yul\":7181:7203   */\n      add\n        /* \"#utility.yul\":7151:7213   */\n      tag_313\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7141:7213   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7223   */\n      pop\n        /* \"#utility.yul\":6578:7230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7236:7405   */\n    tag_314:\n        /* \"#utility.yul\":7320:7331   */\n      0x00\n        /* \"#utility.yul\":7354:7360   */\n      dup3\n        /* \"#utility.yul\":7349:7352   */\n      dup3\n        /* \"#utility.yul\":7342:7361   */\n      mstore\n        /* \"#utility.yul\":7394:7398   */\n      0x20\n        /* \"#utility.yul\":7389:7392   */\n      dup3\n        /* \"#utility.yul\":7385:7399   */\n      add\n        /* \"#utility.yul\":7370:7399   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7411:7645   */\n    tag_315:\n        /* \"#utility.yul\":7551:7585   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":7547:7548   */\n      0x00\n        /* \"#utility.yul\":7539:7545   */\n      dup3\n        /* \"#utility.yul\":7535:7549   */\n      add\n        /* \"#utility.yul\":7528:7586   */\n      mstore\n        /* \"#utility.yul\":7620:7637   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":7615:7617   */\n      0x20\n        /* \"#utility.yul\":7607:7613   */\n      dup3\n        /* \"#utility.yul\":7603:7618   */\n      add\n        /* \"#utility.yul\":7596:7638   */\n      mstore\n        /* \"#utility.yul\":7411:7645   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7651:8017   */\n    tag_316:\n        /* \"#utility.yul\":7793:7796   */\n      0x00\n        /* \"#utility.yul\":7814:7881   */\n      tag_452\n        /* \"#utility.yul\":7878:7880   */\n      0x2f\n        /* \"#utility.yul\":7873:7876   */\n      dup4\n        /* \"#utility.yul\":7814:7881   */\n      tag_314\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":7807:7881   */\n      swap2\n      pop\n        /* \"#utility.yul\":7890:7983   */\n      tag_453\n        /* \"#utility.yul\":7979:7982   */\n      dup3\n        /* \"#utility.yul\":7890:7983   */\n      tag_315\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8008:8010   */\n      0x40\n        /* \"#utility.yul\":8003:8006   */\n      dup3\n        /* \"#utility.yul\":7999:8011   */\n      add\n        /* \"#utility.yul\":7992:8011   */\n      swap1\n      pop\n        /* \"#utility.yul\":7651:8017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8023:8442   */\n    tag_90:\n        /* \"#utility.yul\":8189:8193   */\n      0x00\n        /* \"#utility.yul\":8227:8229   */\n      0x20\n        /* \"#utility.yul\":8216:8225   */\n      dup3\n        /* \"#utility.yul\":8212:8230   */\n      add\n        /* \"#utility.yul\":8204:8230   */\n      swap1\n      pop\n        /* \"#utility.yul\":8276:8285   */\n      dup2\n        /* \"#utility.yul\":8270:8274   */\n      dup2\n        /* \"#utility.yul\":8266:8286   */\n      sub\n        /* \"#utility.yul\":8262:8263   */\n      0x00\n        /* \"#utility.yul\":8251:8260   */\n      dup4\n        /* \"#utility.yul\":8247:8264   */\n      add\n        /* \"#utility.yul\":8240:8287   */\n      mstore\n        /* \"#utility.yul\":8304:8435   */\n      tag_455\n        /* \"#utility.yul\":8430:8434   */\n      dup2\n        /* \"#utility.yul\":8304:8435   */\n      tag_316\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8296:8435   */\n      swap1\n      pop\n        /* \"#utility.yul\":8023:8442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8448:8679   */\n    tag_317:\n        /* \"#utility.yul\":8588:8622   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":8584:8585   */\n      0x00\n        /* \"#utility.yul\":8576:8582   */\n      dup3\n        /* \"#utility.yul\":8572:8586   */\n      add\n        /* \"#utility.yul\":8565:8623   */\n      mstore\n        /* \"#utility.yul\":8657:8671   */\n      0x64656c656761746563616c6c0000000000000000000000000000000000000000\n        /* \"#utility.yul\":8652:8654   */\n      0x20\n        /* \"#utility.yul\":8644:8650   */\n      dup3\n        /* \"#utility.yul\":8640:8655   */\n      add\n        /* \"#utility.yul\":8633:8672   */\n      mstore\n        /* \"#utility.yul\":8448:8679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8685:9051   */\n    tag_318:\n        /* \"#utility.yul\":8827:8830   */\n      0x00\n        /* \"#utility.yul\":8848:8915   */\n      tag_458\n        /* \"#utility.yul\":8912:8914   */\n      0x2c\n        /* \"#utility.yul\":8907:8910   */\n      dup4\n        /* \"#utility.yul\":8848:8915   */\n      tag_314\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8841:8915   */\n      swap2\n      pop\n        /* \"#utility.yul\":8924:9017   */\n      tag_459\n        /* \"#utility.yul\":9013:9016   */\n      dup3\n        /* \"#utility.yul\":8924:9017   */\n      tag_317\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9042:9044   */\n      0x40\n        /* \"#utility.yul\":9037:9040   */\n      dup3\n        /* \"#utility.yul\":9033:9045   */\n      add\n        /* \"#utility.yul\":9026:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8685:9051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9057:9476   */\n    tag_96:\n        /* \"#utility.yul\":9223:9227   */\n      0x00\n        /* \"#utility.yul\":9261:9263   */\n      0x20\n        /* \"#utility.yul\":9250:9259   */\n      dup3\n        /* \"#utility.yul\":9246:9264   */\n      add\n        /* \"#utility.yul\":9238:9264   */\n      swap1\n      pop\n        /* \"#utility.yul\":9310:9319   */\n      dup2\n        /* \"#utility.yul\":9304:9308   */\n      dup2\n        /* \"#utility.yul\":9300:9320   */\n      sub\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9285:9294   */\n      dup4\n        /* \"#utility.yul\":9281:9298   */\n      add\n        /* \"#utility.yul\":9274:9321   */\n      mstore\n        /* \"#utility.yul\":9338:9469   */\n      tag_461\n        /* \"#utility.yul\":9464:9468   */\n      dup2\n        /* \"#utility.yul\":9338:9469   */\n      tag_318\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9330:9469   */\n      swap1\n      pop\n        /* \"#utility.yul\":9057:9476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9482:9713   */\n    tag_319:\n        /* \"#utility.yul\":9622:9656   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":9618:9619   */\n      0x00\n        /* \"#utility.yul\":9610:9616   */\n      dup3\n        /* \"#utility.yul\":9606:9620   */\n      add\n        /* \"#utility.yul\":9599:9657   */\n      mstore\n        /* \"#utility.yul\":9691:9705   */\n      0x6163746976652070726f78790000000000000000000000000000000000000000\n        /* \"#utility.yul\":9686:9688   */\n      0x20\n        /* \"#utility.yul\":9678:9684   */\n      dup3\n        /* \"#utility.yul\":9674:9689   */\n      add\n        /* \"#utility.yul\":9667:9706   */\n      mstore\n        /* \"#utility.yul\":9482:9713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9719:10085   */\n    tag_320:\n        /* \"#utility.yul\":9861:9864   */\n      0x00\n        /* \"#utility.yul\":9882:9949   */\n      tag_464\n        /* \"#utility.yul\":9946:9948   */\n      0x2c\n        /* \"#utility.yul\":9941:9944   */\n      dup4\n        /* \"#utility.yul\":9882:9949   */\n      tag_314\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9875:9949   */\n      swap2\n      pop\n        /* \"#utility.yul\":9958:10051   */\n      tag_465\n        /* \"#utility.yul\":10047:10050   */\n      dup3\n        /* \"#utility.yul\":9958:10051   */\n      tag_319\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10076:10078   */\n      0x40\n        /* \"#utility.yul\":10071:10074   */\n      dup3\n        /* \"#utility.yul\":10067:10079   */\n      add\n        /* \"#utility.yul\":10060:10079   */\n      swap1\n      pop\n        /* \"#utility.yul\":9719:10085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10091:10510   */\n    tag_101:\n        /* \"#utility.yul\":10257:10261   */\n      0x00\n        /* \"#utility.yul\":10295:10297   */\n      0x20\n        /* \"#utility.yul\":10284:10293   */\n      dup3\n        /* \"#utility.yul\":10280:10298   */\n      add\n        /* \"#utility.yul\":10272:10298   */\n      swap1\n      pop\n        /* \"#utility.yul\":10344:10353   */\n      dup2\n        /* \"#utility.yul\":10338:10342   */\n      dup2\n        /* \"#utility.yul\":10334:10354   */\n      sub\n        /* \"#utility.yul\":10330:10331   */\n      0x00\n        /* \"#utility.yul\":10319:10328   */\n      dup4\n        /* \"#utility.yul\":10315:10332   */\n      add\n        /* \"#utility.yul\":10308:10355   */\n      mstore\n        /* \"#utility.yul\":10372:10503   */\n      tag_467\n        /* \"#utility.yul\":10498:10502   */\n      dup2\n        /* \"#utility.yul\":10372:10503   */\n      tag_320\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10364:10503   */\n      swap1\n      pop\n        /* \"#utility.yul\":10091:10510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10516:10749   */\n    tag_321:\n        /* \"#utility.yul\":10656:10690   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":10652:10653   */\n      0x00\n        /* \"#utility.yul\":10644:10650   */\n      dup3\n        /* \"#utility.yul\":10640:10654   */\n      add\n        /* \"#utility.yul\":10633:10691   */\n      mstore\n        /* \"#utility.yul\":10725:10741   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":10720:10722   */\n      0x20\n        /* \"#utility.yul\":10712:10718   */\n      dup3\n        /* \"#utility.yul\":10708:10723   */\n      add\n        /* \"#utility.yul\":10701:10742   */\n      mstore\n        /* \"#utility.yul\":10516:10749   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10755:11121   */\n    tag_322:\n        /* \"#utility.yul\":10897:10900   */\n      0x00\n        /* \"#utility.yul\":10918:10985   */\n      tag_470\n        /* \"#utility.yul\":10982:10984   */\n      0x2e\n        /* \"#utility.yul\":10977:10980   */\n      dup4\n        /* \"#utility.yul\":10918:10985   */\n      tag_314\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10911:10985   */\n      swap2\n      pop\n        /* \"#utility.yul\":10994:11087   */\n      tag_471\n        /* \"#utility.yul\":11083:11086   */\n      dup3\n        /* \"#utility.yul\":10994:11087   */\n      tag_321\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11112:11114   */\n      0x40\n        /* \"#utility.yul\":11107:11110   */\n      dup3\n        /* \"#utility.yul\":11103:11115   */\n      add\n        /* \"#utility.yul\":11096:11115   */\n      swap1\n      pop\n        /* \"#utility.yul\":10755:11121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11127:11546   */\n    tag_119:\n        /* \"#utility.yul\":11293:11297   */\n      0x00\n        /* \"#utility.yul\":11331:11333   */\n      0x20\n        /* \"#utility.yul\":11320:11329   */\n      dup3\n        /* \"#utility.yul\":11316:11334   */\n      add\n        /* \"#utility.yul\":11308:11334   */\n      swap1\n      pop\n        /* \"#utility.yul\":11380:11389   */\n      dup2\n        /* \"#utility.yul\":11374:11378   */\n      dup2\n        /* \"#utility.yul\":11370:11390   */\n      sub\n        /* \"#utility.yul\":11366:11367   */\n      0x00\n        /* \"#utility.yul\":11355:11364   */\n      dup4\n        /* \"#utility.yul\":11351:11368   */\n      add\n        /* \"#utility.yul\":11344:11391   */\n      mstore\n        /* \"#utility.yul\":11408:11539   */\n      tag_473\n        /* \"#utility.yul\":11534:11538   */\n      dup2\n        /* \"#utility.yul\":11408:11539   */\n      tag_322\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11400:11539   */\n      swap1\n      pop\n        /* \"#utility.yul\":11127:11546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11552:11637   */\n    tag_323:\n        /* \"#utility.yul\":11597:11604   */\n      0x00\n        /* \"#utility.yul\":11626:11631   */\n      dup2\n        /* \"#utility.yul\":11615:11631   */\n      swap1\n      pop\n        /* \"#utility.yul\":11552:11637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11643:11729   */\n    tag_324:\n        /* \"#utility.yul\":11678:11685   */\n      0x00\n        /* \"#utility.yul\":11718:11722   */\n      0xff\n        /* \"#utility.yul\":11711:11716   */\n      dup3\n        /* \"#utility.yul\":11707:11723   */\n      and\n        /* \"#utility.yul\":11696:11723   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:11729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11735:11795   */\n    tag_325:\n        /* \"#utility.yul\":11763:11766   */\n      0x00\n        /* \"#utility.yul\":11784:11789   */\n      dup2\n        /* \"#utility.yul\":11777:11789   */\n      swap1\n      pop\n        /* \"#utility.yul\":11735:11795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11801:11955   */\n    tag_326:\n        /* \"#utility.yul\":11857:11866   */\n      0x00\n        /* \"#utility.yul\":11890:11949   */\n      tag_478\n        /* \"#utility.yul\":11906:11948   */\n      tag_479\n        /* \"#utility.yul\":11915:11947   */\n      tag_480\n        /* \"#utility.yul\":11941:11946   */\n      dup5\n        /* \"#utility.yul\":11915:11947   */\n      tag_323\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11906:11948   */\n      tag_325\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11890:11949   */\n      tag_324\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11877:11949   */\n      swap1\n      pop\n        /* \"#utility.yul\":11801:11955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11961:12104   */\n    tag_327:\n        /* \"#utility.yul\":12054:12097   */\n      tag_482\n        /* \"#utility.yul\":12091:12096   */\n      dup2\n        /* \"#utility.yul\":12054:12097   */\n      tag_326\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12049:12052   */\n      dup3\n        /* \"#utility.yul\":12042:12098   */\n      mstore\n        /* \"#utility.yul\":11961:12104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12110:12344   */\n    tag_126:\n        /* \"#utility.yul\":12209:12213   */\n      0x00\n        /* \"#utility.yul\":12247:12249   */\n      0x20\n        /* \"#utility.yul\":12236:12245   */\n      dup3\n        /* \"#utility.yul\":12232:12250   */\n      add\n        /* \"#utility.yul\":12224:12250   */\n      swap1\n      pop\n        /* \"#utility.yul\":12260:12337   */\n      tag_484\n        /* \"#utility.yul\":12334:12335   */\n      0x00\n        /* \"#utility.yul\":12323:12332   */\n      dup4\n        /* \"#utility.yul\":12319:12336   */\n      add\n        /* \"#utility.yul\":12310:12316   */\n      dup5\n        /* \"#utility.yul\":12260:12337   */\n      tag_327\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12110:12344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12350:12468   */\n    tag_328:\n        /* \"#utility.yul\":12437:12461   */\n      tag_486\n        /* \"#utility.yul\":12455:12460   */\n      dup2\n        /* \"#utility.yul\":12437:12461   */\n      tag_302\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12432:12435   */\n      dup3\n        /* \"#utility.yul\":12425:12462   */\n      mstore\n        /* \"#utility.yul\":12350:12468   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12474:12696   */\n    tag_140:\n        /* \"#utility.yul\":12567:12571   */\n      0x00\n        /* \"#utility.yul\":12605:12607   */\n      0x20\n        /* \"#utility.yul\":12594:12603   */\n      dup3\n        /* \"#utility.yul\":12590:12608   */\n      add\n        /* \"#utility.yul\":12582:12608   */\n      swap1\n      pop\n        /* \"#utility.yul\":12618:12689   */\n      tag_488\n        /* \"#utility.yul\":12686:12687   */\n      0x00\n        /* \"#utility.yul\":12675:12684   */\n      dup4\n        /* \"#utility.yul\":12671:12688   */\n      add\n        /* \"#utility.yul\":12662:12668   */\n      dup5\n        /* \"#utility.yul\":12618:12689   */\n      tag_328\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12474:12696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12702:12779   */\n    tag_329:\n        /* \"#utility.yul\":12739:12746   */\n      0x00\n        /* \"#utility.yul\":12768:12773   */\n      dup2\n        /* \"#utility.yul\":12757:12773   */\n      swap1\n      pop\n        /* \"#utility.yul\":12702:12779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12785:12907   */\n    tag_330:\n        /* \"#utility.yul\":12858:12882   */\n      tag_491\n        /* \"#utility.yul\":12876:12881   */\n      dup2\n        /* \"#utility.yul\":12858:12882   */\n      tag_329\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12851:12856   */\n      dup2\n        /* \"#utility.yul\":12848:12883   */\n      eq\n        /* \"#utility.yul\":12838:12901   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":12897:12898   */\n      0x00\n        /* \"#utility.yul\":12894:12895   */\n      dup1\n        /* \"#utility.yul\":12887:12899   */\n      revert\n        /* \"#utility.yul\":12838:12901   */\n    tag_492:\n        /* \"#utility.yul\":12785:12907   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12913:13056   */\n    tag_331:\n        /* \"#utility.yul\":12970:12975   */\n      0x00\n        /* \"#utility.yul\":13001:13007   */\n      dup2\n        /* \"#utility.yul\":12995:13008   */\n      mload\n        /* \"#utility.yul\":12986:13008   */\n      swap1\n      pop\n        /* \"#utility.yul\":13017:13050   */\n      tag_494\n        /* \"#utility.yul\":13044:13049   */\n      dup2\n        /* \"#utility.yul\":13017:13050   */\n      tag_330\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12913:13056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13062:13413   */\n    tag_144:\n        /* \"#utility.yul\":13132:13138   */\n      0x00\n        /* \"#utility.yul\":13181:13183   */\n      0x20\n        /* \"#utility.yul\":13169:13178   */\n      dup3\n        /* \"#utility.yul\":13160:13167   */\n      dup5\n        /* \"#utility.yul\":13156:13179   */\n      sub\n        /* \"#utility.yul\":13152:13184   */\n      slt\n        /* \"#utility.yul\":13149:13268   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":13187:13266   */\n      tag_497\n      tag_290\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13149:13268   */\n    tag_496:\n        /* \"#utility.yul\":13307:13308   */\n      0x00\n        /* \"#utility.yul\":13332:13396   */\n      tag_498\n        /* \"#utility.yul\":13388:13395   */\n      dup5\n        /* \"#utility.yul\":13379:13385   */\n      dup3\n        /* \"#utility.yul\":13368:13377   */\n      dup6\n        /* \"#utility.yul\":13364:13386   */\n      add\n        /* \"#utility.yul\":13332:13396   */\n      tag_331\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13322:13396   */\n      swap2\n      pop\n        /* \"#utility.yul\":13278:13406   */\n      pop\n        /* \"#utility.yul\":13062:13413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13419:13537   */\n    tag_332:\n        /* \"#utility.yul\":13506:13530   */\n      tag_500\n        /* \"#utility.yul\":13524:13529   */\n      dup2\n        /* \"#utility.yul\":13506:13530   */\n      tag_329\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13501:13504   */\n      dup3\n        /* \"#utility.yul\":13494:13531   */\n      mstore\n        /* \"#utility.yul\":13419:13537   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13543:13875   */\n    tag_146:\n        /* \"#utility.yul\":13664:13668   */\n      0x00\n        /* \"#utility.yul\":13702:13704   */\n      0x40\n        /* \"#utility.yul\":13691:13700   */\n      dup3\n        /* \"#utility.yul\":13687:13705   */\n      add\n        /* \"#utility.yul\":13679:13705   */\n      swap1\n      pop\n        /* \"#utility.yul\":13715:13786   */\n      tag_502\n        /* \"#utility.yul\":13783:13784   */\n      0x00\n        /* \"#utility.yul\":13772:13781   */\n      dup4\n        /* \"#utility.yul\":13768:13785   */\n      add\n        /* \"#utility.yul\":13759:13765   */\n      dup6\n        /* \"#utility.yul\":13715:13786   */\n      tag_328\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13796:13868   */\n      tag_503\n        /* \"#utility.yul\":13864:13866   */\n      0x20\n        /* \"#utility.yul\":13853:13862   */\n      dup4\n        /* \"#utility.yul\":13849:13867   */\n      add\n        /* \"#utility.yul\":13840:13846   */\n      dup5\n        /* \"#utility.yul\":13796:13868   */\n      tag_332\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13543:13875   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13881:13997   */\n    tag_333:\n        /* \"#utility.yul\":13951:13972   */\n      tag_505\n        /* \"#utility.yul\":13966:13971   */\n      dup2\n        /* \"#utility.yul\":13951:13972   */\n      tag_295\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13944:13949   */\n      dup2\n        /* \"#utility.yul\":13941:13973   */\n      eq\n        /* \"#utility.yul\":13931:13991   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":13987:13988   */\n      0x00\n        /* \"#utility.yul\":13984:13985   */\n      dup1\n        /* \"#utility.yul\":13977:13989   */\n      revert\n        /* \"#utility.yul\":13931:13991   */\n    tag_506:\n        /* \"#utility.yul\":13881:13997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14003:14140   */\n    tag_334:\n        /* \"#utility.yul\":14057:14062   */\n      0x00\n        /* \"#utility.yul\":14088:14094   */\n      dup2\n        /* \"#utility.yul\":14082:14095   */\n      mload\n        /* \"#utility.yul\":14073:14095   */\n      swap1\n      pop\n        /* \"#utility.yul\":14104:14134   */\n      tag_508\n        /* \"#utility.yul\":14128:14133   */\n      dup2\n        /* \"#utility.yul\":14104:14134   */\n      tag_333\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14003:14140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14146:14491   */\n    tag_150:\n        /* \"#utility.yul\":14213:14219   */\n      0x00\n        /* \"#utility.yul\":14262:14264   */\n      0x20\n        /* \"#utility.yul\":14250:14259   */\n      dup3\n        /* \"#utility.yul\":14241:14248   */\n      dup5\n        /* \"#utility.yul\":14237:14260   */\n      sub\n        /* \"#utility.yul\":14233:14265   */\n      slt\n        /* \"#utility.yul\":14230:14349   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":14268:14347   */\n      tag_511\n      tag_290\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":14230:14349   */\n    tag_510:\n        /* \"#utility.yul\":14388:14389   */\n      0x00\n        /* \"#utility.yul\":14413:14474   */\n      tag_512\n        /* \"#utility.yul\":14466:14473   */\n      dup5\n        /* \"#utility.yul\":14457:14463   */\n      dup3\n        /* \"#utility.yul\":14446:14455   */\n      dup6\n        /* \"#utility.yul\":14442:14464   */\n      add\n        /* \"#utility.yul\":14413:14474   */\n      tag_334\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14403:14474   */\n      swap2\n      pop\n        /* \"#utility.yul\":14359:14484   */\n      pop\n        /* \"#utility.yul\":14146:14491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14497:14740   */\n    tag_335:\n        /* \"#utility.yul\":14637:14671   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":14633:14634   */\n      0x00\n        /* \"#utility.yul\":14625:14631   */\n      dup3\n        /* \"#utility.yul\":14621:14635   */\n      add\n        /* \"#utility.yul\":14614:14672   */\n      mstore\n        /* \"#utility.yul\":14706:14732   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":14701:14703   */\n      0x20\n        /* \"#utility.yul\":14693:14699   */\n      dup3\n        /* \"#utility.yul\":14689:14704   */\n      add\n        /* \"#utility.yul\":14682:14733   */\n      mstore\n        /* \"#utility.yul\":14497:14740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14746:15112   */\n    tag_336:\n        /* \"#utility.yul\":14888:14891   */\n      0x00\n        /* \"#utility.yul\":14909:14976   */\n      tag_515\n        /* \"#utility.yul\":14973:14975   */\n      0x38\n        /* \"#utility.yul\":14968:14971   */\n      dup4\n        /* \"#utility.yul\":14909:14976   */\n      tag_314\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14902:14976   */\n      swap2\n      pop\n        /* \"#utility.yul\":14985:15078   */\n      tag_516\n        /* \"#utility.yul\":15074:15077   */\n      dup3\n        /* \"#utility.yul\":14985:15078   */\n      tag_335\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15103:15105   */\n      0x40\n        /* \"#utility.yul\":15098:15101   */\n      dup3\n        /* \"#utility.yul\":15094:15106   */\n      add\n        /* \"#utility.yul\":15087:15106   */\n      swap1\n      pop\n        /* \"#utility.yul\":14746:15112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15118:15537   */\n    tag_154:\n        /* \"#utility.yul\":15284:15288   */\n      0x00\n        /* \"#utility.yul\":15322:15324   */\n      0x20\n        /* \"#utility.yul\":15311:15320   */\n      dup3\n        /* \"#utility.yul\":15307:15325   */\n      add\n        /* \"#utility.yul\":15299:15325   */\n      swap1\n      pop\n        /* \"#utility.yul\":15371:15380   */\n      dup2\n        /* \"#utility.yul\":15365:15369   */\n      dup2\n        /* \"#utility.yul\":15361:15381   */\n      sub\n        /* \"#utility.yul\":15357:15358   */\n      0x00\n        /* \"#utility.yul\":15346:15355   */\n      dup4\n        /* \"#utility.yul\":15342:15359   */\n      add\n        /* \"#utility.yul\":15335:15382   */\n      mstore\n        /* \"#utility.yul\":15399:15530   */\n      tag_518\n        /* \"#utility.yul\":15525:15529   */\n      dup2\n        /* \"#utility.yul\":15399:15530   */\n      tag_336\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15391:15530   */\n      swap1\n      pop\n        /* \"#utility.yul\":15118:15537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15543:15686   */\n    tag_337:\n        /* \"#utility.yul\":15600:15605   */\n      0x00\n        /* \"#utility.yul\":15631:15637   */\n      dup2\n        /* \"#utility.yul\":15625:15638   */\n      mload\n        /* \"#utility.yul\":15616:15638   */\n      swap1\n      pop\n        /* \"#utility.yul\":15647:15680   */\n      tag_520\n        /* \"#utility.yul\":15674:15679   */\n      dup2\n        /* \"#utility.yul\":15647:15680   */\n      tag_298\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15543:15686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15692:16043   */\n    tag_191:\n        /* \"#utility.yul\":15762:15768   */\n      0x00\n        /* \"#utility.yul\":15811:15813   */\n      0x20\n        /* \"#utility.yul\":15799:15808   */\n      dup3\n        /* \"#utility.yul\":15790:15797   */\n      dup5\n        /* \"#utility.yul\":15786:15809   */\n      sub\n        /* \"#utility.yul\":15782:15814   */\n      slt\n        /* \"#utility.yul\":15779:15898   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":15817:15896   */\n      tag_523\n      tag_290\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15779:15898   */\n    tag_522:\n        /* \"#utility.yul\":15937:15938   */\n      0x00\n        /* \"#utility.yul\":15962:16026   */\n      tag_524\n        /* \"#utility.yul\":16018:16025   */\n      dup5\n        /* \"#utility.yul\":16009:16015   */\n      dup3\n        /* \"#utility.yul\":15998:16007   */\n      dup6\n        /* \"#utility.yul\":15994:16016   */\n      add\n        /* \"#utility.yul\":15962:16026   */\n      tag_337\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15952:16026   */\n      swap2\n      pop\n        /* \"#utility.yul\":15908:16036   */\n      pop\n        /* \"#utility.yul\":15692:16043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16049:16282   */\n    tag_338:\n        /* \"#utility.yul\":16189:16223   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":16185:16186   */\n      0x00\n        /* \"#utility.yul\":16177:16183   */\n      dup3\n        /* \"#utility.yul\":16173:16187   */\n      add\n        /* \"#utility.yul\":16166:16224   */\n      mstore\n        /* \"#utility.yul\":16258:16274   */\n      0x6f6e206973206e6f742055555053000000000000000000000000000000000000\n        /* \"#utility.yul\":16253:16255   */\n      0x20\n        /* \"#utility.yul\":16245:16251   */\n      dup3\n        /* \"#utility.yul\":16241:16256   */\n      add\n        /* \"#utility.yul\":16234:16275   */\n      mstore\n        /* \"#utility.yul\":16049:16282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16288:16654   */\n    tag_339:\n        /* \"#utility.yul\":16430:16433   */\n      0x00\n        /* \"#utility.yul\":16451:16518   */\n      tag_527\n        /* \"#utility.yul\":16515:16517   */\n      0x2e\n        /* \"#utility.yul\":16510:16513   */\n      dup4\n        /* \"#utility.yul\":16451:16518   */\n      tag_314\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":16444:16518   */\n      swap2\n      pop\n        /* \"#utility.yul\":16527:16620   */\n      tag_528\n        /* \"#utility.yul\":16616:16619   */\n      dup3\n        /* \"#utility.yul\":16527:16620   */\n      tag_338\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":16645:16647   */\n      0x40\n        /* \"#utility.yul\":16640:16643   */\n      dup3\n        /* \"#utility.yul\":16636:16648   */\n      add\n        /* \"#utility.yul\":16629:16648   */\n      swap1\n      pop\n        /* \"#utility.yul\":16288:16654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16660:17079   */\n    tag_197:\n        /* \"#utility.yul\":16826:16830   */\n      0x00\n        /* \"#utility.yul\":16864:16866   */\n      0x20\n        /* \"#utility.yul\":16853:16862   */\n      dup3\n        /* \"#utility.yul\":16849:16867   */\n      add\n        /* \"#utility.yul\":16841:16867   */\n      swap1\n      pop\n        /* \"#utility.yul\":16913:16922   */\n      dup2\n        /* \"#utility.yul\":16907:16911   */\n      dup2\n        /* \"#utility.yul\":16903:16923   */\n      sub\n        /* \"#utility.yul\":16899:16900   */\n      0x00\n        /* \"#utility.yul\":16888:16897   */\n      dup4\n        /* \"#utility.yul\":16884:16901   */\n      add\n        /* \"#utility.yul\":16877:16924   */\n      mstore\n        /* \"#utility.yul\":16941:17072   */\n      tag_530\n        /* \"#utility.yul\":17067:17071   */\n      dup2\n        /* \"#utility.yul\":16941:17072   */\n      tag_339\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16933:17072   */\n      swap1\n      pop\n        /* \"#utility.yul\":16660:17079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17085:17313   */\n    tag_340:\n        /* \"#utility.yul\":17225:17259   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":17221:17222   */\n      0x00\n        /* \"#utility.yul\":17213:17219   */\n      dup3\n        /* \"#utility.yul\":17209:17223   */\n      add\n        /* \"#utility.yul\":17202:17260   */\n      mstore\n        /* \"#utility.yul\":17294:17305   */\n      0x6961626c65555549440000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17289:17291   */\n      0x20\n        /* \"#utility.yul\":17281:17287   */\n      dup3\n        /* \"#utility.yul\":17277:17292   */\n      add\n        /* \"#utility.yul\":17270:17306   */\n      mstore\n        /* \"#utility.yul\":17085:17313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17319:17685   */\n    tag_341:\n        /* \"#utility.yul\":17461:17464   */\n      0x00\n        /* \"#utility.yul\":17482:17549   */\n      tag_533\n        /* \"#utility.yul\":17546:17548   */\n      0x29\n        /* \"#utility.yul\":17541:17544   */\n      dup4\n        /* \"#utility.yul\":17482:17549   */\n      tag_314\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":17475:17549   */\n      swap2\n      pop\n        /* \"#utility.yul\":17558:17651   */\n      tag_534\n        /* \"#utility.yul\":17647:17650   */\n      dup3\n        /* \"#utility.yul\":17558:17651   */\n      tag_340\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":17676:17678   */\n      0x40\n        /* \"#utility.yul\":17671:17674   */\n      dup3\n        /* \"#utility.yul\":17667:17679   */\n      add\n        /* \"#utility.yul\":17660:17679   */\n      swap1\n      pop\n        /* \"#utility.yul\":17319:17685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17691:18110   */\n    tag_201:\n        /* \"#utility.yul\":17857:17861   */\n      0x00\n        /* \"#utility.yul\":17895:17897   */\n      0x20\n        /* \"#utility.yul\":17884:17893   */\n      dup3\n        /* \"#utility.yul\":17880:17898   */\n      add\n        /* \"#utility.yul\":17872:17898   */\n      swap1\n      pop\n        /* \"#utility.yul\":17944:17953   */\n      dup2\n        /* \"#utility.yul\":17938:17942   */\n      dup2\n        /* \"#utility.yul\":17934:17954   */\n      sub\n        /* \"#utility.yul\":17930:17931   */\n      0x00\n        /* \"#utility.yul\":17919:17928   */\n      dup4\n        /* \"#utility.yul\":17915:17932   */\n      add\n        /* \"#utility.yul\":17908:17955   */\n      mstore\n        /* \"#utility.yul\":17972:18103   */\n      tag_536\n        /* \"#utility.yul\":18098:18102   */\n      dup2\n        /* \"#utility.yul\":17972:18103   */\n      tag_341\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":17964:18103   */\n      swap1\n      pop\n        /* \"#utility.yul\":17691:18110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18116:18264   */\n    tag_342:\n        /* \"#utility.yul\":18218:18229   */\n      0x00\n        /* \"#utility.yul\":18255:18258   */\n      dup2\n        /* \"#utility.yul\":18240:18258   */\n      swap1\n      pop\n        /* \"#utility.yul\":18116:18264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18270:18443   */\n    tag_343:\n        /* \"#utility.yul\":18410:18435   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":18406:18407   */\n      0x00\n        /* \"#utility.yul\":18398:18404   */\n      dup3\n        /* \"#utility.yul\":18394:18408   */\n      add\n        /* \"#utility.yul\":18387:18436   */\n      mstore\n        /* \"#utility.yul\":18270:18443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18449:18851   */\n    tag_344:\n        /* \"#utility.yul\":18609:18612   */\n      0x00\n        /* \"#utility.yul\":18630:18715   */\n      tag_540\n        /* \"#utility.yul\":18712:18714   */\n      0x17\n        /* \"#utility.yul\":18707:18710   */\n      dup4\n        /* \"#utility.yul\":18630:18715   */\n      tag_342\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":18623:18715   */\n      swap2\n      pop\n        /* \"#utility.yul\":18724:18817   */\n      tag_541\n        /* \"#utility.yul\":18813:18816   */\n      dup3\n        /* \"#utility.yul\":18724:18817   */\n      tag_343\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18842:18844   */\n      0x17\n        /* \"#utility.yul\":18837:18840   */\n      dup3\n        /* \"#utility.yul\":18833:18845   */\n      add\n        /* \"#utility.yul\":18826:18845   */\n      swap1\n      pop\n        /* \"#utility.yul\":18449:18851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18857:18956   */\n    tag_345:\n        /* \"#utility.yul\":18909:18915   */\n      0x00\n        /* \"#utility.yul\":18943:18948   */\n      dup2\n        /* \"#utility.yul\":18937:18949   */\n      mload\n        /* \"#utility.yul\":18927:18949   */\n      swap1\n      pop\n        /* \"#utility.yul\":18857:18956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18962:19101   */\n    tag_346:\n        /* \"#utility.yul\":19051:19057   */\n      dup3\n        /* \"#utility.yul\":19046:19049   */\n      dup2\n        /* \"#utility.yul\":19041:19044   */\n      dup4\n        /* \"#utility.yul\":19035:19058   */\n      mcopy\n        /* \"#utility.yul\":19092:19093   */\n      0x00\n        /* \"#utility.yul\":19083:19089   */\n      dup4\n        /* \"#utility.yul\":19078:19081   */\n      dup4\n        /* \"#utility.yul\":19074:19090   */\n      add\n        /* \"#utility.yul\":19067:19094   */\n      mstore\n        /* \"#utility.yul\":18962:19101   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19107:19497   */\n    tag_347:\n        /* \"#utility.yul\":19213:19216   */\n      0x00\n        /* \"#utility.yul\":19241:19280   */\n      tag_545\n        /* \"#utility.yul\":19274:19279   */\n      dup3\n        /* \"#utility.yul\":19241:19280   */\n      tag_345\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":19296:19385   */\n      tag_546\n        /* \"#utility.yul\":19378:19384   */\n      dup2\n        /* \"#utility.yul\":19373:19376   */\n      dup6\n        /* \"#utility.yul\":19296:19385   */\n      tag_342\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":19289:19385   */\n      swap4\n      pop\n        /* \"#utility.yul\":19394:19459   */\n      tag_547\n        /* \"#utility.yul\":19452:19458   */\n      dup2\n        /* \"#utility.yul\":19447:19450   */\n      dup6\n        /* \"#utility.yul\":19440:19444   */\n      0x20\n        /* \"#utility.yul\":19433:19438   */\n      dup7\n        /* \"#utility.yul\":19429:19445   */\n      add\n        /* \"#utility.yul\":19394:19459   */\n      tag_346\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":19484:19490   */\n      dup1\n        /* \"#utility.yul\":19479:19482   */\n      dup5\n        /* \"#utility.yul\":19475:19491   */\n      add\n        /* \"#utility.yul\":19468:19491   */\n      swap2\n      pop\n        /* \"#utility.yul\":19217:19497   */\n      pop\n        /* \"#utility.yul\":19107:19497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19503:19670   */\n    tag_348:\n        /* \"#utility.yul\":19643:19662   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":19639:19640   */\n      0x00\n        /* \"#utility.yul\":19631:19637   */\n      dup3\n        /* \"#utility.yul\":19627:19641   */\n      add\n        /* \"#utility.yul\":19620:19663   */\n      mstore\n        /* \"#utility.yul\":19503:19670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19676:20078   */\n    tag_349:\n        /* \"#utility.yul\":19836:19839   */\n      0x00\n        /* \"#utility.yul\":19857:19942   */\n      tag_550\n        /* \"#utility.yul\":19939:19941   */\n      0x11\n        /* \"#utility.yul\":19934:19937   */\n      dup4\n        /* \"#utility.yul\":19857:19942   */\n      tag_342\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":19850:19942   */\n      swap2\n      pop\n        /* \"#utility.yul\":19951:20044   */\n      tag_551\n        /* \"#utility.yul\":20040:20043   */\n      dup3\n        /* \"#utility.yul\":19951:20044   */\n      tag_348\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":20069:20071   */\n      0x11\n        /* \"#utility.yul\":20064:20067   */\n      dup3\n        /* \"#utility.yul\":20060:20072   */\n      add\n        /* \"#utility.yul\":20053:20072   */\n      swap1\n      pop\n        /* \"#utility.yul\":19676:20078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20084:21051   */\n    tag_215:\n        /* \"#utility.yul\":20466:20469   */\n      0x00\n        /* \"#utility.yul\":20488:20636   */\n      tag_553\n        /* \"#utility.yul\":20632:20635   */\n      dup3\n        /* \"#utility.yul\":20488:20636   */\n      tag_344\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":20481:20636   */\n      swap2\n      pop\n        /* \"#utility.yul\":20653:20748   */\n      tag_554\n        /* \"#utility.yul\":20744:20747   */\n      dup3\n        /* \"#utility.yul\":20735:20741   */\n      dup6\n        /* \"#utility.yul\":20653:20748   */\n      tag_347\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":20646:20748   */\n      swap2\n      pop\n        /* \"#utility.yul\":20765:20913   */\n      tag_555\n        /* \"#utility.yul\":20909:20912   */\n      dup3\n        /* \"#utility.yul\":20765:20913   */\n      tag_349\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":20758:20913   */\n      swap2\n      pop\n        /* \"#utility.yul\":20930:21025   */\n      tag_556\n        /* \"#utility.yul\":21021:21024   */\n      dup3\n        /* \"#utility.yul\":21012:21018   */\n      dup5\n        /* \"#utility.yul\":20930:21025   */\n      tag_347\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20923:21025   */\n      swap2\n      pop\n        /* \"#utility.yul\":21042:21045   */\n      dup2\n        /* \"#utility.yul\":21035:21045   */\n      swap1\n      pop\n        /* \"#utility.yul\":20084:21051   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21057:21434   */\n    tag_350:\n        /* \"#utility.yul\":21145:21148   */\n      0x00\n        /* \"#utility.yul\":21173:21212   */\n      tag_558\n        /* \"#utility.yul\":21206:21211   */\n      dup3\n        /* \"#utility.yul\":21173:21212   */\n      tag_345\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":21228:21299   */\n      tag_559\n        /* \"#utility.yul\":21292:21298   */\n      dup2\n        /* \"#utility.yul\":21287:21290   */\n      dup6\n        /* \"#utility.yul\":21228:21299   */\n      tag_314\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":21221:21299   */\n      swap4\n      pop\n        /* \"#utility.yul\":21308:21373   */\n      tag_560\n        /* \"#utility.yul\":21366:21372   */\n      dup2\n        /* \"#utility.yul\":21361:21364   */\n      dup6\n        /* \"#utility.yul\":21354:21358   */\n      0x20\n        /* \"#utility.yul\":21347:21352   */\n      dup7\n        /* \"#utility.yul\":21343:21359   */\n      add\n        /* \"#utility.yul\":21308:21373   */\n      tag_346\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":21398:21427   */\n      tag_561\n        /* \"#utility.yul\":21420:21426   */\n      dup2\n        /* \"#utility.yul\":21398:21427   */\n      tag_307\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":21393:21396   */\n      dup5\n        /* \"#utility.yul\":21389:21428   */\n      add\n        /* \"#utility.yul\":21382:21428   */\n      swap2\n      pop\n        /* \"#utility.yul\":21149:21434   */\n      pop\n        /* \"#utility.yul\":21057:21434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21440:21753   */\n    tag_217:\n        /* \"#utility.yul\":21553:21557   */\n      0x00\n        /* \"#utility.yul\":21591:21593   */\n      0x20\n        /* \"#utility.yul\":21580:21589   */\n      dup3\n        /* \"#utility.yul\":21576:21594   */\n      add\n        /* \"#utility.yul\":21568:21594   */\n      swap1\n      pop\n        /* \"#utility.yul\":21640:21649   */\n      dup2\n        /* \"#utility.yul\":21634:21638   */\n      dup2\n        /* \"#utility.yul\":21630:21650   */\n      sub\n        /* \"#utility.yul\":21626:21627   */\n      0x00\n        /* \"#utility.yul\":21615:21624   */\n      dup4\n        /* \"#utility.yul\":21611:21628   */\n      add\n        /* \"#utility.yul\":21604:21651   */\n      mstore\n        /* \"#utility.yul\":21668:21746   */\n      tag_563\n        /* \"#utility.yul\":21741:21745   */\n      dup2\n        /* \"#utility.yul\":21732:21738   */\n      dup5\n        /* \"#utility.yul\":21668:21746   */\n      tag_350\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":21660:21746   */\n      swap1\n      pop\n        /* \"#utility.yul\":21440:21753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21759:21991   */\n    tag_351:\n        /* \"#utility.yul\":21899:21933   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":21895:21896   */\n      0x00\n        /* \"#utility.yul\":21887:21893   */\n      dup3\n        /* \"#utility.yul\":21883:21897   */\n      add\n        /* \"#utility.yul\":21876:21934   */\n      mstore\n        /* \"#utility.yul\":21968:21983   */\n      0x6f74206120636f6e747261637400000000000000000000000000000000000000\n        /* \"#utility.yul\":21963:21965   */\n      0x20\n        /* \"#utility.yul\":21955:21961   */\n      dup3\n        /* \"#utility.yul\":21951:21966   */\n      add\n        /* \"#utility.yul\":21944:21984   */\n      mstore\n        /* \"#utility.yul\":21759:21991   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21997:22363   */\n    tag_352:\n        /* \"#utility.yul\":22139:22142   */\n      0x00\n        /* \"#utility.yul\":22160:22227   */\n      tag_566\n        /* \"#utility.yul\":22224:22226   */\n      0x2d\n        /* \"#utility.yul\":22219:22222   */\n      dup4\n        /* \"#utility.yul\":22160:22227   */\n      tag_314\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":22153:22227   */\n      swap2\n      pop\n        /* \"#utility.yul\":22236:22329   */\n      tag_567\n        /* \"#utility.yul\":22325:22328   */\n      dup3\n        /* \"#utility.yul\":22236:22329   */\n      tag_351\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":22354:22356   */\n      0x40\n        /* \"#utility.yul\":22349:22352   */\n      dup3\n        /* \"#utility.yul\":22345:22357   */\n      add\n        /* \"#utility.yul\":22338:22357   */\n      swap1\n      pop\n        /* \"#utility.yul\":21997:22363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22369:22788   */\n    tag_224:\n        /* \"#utility.yul\":22535:22539   */\n      0x00\n        /* \"#utility.yul\":22573:22575   */\n      0x20\n        /* \"#utility.yul\":22562:22571   */\n      dup3\n        /* \"#utility.yul\":22558:22576   */\n      add\n        /* \"#utility.yul\":22550:22576   */\n      swap1\n      pop\n        /* \"#utility.yul\":22622:22631   */\n      dup2\n        /* \"#utility.yul\":22616:22620   */\n      dup2\n        /* \"#utility.yul\":22612:22632   */\n      sub\n        /* \"#utility.yul\":22608:22609   */\n      0x00\n        /* \"#utility.yul\":22597:22606   */\n      dup4\n        /* \"#utility.yul\":22593:22610   */\n      add\n        /* \"#utility.yul\":22586:22633   */\n      mstore\n        /* \"#utility.yul\":22650:22781   */\n      tag_569\n        /* \"#utility.yul\":22776:22780   */\n      dup2\n        /* \"#utility.yul\":22650:22781   */\n      tag_352\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":22642:22781   */\n      swap1\n      pop\n        /* \"#utility.yul\":22369:22788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22794:22974   */\n    tag_353:\n        /* \"#utility.yul\":22842:22919   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22839:22840   */\n      0x00\n        /* \"#utility.yul\":22832:22920   */\n      mstore\n        /* \"#utility.yul\":22939:22943   */\n      0x11\n        /* \"#utility.yul\":22936:22937   */\n      0x04\n        /* \"#utility.yul\":22929:22944   */\n      mstore\n        /* \"#utility.yul\":22963:22967   */\n      0x24\n        /* \"#utility.yul\":22960:22961   */\n      0x00\n        /* \"#utility.yul\":22953:22968   */\n      revert\n        /* \"#utility.yul\":22980:23390   */\n    tag_237:\n        /* \"#utility.yul\":23020:23027   */\n      0x00\n        /* \"#utility.yul\":23043:23063   */\n      tag_572\n        /* \"#utility.yul\":23061:23062   */\n      dup3\n        /* \"#utility.yul\":23043:23063   */\n      tag_329\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":23038:23063   */\n      swap2\n      pop\n        /* \"#utility.yul\":23077:23097   */\n      tag_573\n        /* \"#utility.yul\":23095:23096   */\n      dup4\n        /* \"#utility.yul\":23077:23097   */\n      tag_329\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":23072:23097   */\n      swap3\n      pop\n        /* \"#utility.yul\":23132:23133   */\n      dup3\n        /* \"#utility.yul\":23129:23130   */\n      dup3\n        /* \"#utility.yul\":23125:23134   */\n      mul\n        /* \"#utility.yul\":23154:23184   */\n      tag_574\n        /* \"#utility.yul\":23172:23183   */\n      dup2\n        /* \"#utility.yul\":23154:23184   */\n      tag_329\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":23143:23184   */\n      swap2\n      pop\n        /* \"#utility.yul\":23333:23334   */\n      dup3\n        /* \"#utility.yul\":23324:23331   */\n      dup3\n        /* \"#utility.yul\":23320:23335   */\n      div\n        /* \"#utility.yul\":23317:23318   */\n      dup5\n        /* \"#utility.yul\":23314:23336   */\n      eq\n        /* \"#utility.yul\":23294:23295   */\n      dup4\n        /* \"#utility.yul\":23287:23296   */\n      iszero\n        /* \"#utility.yul\":23267:23350   */\n      or\n        /* \"#utility.yul\":23244:23383   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":23363:23381   */\n      tag_576\n      tag_353\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":23244:23383   */\n    tag_575:\n        /* \"#utility.yul\":23028:23390   */\n      pop\n        /* \"#utility.yul\":22980:23390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23396:23587   */\n    tag_239:\n        /* \"#utility.yul\":23436:23439   */\n      0x00\n        /* \"#utility.yul\":23455:23475   */\n      tag_578\n        /* \"#utility.yul\":23473:23474   */\n      dup3\n        /* \"#utility.yul\":23455:23475   */\n      tag_329\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":23450:23475   */\n      swap2\n      pop\n        /* \"#utility.yul\":23489:23509   */\n      tag_579\n        /* \"#utility.yul\":23507:23508   */\n      dup4\n        /* \"#utility.yul\":23489:23509   */\n      tag_329\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":23484:23509   */\n      swap3\n      pop\n        /* \"#utility.yul\":23532:23533   */\n      dup3\n        /* \"#utility.yul\":23529:23530   */\n      dup3\n        /* \"#utility.yul\":23525:23534   */\n      add\n        /* \"#utility.yul\":23518:23534   */\n      swap1\n      pop\n        /* \"#utility.yul\":23553:23556   */\n      dup1\n        /* \"#utility.yul\":23550:23551   */\n      dup3\n        /* \"#utility.yul\":23547:23557   */\n      gt\n        /* \"#utility.yul\":23544:23580   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":23560:23578   */\n      tag_581\n      tag_353\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":23544:23580   */\n    tag_580:\n        /* \"#utility.yul\":23396:23587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23593:23773   */\n    tag_245:\n        /* \"#utility.yul\":23641:23718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23638:23639   */\n      0x00\n        /* \"#utility.yul\":23631:23719   */\n      mstore\n        /* \"#utility.yul\":23738:23742   */\n      0x32\n        /* \"#utility.yul\":23735:23736   */\n      0x04\n        /* \"#utility.yul\":23728:23743   */\n      mstore\n        /* \"#utility.yul\":23762:23766   */\n      0x24\n        /* \"#utility.yul\":23759:23760   */\n      0x00\n        /* \"#utility.yul\":23752:23767   */\n      revert\n        /* \"#utility.yul\":23779:23950   */\n    tag_258:\n        /* \"#utility.yul\":23818:23821   */\n      0x00\n        /* \"#utility.yul\":23841:23865   */\n      tag_584\n        /* \"#utility.yul\":23859:23864   */\n      dup3\n        /* \"#utility.yul\":23841:23865   */\n      tag_329\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":23832:23865   */\n      swap2\n      pop\n        /* \"#utility.yul\":23887:23891   */\n      0x00\n        /* \"#utility.yul\":23880:23885   */\n      dup3\n        /* \"#utility.yul\":23877:23892   */\n      sub\n        /* \"#utility.yul\":23874:23915   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":23895:23913   */\n      tag_586\n      tag_353\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":23874:23915   */\n    tag_585:\n        /* \"#utility.yul\":23942:23943   */\n      0x01\n        /* \"#utility.yul\":23935:23940   */\n      dup3\n        /* \"#utility.yul\":23931:23944   */\n      sub\n        /* \"#utility.yul\":23924:23944   */\n      swap1\n      pop\n        /* \"#utility.yul\":23779:23950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23956:24138   */\n    tag_354:\n        /* \"#utility.yul\":24096:24130   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":24092:24093   */\n      0x00\n        /* \"#utility.yul\":24084:24090   */\n      dup3\n        /* \"#utility.yul\":24080:24094   */\n      add\n        /* \"#utility.yul\":24073:24131   */\n      mstore\n        /* \"#utility.yul\":23956:24138   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24144:24510   */\n    tag_355:\n        /* \"#utility.yul\":24286:24289   */\n      0x00\n        /* \"#utility.yul\":24307:24374   */\n      tag_589\n        /* \"#utility.yul\":24371:24373   */\n      0x20\n        /* \"#utility.yul\":24366:24369   */\n      dup4\n        /* \"#utility.yul\":24307:24374   */\n      tag_314\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":24300:24374   */\n      swap2\n      pop\n        /* \"#utility.yul\":24383:24476   */\n      tag_590\n        /* \"#utility.yul\":24472:24475   */\n      dup3\n        /* \"#utility.yul\":24383:24476   */\n      tag_354\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":24501:24503   */\n      0x20\n        /* \"#utility.yul\":24496:24499   */\n      dup3\n        /* \"#utility.yul\":24492:24504   */\n      add\n        /* \"#utility.yul\":24485:24504   */\n      swap1\n      pop\n        /* \"#utility.yul\":24144:24510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24516:24935   */\n    tag_261:\n        /* \"#utility.yul\":24682:24686   */\n      0x00\n        /* \"#utility.yul\":24720:24722   */\n      0x20\n        /* \"#utility.yul\":24709:24718   */\n      dup3\n        /* \"#utility.yul\":24705:24723   */\n      add\n        /* \"#utility.yul\":24697:24723   */\n      swap1\n      pop\n        /* \"#utility.yul\":24769:24778   */\n      dup2\n        /* \"#utility.yul\":24763:24767   */\n      dup2\n        /* \"#utility.yul\":24759:24779   */\n      sub\n        /* \"#utility.yul\":24755:24756   */\n      0x00\n        /* \"#utility.yul\":24744:24753   */\n      dup4\n        /* \"#utility.yul\":24740:24757   */\n      add\n        /* \"#utility.yul\":24733:24780   */\n      mstore\n        /* \"#utility.yul\":24797:24928   */\n      tag_592\n        /* \"#utility.yul\":24923:24927   */\n      dup2\n        /* \"#utility.yul\":24797:24928   */\n      tag_355\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":24789:24928   */\n      swap1\n      pop\n        /* \"#utility.yul\":24516:24935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24941:25039   */\n    tag_356:\n        /* \"#utility.yul\":24992:24998   */\n      0x00\n        /* \"#utility.yul\":25026:25031   */\n      dup2\n        /* \"#utility.yul\":25020:25032   */\n      mload\n        /* \"#utility.yul\":25010:25032   */\n      swap1\n      pop\n        /* \"#utility.yul\":24941:25039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25045:25192   */\n    tag_357:\n        /* \"#utility.yul\":25146:25157   */\n      0x00\n        /* \"#utility.yul\":25183:25186   */\n      dup2\n        /* \"#utility.yul\":25168:25186   */\n      swap1\n      pop\n        /* \"#utility.yul\":25045:25192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25198:25584   */\n    tag_358:\n        /* \"#utility.yul\":25302:25305   */\n      0x00\n        /* \"#utility.yul\":25330:25368   */\n      tag_596\n        /* \"#utility.yul\":25362:25367   */\n      dup3\n        /* \"#utility.yul\":25330:25368   */\n      tag_356\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":25384:25472   */\n      tag_597\n        /* \"#utility.yul\":25465:25471   */\n      dup2\n        /* \"#utility.yul\":25460:25463   */\n      dup6\n        /* \"#utility.yul\":25384:25472   */\n      tag_357\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":25377:25472   */\n      swap4\n      pop\n        /* \"#utility.yul\":25481:25546   */\n      tag_598\n        /* \"#utility.yul\":25539:25545   */\n      dup2\n        /* \"#utility.yul\":25534:25537   */\n      dup6\n        /* \"#utility.yul\":25527:25531   */\n      0x20\n        /* \"#utility.yul\":25520:25525   */\n      dup7\n        /* \"#utility.yul\":25516:25532   */\n      add\n        /* \"#utility.yul\":25481:25546   */\n      tag_346\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":25571:25577   */\n      dup1\n        /* \"#utility.yul\":25566:25569   */\n      dup5\n        /* \"#utility.yul\":25562:25578   */\n      add\n        /* \"#utility.yul\":25555:25578   */\n      swap2\n      pop\n        /* \"#utility.yul\":25306:25584   */\n      pop\n        /* \"#utility.yul\":25198:25584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25590:25861   */\n    tag_269:\n        /* \"#utility.yul\":25720:25723   */\n      0x00\n        /* \"#utility.yul\":25742:25835   */\n      tag_600\n        /* \"#utility.yul\":25831:25834   */\n      dup3\n        /* \"#utility.yul\":25822:25828   */\n      dup5\n        /* \"#utility.yul\":25742:25835   */\n      tag_358\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":25735:25835   */\n      swap2\n      pop\n        /* \"#utility.yul\":25852:25855   */\n      dup2\n        /* \"#utility.yul\":25845:25855   */\n      swap1\n      pop\n        /* \"#utility.yul\":25590:25861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25867:26046   */\n    tag_359:\n        /* \"#utility.yul\":26007:26038   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":26003:26004   */\n      0x00\n        /* \"#utility.yul\":25995:26001   */\n      dup3\n        /* \"#utility.yul\":25991:26005   */\n      add\n        /* \"#utility.yul\":25984:26039   */\n      mstore\n        /* \"#utility.yul\":25867:26046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26052:26418   */\n    tag_360:\n        /* \"#utility.yul\":26194:26197   */\n      0x00\n        /* \"#utility.yul\":26215:26282   */\n      tag_603\n        /* \"#utility.yul\":26279:26281   */\n      0x1d\n        /* \"#utility.yul\":26274:26277   */\n      dup4\n        /* \"#utility.yul\":26215:26282   */\n      tag_314\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":26208:26282   */\n      swap2\n      pop\n        /* \"#utility.yul\":26291:26384   */\n      tag_604\n        /* \"#utility.yul\":26380:26383   */\n      dup3\n        /* \"#utility.yul\":26291:26384   */\n      tag_359\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":26409:26411   */\n      0x20\n        /* \"#utility.yul\":26404:26407   */\n      dup3\n        /* \"#utility.yul\":26400:26412   */\n      add\n        /* \"#utility.yul\":26393:26412   */\n      swap1\n      pop\n        /* \"#utility.yul\":26052:26418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26424:26843   */\n    tag_281:\n        /* \"#utility.yul\":26590:26594   */\n      0x00\n        /* \"#utility.yul\":26628:26630   */\n      0x20\n        /* \"#utility.yul\":26617:26626   */\n      dup3\n        /* \"#utility.yul\":26613:26631   */\n      add\n        /* \"#utility.yul\":26605:26631   */\n      swap1\n      pop\n        /* \"#utility.yul\":26677:26686   */\n      dup2\n        /* \"#utility.yul\":26671:26675   */\n      dup2\n        /* \"#utility.yul\":26667:26687   */\n      sub\n        /* \"#utility.yul\":26663:26664   */\n      0x00\n        /* \"#utility.yul\":26652:26661   */\n      dup4\n        /* \"#utility.yul\":26648:26665   */\n      add\n        /* \"#utility.yul\":26641:26688   */\n      mstore\n        /* \"#utility.yul\":26705:26836   */\n      tag_606\n        /* \"#utility.yul\":26831:26835   */\n      dup2\n        /* \"#utility.yul\":26705:26836   */\n      tag_360\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":26697:26836   */\n      swap1\n      pop\n        /* \"#utility.yul\":26424:26843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220208b8808897ed27996a45e921d4b368229ed2c5e6d684711fc7964af832962e064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f80fd5b506080516122a06100765f395f81816103fa01528181610488015281816106fe0152818161078c015261098501526122a05ff3fe6080604052600436106100a6575f3560e01c80634f1ef286116100635780634f1ef286146101c257806351cff8d9146101de57806352d1902d1461020657806391d1485414610230578063a217fddf1461026c578063d547741f14610296576100a6565b806301ffc9a7146100aa578063248a9ca3146100e65780632f2ff15d1461012257806336568abe1461014a5780633659cfe614610172578063485cc9551461019a575b5f80fd5b3480156100b5575f80fd5b506100d060048036038101906100cb91906114fb565b6102be565b6040516100dd9190611540565b60405180910390f35b3480156100f1575f80fd5b5061010c6004803603810190610107919061158c565b610337565b60405161011991906115c6565b60405180910390f35b34801561012d575f80fd5b5061014860048036038101906101439190611639565b610354565b005b348015610155575f80fd5b50610170600480360381019061016b9190611639565b610375565b005b34801561017d575f80fd5b5061019860048036038101906101939190611677565b6103f8565b005b3480156101a5575f80fd5b506101c060048036038101906101bb91906116a2565b61057e565b005b6101dc60048036038101906101d7919061181c565b6106fc565b005b3480156101e9575f80fd5b5061020460048036038101906101ff9190611677565b610838565b005b348015610211575f80fd5b5061021a610982565b60405161022791906115c6565b60405180910390f35b34801561023b575f80fd5b5061025660048036038101906102519190611639565b610a39565b6040516102639190611540565b60405180910390f35b348015610277575f80fd5b50610280610a9d565b60405161028d91906115c6565b60405180910390f35b3480156102a1575f80fd5b506102bc60048036038101906102b79190611639565b610aa3565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610330575061032f82610ac4565b5b9050919050565b5f60c95f8381526020019081526020015f20600101549050919050565b61035d82610337565b61036681610b2d565b6103708383610b41565b505050565b61037d610c1c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e1906118f6565b60405180910390fd5b6103f48282610c23565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047d90611984565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104c5610cfe565b73ffffffffffffffffffffffffffffffffffffffff161461051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290611a12565b60405180910390fd5b61052481610d51565b61057b815f67ffffffffffffffff811115610542576105416116f8565b5b6040519080825280601f01601f1916602001820160405280156105745781602001600182028036833780820191505090505b505f610d61565b50565b5f8060019054906101000a900460ff161590508080156105ad575060015f8054906101000a900460ff1660ff16105b806105d957506105bc30610ecb565b1580156105d8575060015f8054906101000a900460ff1660ff16145b5b610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90611aa0565b60405180910390fd5b60015f806101000a81548160ff021916908360ff16021790555080156106535760015f60016101000a81548160ff0219169083151502179055505b61065f5f801b83610eed565b8260fb5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106f7575f8060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516106ee9190611b0c565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361078a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078190611984565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107c9610cfe565b73ffffffffffffffffffffffffffffffffffffffff161461081f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081690611a12565b60405180910390fd5b61082882610d51565b61083482826001610d61565b5050565b5f801b61084481610b2d565b5f60fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161089f9190611b34565b602060405180830381865afa1580156108ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108de9190611b80565b905060fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b815260040161093c929190611bba565b6020604051808303815f875af1158015610958573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097c9190611c0b565b50505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0890611ca6565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610aac82610337565b610ab581610b2d565b610abf8383610c23565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b3e81610b39610c1c565b610efb565b50565b610b4b8282610a39565b610c1857600160c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bbd610c1c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b610c2d8282610a39565b15610cfa575f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c9f610c1c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f610d2a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610f7f565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f801b610d5d81610b2d565b5050565b610d8c7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435f1b610f88565b5f015f9054906101000a900460ff1615610dae57610da983610f91565b610ec6565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e1657506040513d601f19601f82011682018060405250810190610e139190611cd8565b60015b610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611d73565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610eb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb090611e01565b60405180910390fd5b50610ec5838383611047565b5b505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b610ef78282610b41565b5050565b610f058282610a39565b610f7b57610f1281611072565b610f1f835f1c602061109f565b604051602001610f30929190611f05565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f729190611f76565b60405180910390fd5b5050565b5f819050919050565b5f819050919050565b610f9a81610ecb565b610fd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd090612006565b60405180910390fd5b806110057f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610f7f565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611050836112d4565b5f8251118061105c5750805b1561106d5761106b8383611323565b505b505050565b60606110988273ffffffffffffffffffffffffffffffffffffffff16601460ff1661109f565b9050919050565b60605f60028360026110b19190612051565b6110bb9190612092565b67ffffffffffffffff8111156110d4576110d36116f8565b5b6040519080825280601f01601f1916602001820160405280156111065781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f8151811061113d5761113c6120c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106111a05761119f6120c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f60018460026111de9190612051565b6111e89190612092565b90505b6001811115611287577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061122a576112296120c5565b5b1a60f81b828281518110611241576112406120c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c945080611280906120f2565b90506111eb565b505f84146112ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c190612163565b60405180910390fd5b8091505092915050565b6112dd81610f91565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611348838360405180606001604052806027815260200161224460279139611350565b905092915050565b60605f808573ffffffffffffffffffffffffffffffffffffffff168560405161137991906121c5565b5f60405180830381855af49150503d805f81146113b1576040519150601f19603f3d011682016040523d82523d5f602084013e6113b6565b606091505b50915091506113c7868383876113d2565b925050509392505050565b60608315611433575f83510361142b576113eb85610ecb565b61142a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142190612225565b60405180910390fd5b5b82905061143e565b61143d8383611446565b5b949350505050565b5f825111156114585781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148c9190611f76565b60405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114da816114a6565b81146114e4575f80fd5b50565b5f813590506114f5816114d1565b92915050565b5f602082840312156115105761150f61149e565b5b5f61151d848285016114e7565b91505092915050565b5f8115159050919050565b61153a81611526565b82525050565b5f6020820190506115535f830184611531565b92915050565b5f819050919050565b61156b81611559565b8114611575575f80fd5b50565b5f8135905061158681611562565b92915050565b5f602082840312156115a1576115a061149e565b5b5f6115ae84828501611578565b91505092915050565b6115c081611559565b82525050565b5f6020820190506115d95f8301846115b7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611608826115df565b9050919050565b611618816115fe565b8114611622575f80fd5b50565b5f813590506116338161160f565b92915050565b5f806040838503121561164f5761164e61149e565b5b5f61165c85828601611578565b925050602061166d85828601611625565b9150509250929050565b5f6020828403121561168c5761168b61149e565b5b5f61169984828501611625565b91505092915050565b5f80604083850312156116b8576116b761149e565b5b5f6116c585828601611625565b92505060206116d685828601611625565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61172e826116e8565b810181811067ffffffffffffffff8211171561174d5761174c6116f8565b5b80604052505050565b5f61175f611495565b905061176b8282611725565b919050565b5f67ffffffffffffffff82111561178a576117896116f8565b5b611793826116e8565b9050602081019050919050565b828183375f83830152505050565b5f6117c06117bb84611770565b611756565b9050828152602081018484840111156117dc576117db6116e4565b5b6117e78482856117a0565b509392505050565b5f82601f830112611803576118026116e0565b5b81356118138482602086016117ae565b91505092915050565b5f80604083850312156118325761183161149e565b5b5f61183f85828601611625565b925050602083013567ffffffffffffffff8111156118605761185f6114a2565b5b61186c858286016117ef565b9150509250929050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f6118e0602f83611876565b91506118eb82611886565b604082019050919050565b5f6020820190508181035f83015261190d816118d4565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b5f61196e602c83611876565b915061197982611914565b604082019050919050565b5f6020820190508181035f83015261199b81611962565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b5f6119fc602c83611876565b9150611a07826119a2565b604082019050919050565b5f6020820190508181035f830152611a29816119f0565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f611a8a602e83611876565b9150611a9582611a30565b604082019050919050565b5f6020820190508181035f830152611ab781611a7e565b9050919050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f611af6611af1611aec84611abe565b611ad3565b611ac7565b9050919050565b611b0681611adc565b82525050565b5f602082019050611b1f5f830184611afd565b92915050565b611b2e816115fe565b82525050565b5f602082019050611b475f830184611b25565b92915050565b5f819050919050565b611b5f81611b4d565b8114611b69575f80fd5b50565b5f81519050611b7a81611b56565b92915050565b5f60208284031215611b9557611b9461149e565b5b5f611ba284828501611b6c565b91505092915050565b611bb481611b4d565b82525050565b5f604082019050611bcd5f830185611b25565b611bda6020830184611bab565b9392505050565b611bea81611526565b8114611bf4575f80fd5b50565b5f81519050611c0581611be1565b92915050565b5f60208284031215611c2057611c1f61149e565b5b5f611c2d84828501611bf7565b91505092915050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c5f8201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b5f611c90603883611876565b9150611c9b82611c36565b604082019050919050565b5f6020820190508181035f830152611cbd81611c84565b9050919050565b5f81519050611cd281611562565b92915050565b5f60208284031215611ced57611cec61149e565b5b5f611cfa84828501611cc4565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e746174695f8201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b5f611d5d602e83611876565b9150611d6882611d03565b604082019050919050565b5f6020820190508181035f830152611d8a81611d51565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f785f8201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b5f611deb602983611876565b9150611df682611d91565b604082019050919050565b5f6020820190508181035f830152611e1881611ddf565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f611e5d601783611e1f565b9150611e6882611e29565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f611e9582611e73565b611e9f8185611e1f565b9350611eaf818560208601611e7d565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f611eef601183611e1f565b9150611efa82611ebb565b601182019050919050565b5f611f0f82611e51565b9150611f1b8285611e8b565b9150611f2682611ee3565b9150611f328284611e8b565b91508190509392505050565b5f611f4882611e73565b611f528185611876565b9350611f62818560208601611e7d565b611f6b816116e8565b840191505092915050565b5f6020820190508181035f830152611f8e8184611f3e565b905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f611ff0602d83611876565b9150611ffb82611f96565b604082019050919050565b5f6020820190508181035f83015261201d81611fe4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61205b82611b4d565b915061206683611b4d565b925082820261207481611b4d565b9150828204841483151761208b5761208a612024565b5b5092915050565b5f61209c82611b4d565b91506120a783611b4d565b92508282019050808211156120bf576120be612024565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6120fc82611b4d565b91505f820361210e5761210d612024565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f61214d602083611876565b915061215882612119565b602082019050919050565b5f6020820190508181035f83015261217a81612141565b9050919050565b5f81519050919050565b5f81905092915050565b5f61219f82612181565b6121a9818561218b565b93506121b9818560208601611e7d565b80840191505092915050565b5f6121d08284612195565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f61220f601d83611876565b915061221a826121db565b602082019050919050565b5f6020820190508181035f83015261223c81612203565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220208b8808897ed27996a45e921d4b368229ed2c5e6d684711fc7964af832962e064736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x22A0 PUSH2 0x76 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3FA ADD MSTORE DUP2 DUP2 PUSH2 0x488 ADD MSTORE DUP2 DUP2 PUSH2 0x6FE ADD MSTORE DUP2 DUP2 PUSH2 0x78C ADD MSTORE PUSH2 0x985 ADD MSTORE PUSH2 0x22A0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x296 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x19A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x330 JUMPI POP PUSH2 0x32F DUP3 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35D DUP3 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x366 DUP2 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x370 DUP4 DUP4 PUSH2 0xB41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x37D PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 DUP3 DUP3 PUSH2 0xC23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C5 PUSH2 0xCFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x524 DUP2 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x574 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH0 PUSH2 0xD61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x5AD JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x5D9 JUMPI POP PUSH2 0x5BC ADDRESS PUSH2 0xECB JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x65F PUSH0 DUP1 SHL DUP4 PUSH2 0xEED JUMP JUMPDEST DUP3 PUSH1 0xFB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C9 PUSH2 0xCFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x816 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x834 DUP3 DUP3 PUSH1 0x1 PUSH2 0xD61 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x844 DUP2 PUSH2 0xB2D JUMP JUMPDEST PUSH0 PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST SWAP1 POP PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xAAC DUP3 PUSH2 0x337 JUMP JUMPDEST PUSH2 0xAB5 DUP2 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0xABF DUP4 DUP4 PUSH2 0xC23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3E DUP2 PUSH2 0xB39 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xEFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB4B DUP3 DUP3 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0xC18 JUMPI PUSH1 0x1 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBBD PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC2D DUP3 DUP3 PUSH2 0xA39 JUMP JUMPDEST ISZERO PUSH2 0xCFA JUMPI PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC9F PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD2A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xF7F JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xD5D DUP2 PUSH2 0xB2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD8C PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH0 SHL PUSH2 0xF88 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDAE JUMPI PUSH2 0xDA9 DUP4 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0xEC6 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE16 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB0 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xEC5 DUP4 DUP4 DUP4 PUSH2 0x1047 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF7 DUP3 DUP3 PUSH2 0xB41 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF05 DUP3 DUP3 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0xF7B JUMPI PUSH2 0xF12 DUP2 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0xF1F DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF30 SWAP3 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9A DUP2 PUSH2 0xECB JUMP JUMPDEST PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD0 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1005 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xF7F JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1050 DUP4 PUSH2 0x12D4 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x105C JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x106D JUMPI PUSH2 0x106B DUP4 DUP4 PUSH2 0x1323 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1098 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x10BB SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1106 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x113D JUMPI PUSH2 0x113C PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11A0 JUMPI PUSH2 0x119F PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1287 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x122A JUMPI PUSH2 0x1229 PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1280 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x11EB JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C1 SWAP1 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12DD DUP2 PUSH2 0xF91 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1348 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2244 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x21C5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C7 DUP7 DUP4 DUP4 DUP8 PUSH2 0x13D2 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1433 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x142B JUMPI PUSH2 0x13EB DUP6 PUSH2 0xECB JUMP JUMPDEST PUSH2 0x142A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP1 PUSH2 0x2225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x143E JUMP JUMPDEST PUSH2 0x143D DUP4 DUP4 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1458 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DA DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F5 DUP2 PUSH2 0x14D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH2 0x150F PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x151D DUP5 DUP3 DUP6 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1553 PUSH0 DUP4 ADD DUP5 PUSH2 0x1531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP2 EQ PUSH2 0x1575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A1 JUMPI PUSH2 0x15A0 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AE DUP5 DUP3 DUP6 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15C0 DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1608 DUP3 PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x15FE JUMP JUMPDEST DUP2 EQ PUSH2 0x1622 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1633 DUP2 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165C DUP6 DUP3 DUP7 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x166D DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168C JUMPI PUSH2 0x168B PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1699 DUP5 DUP3 DUP6 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x172E DUP3 PUSH2 0x16E8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175F PUSH2 0x1495 JUMP JUMPDEST SWAP1 POP PUSH2 0x176B DUP3 DUP3 PUSH2 0x1725 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1793 DUP3 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C0 PUSH2 0x17BB DUP5 PUSH2 0x1770 JUMP JUMPDEST PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST PUSH2 0x17E7 DUP5 DUP3 DUP6 PUSH2 0x17A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1813 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x183F DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x14A2 JUMP JUMPDEST JUMPDEST PUSH2 0x186C DUP6 DUP3 DUP7 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E0 PUSH1 0x2F DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EB DUP3 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190D DUP2 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x196E PUSH1 0x2C DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1979 DUP3 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199B DUP2 PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19FC PUSH1 0x2C DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A07 DUP3 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A29 DUP2 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8A PUSH1 0x2E DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AB7 DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF6 PUSH2 0x1AF1 PUSH2 0x1AEC DUP5 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B06 DUP2 PUSH2 0x1ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B1F PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B2E DUP2 PUSH2 0x15FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B47 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5F DUP2 PUSH2 0x1B4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B7A DUP2 PUSH2 0x1B56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA2 DUP5 DUP3 DUP6 ADD PUSH2 0x1B6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB4 DUP2 PUSH2 0x1B4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BCD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x1BDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BAB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BEA DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C05 DUP2 PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C2D DUP5 DUP3 DUP6 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C90 PUSH1 0x38 DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9B DUP3 PUSH2 0x1C36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CD2 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH2 0x1CEC PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFA DUP5 DUP3 DUP6 ADD PUSH2 0x1CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5D PUSH1 0x2E DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D68 DUP3 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D8A DUP2 PUSH2 0x1D51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEB PUSH1 0x29 DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF6 DUP3 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E18 DUP2 PUSH2 0x1DDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5D PUSH1 0x17 DUP4 PUSH2 0x1E1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E68 DUP3 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E95 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1E9F DUP2 DUP6 PUSH2 0x1E1F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEF PUSH1 0x11 DUP4 PUSH2 0x1E1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFA DUP3 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 DUP6 PUSH2 0x1E8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F26 DUP3 PUSH2 0x1EE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F32 DUP3 DUP5 PUSH2 0x1E8B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F48 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1F52 DUP2 DUP6 PUSH2 0x1876 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F62 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x1F6B DUP2 PUSH2 0x16E8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8E DUP2 DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF0 PUSH1 0x2D DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x201D DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x205B DUP3 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2074 DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x2024 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x209C DUP3 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP PUSH2 0x20A7 DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20BF JUMPI PUSH2 0x20BE PUSH2 0x2024 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20FC DUP3 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x210E JUMPI PUSH2 0x210D PUSH2 0x2024 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214D PUSH1 0x20 DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x2158 DUP3 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x217A DUP2 PUSH2 0x2141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x219F DUP3 PUSH2 0x2181 JUMP JUMPDEST PUSH2 0x21A9 DUP2 DUP6 PUSH2 0x218B JUMP JUMPDEST SWAP4 POP PUSH2 0x21B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21D0 DUP3 DUP5 PUSH2 0x2195 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220F PUSH1 0x1D DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x221A DUP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223C DUP2 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220208B88 ADDMOD DUP10 PUSH31 0xD27996A45E921D4B368229ED2C5E6D684711FC7964AF832962E064736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "381:594:19:-:0;;;1198:4:7;1155:48;;;;;;;;;381:594:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_31": {
									"entryPoint": 2717,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3391": {
									"entryPoint": 3409,
									"id": 3391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_108": {
									"entryPoint": 2861,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_147": {
									"entryPoint": 3835,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getImplementation_486": {
									"entryPoint": 3326,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_299": {
									"entryPoint": 2881,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1929": {
									"entryPoint": 3100,
									"id": 1929,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1900": {
									"entryPoint": 5190,
									"id": 1900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_330": {
									"entryPoint": 3107,
									"id": 330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_510": {
									"entryPoint": 3985,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setupRole_239": {
									"entryPoint": 3821,
									"id": 239,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_608": {
									"entryPoint": 3425,
									"id": 608,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_555": {
									"entryPoint": 4167,
									"id": 555,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_525": {
									"entryPoint": 4820,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1788": {
									"entryPoint": 4899,
									"id": 1788,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1817": {
									"entryPoint": 4944,
									"id": 1817,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1984": {
									"entryPoint": 3967,
									"id": 1984,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1995": {
									"entryPoint": 3976,
									"id": 1995,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_162": {
									"entryPoint": 823,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_182": {
									"entryPoint": 852,
									"id": 182,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_95": {
									"entryPoint": 2617,
									"id": 95,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_3355": {
									"entryPoint": 1406,
									"id": 3355,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_1589": {
									"entryPoint": 3787,
									"id": 1589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@proxiableUUID_1026": {
									"entryPoint": 2434,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_225": {
									"entryPoint": 885,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_202": {
									"entryPoint": 2723,
									"id": 202,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2330": {
									"entryPoint": 2756,
									"id": 2330,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_76": {
									"entryPoint": 702,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_2245": {
									"entryPoint": 4255,
									"id": 2245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_2265": {
									"entryPoint": 4210,
									"id": 2265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_1069": {
									"entryPoint": 1788,
									"id": 1069,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_1048": {
									"entryPoint": 1016,
									"id": 1048,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1856": {
									"entryPoint": 5074,
									"id": 1856,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_3381": {
									"entryPoint": 2104,
									"id": 3381,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 8434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c": {
									"entryPoint": 7569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 7867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26846:20",
										"nodeType": "YulBlock",
										"src": "0:26846:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:20",
													"nodeType": "YulBlock",
													"src": "47:35:20",
													"statements": [
														{
															"nativeSrc": "57:19:20",
															"nodeType": "YulAssignment",
															"src": "57:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:20",
																		"nodeType": "YulLiteral",
																		"src": "73:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:20"
																},
																"nativeSrc": "67:9:20",
																"nodeType": "YulFunctionCall",
																"src": "67:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:20",
														"nodeType": "YulTypedName",
														"src": "40:6:20",
														"type": ""
													}
												],
												"src": "7:75:20"
											},
											{
												"body": {
													"nativeSrc": "177:28:20",
													"nodeType": "YulBlock",
													"src": "177:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:20",
																		"nodeType": "YulLiteral",
																		"src": "194:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:20",
																		"nodeType": "YulLiteral",
																		"src": "197:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:20"
																},
																"nativeSrc": "187:12:20",
																"nodeType": "YulFunctionCall",
																"src": "187:12:20"
															},
															"nativeSrc": "187:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:20"
											},
											{
												"body": {
													"nativeSrc": "300:28:20",
													"nodeType": "YulBlock",
													"src": "300:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:20",
																		"nodeType": "YulLiteral",
																		"src": "317:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:20",
																		"nodeType": "YulLiteral",
																		"src": "320:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:20"
																},
																"nativeSrc": "310:12:20",
																"nodeType": "YulFunctionCall",
																"src": "310:12:20"
															},
															"nativeSrc": "310:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:20"
											},
											{
												"body": {
													"nativeSrc": "378:105:20",
													"nodeType": "YulBlock",
													"src": "378:105:20",
													"statements": [
														{
															"nativeSrc": "388:89:20",
															"nodeType": "YulAssignment",
															"src": "388:89:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:20",
																		"nodeType": "YulLiteral",
																		"src": "410:66:20",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:20"
																},
																"nativeSrc": "399:78:20",
																"nodeType": "YulFunctionCall",
																"src": "399:78:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:20",
														"nodeType": "YulTypedName",
														"src": "360:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:20",
														"nodeType": "YulTypedName",
														"src": "370:7:20",
														"type": ""
													}
												],
												"src": "334:149:20"
											},
											{
												"body": {
													"nativeSrc": "531:78:20",
													"nodeType": "YulBlock",
													"src": "531:78:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:20",
																"nodeType": "YulBlock",
																"src": "587:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:20",
																					"nodeType": "YulLiteral",
																					"src": "596:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:20",
																					"nodeType": "YulLiteral",
																					"src": "599:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:20"
																			},
																			"nativeSrc": "589:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:20"
																		},
																		"nativeSrc": "589:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:20",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:20"
																				},
																				"nativeSrc": "561:23:20",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:20"
																		},
																		"nativeSrc": "551:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:20"
																},
																"nativeSrc": "544:42:20",
																"nodeType": "YulFunctionCall",
																"src": "544:42:20"
															},
															"nativeSrc": "541:62:20",
															"nodeType": "YulIf",
															"src": "541:62:20"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:20",
														"nodeType": "YulTypedName",
														"src": "524:5:20",
														"type": ""
													}
												],
												"src": "489:120:20"
											},
											{
												"body": {
													"nativeSrc": "666:86:20",
													"nodeType": "YulBlock",
													"src": "666:86:20",
													"statements": [
														{
															"nativeSrc": "676:29:20",
															"nodeType": "YulAssignment",
															"src": "676:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:20"
																},
																"nativeSrc": "685:20:20",
																"nodeType": "YulFunctionCall",
																"src": "685:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:20"
																},
																"nativeSrc": "714:32:20",
																"nodeType": "YulFunctionCall",
																"src": "714:32:20"
															},
															"nativeSrc": "714:32:20",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:20"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:20",
														"nodeType": "YulTypedName",
														"src": "644:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:20",
														"nodeType": "YulTypedName",
														"src": "652:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:20",
														"nodeType": "YulTypedName",
														"src": "660:5:20",
														"type": ""
													}
												],
												"src": "615:137:20"
											},
											{
												"body": {
													"nativeSrc": "823:262:20",
													"nodeType": "YulBlock",
													"src": "823:262:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:20",
																"nodeType": "YulBlock",
																"src": "869:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:20"
																			},
																			"nativeSrc": "871:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:20"
																		},
																		"nativeSrc": "871:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:20"
																		},
																		"nativeSrc": "840:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:20",
																		"nodeType": "YulLiteral",
																		"src": "865:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:20"
																},
																"nativeSrc": "836:32:20",
																"nodeType": "YulFunctionCall",
																"src": "836:32:20"
															},
															"nativeSrc": "833:119:20",
															"nodeType": "YulIf",
															"src": "833:119:20"
														},
														{
															"nativeSrc": "962:116:20",
															"nodeType": "YulBlock",
															"src": "962:116:20",
															"statements": [
																{
																	"nativeSrc": "977:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:20",
																		"nodeType": "YulLiteral",
																		"src": "991:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:20",
																			"nodeType": "YulTypedName",
																			"src": "981:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:20",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:20"
																				},
																				"nativeSrc": "1036:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:20",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:20"
																		},
																		"nativeSrc": "1016:52:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:20",
														"nodeType": "YulTypedName",
														"src": "793:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:20",
														"nodeType": "YulTypedName",
														"src": "804:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:20",
														"nodeType": "YulTypedName",
														"src": "816:6:20",
														"type": ""
													}
												],
												"src": "758:327:20"
											},
											{
												"body": {
													"nativeSrc": "1133:48:20",
													"nodeType": "YulBlock",
													"src": "1133:48:20",
													"statements": [
														{
															"nativeSrc": "1143:32:20",
															"nodeType": "YulAssignment",
															"src": "1143:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:20"
																		},
																		"nativeSrc": "1161:13:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:20"
																},
																"nativeSrc": "1154:21:20",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:20",
														"nodeType": "YulTypedName",
														"src": "1115:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:20",
														"nodeType": "YulTypedName",
														"src": "1125:7:20",
														"type": ""
													}
												],
												"src": "1091:90:20"
											},
											{
												"body": {
													"nativeSrc": "1246:50:20",
													"nodeType": "YulBlock",
													"src": "1246:50:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:20",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:20"
																		},
																		"nativeSrc": "1268:21:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:20"
																},
																"nativeSrc": "1256:34:20",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:20"
															},
															"nativeSrc": "1256:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:20"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:20",
														"nodeType": "YulTypedName",
														"src": "1234:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:20",
														"nodeType": "YulTypedName",
														"src": "1241:3:20",
														"type": ""
													}
												],
												"src": "1187:109:20"
											},
											{
												"body": {
													"nativeSrc": "1394:118:20",
													"nodeType": "YulBlock",
													"src": "1394:118:20",
													"statements": [
														{
															"nativeSrc": "1404:26:20",
															"nodeType": "YulAssignment",
															"src": "1404:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:20"
																},
																"nativeSrc": "1412:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:20"
																		},
																		"nativeSrc": "1487:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:20",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:20"
																},
																"nativeSrc": "1440:65:20",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:20"
															},
															"nativeSrc": "1440:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:20",
														"nodeType": "YulTypedName",
														"src": "1366:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:20",
														"nodeType": "YulTypedName",
														"src": "1378:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:20",
														"nodeType": "YulTypedName",
														"src": "1389:4:20",
														"type": ""
													}
												],
												"src": "1302:210:20"
											},
											{
												"body": {
													"nativeSrc": "1563:32:20",
													"nodeType": "YulBlock",
													"src": "1563:32:20",
													"statements": [
														{
															"nativeSrc": "1573:16:20",
															"nodeType": "YulAssignment",
															"src": "1573:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:20",
																"nodeType": "YulIdentifier",
																"src": "1584:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:20",
														"nodeType": "YulTypedName",
														"src": "1545:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:20",
														"nodeType": "YulTypedName",
														"src": "1555:7:20",
														"type": ""
													}
												],
												"src": "1518:77:20"
											},
											{
												"body": {
													"nativeSrc": "1644:79:20",
													"nodeType": "YulBlock",
													"src": "1644:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:20",
																"nodeType": "YulBlock",
																"src": "1701:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:20"
																			},
																			"nativeSrc": "1703:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:20"
																		},
																		"nativeSrc": "1703:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:20"
																				},
																				"nativeSrc": "1674:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:20"
																		},
																		"nativeSrc": "1664:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:20"
																},
																"nativeSrc": "1657:43:20",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:20"
															},
															"nativeSrc": "1654:63:20",
															"nodeType": "YulIf",
															"src": "1654:63:20"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:20",
														"nodeType": "YulTypedName",
														"src": "1637:5:20",
														"type": ""
													}
												],
												"src": "1601:122:20"
											},
											{
												"body": {
													"nativeSrc": "1781:87:20",
													"nodeType": "YulBlock",
													"src": "1781:87:20",
													"statements": [
														{
															"nativeSrc": "1791:29:20",
															"nodeType": "YulAssignment",
															"src": "1791:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:20"
																},
																"nativeSrc": "1800:20:20",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:20"
																},
																"nativeSrc": "1829:33:20",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:20"
															},
															"nativeSrc": "1829:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:20",
														"nodeType": "YulTypedName",
														"src": "1759:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:20",
														"nodeType": "YulTypedName",
														"src": "1767:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:20",
														"nodeType": "YulTypedName",
														"src": "1775:5:20",
														"type": ""
													}
												],
												"src": "1729:139:20"
											},
											{
												"body": {
													"nativeSrc": "1940:263:20",
													"nodeType": "YulBlock",
													"src": "1940:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:20",
																"nodeType": "YulBlock",
																"src": "1986:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:20"
																			},
																			"nativeSrc": "1988:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:20"
																		},
																		"nativeSrc": "1988:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:20"
																		},
																		"nativeSrc": "1957:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:20"
																},
																"nativeSrc": "1953:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:20"
															},
															"nativeSrc": "1950:119:20",
															"nodeType": "YulIf",
															"src": "1950:119:20"
														},
														{
															"nativeSrc": "2079:117:20",
															"nodeType": "YulBlock",
															"src": "2079:117:20",
															"statements": [
																{
																	"nativeSrc": "2094:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:20",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:20"
																				},
																				"nativeSrc": "2154:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:20"
																		},
																		"nativeSrc": "2133:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:20",
														"nodeType": "YulTypedName",
														"src": "1910:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:20",
														"nodeType": "YulTypedName",
														"src": "1921:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:20",
														"nodeType": "YulTypedName",
														"src": "1933:6:20",
														"type": ""
													}
												],
												"src": "1874:329:20"
											},
											{
												"body": {
													"nativeSrc": "2274:53:20",
													"nodeType": "YulBlock",
													"src": "2274:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:20"
																		},
																		"nativeSrc": "2296:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:20"
																},
																"nativeSrc": "2284:37:20",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:20"
															},
															"nativeSrc": "2284:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:20",
														"nodeType": "YulTypedName",
														"src": "2262:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:20",
														"nodeType": "YulTypedName",
														"src": "2269:3:20",
														"type": ""
													}
												],
												"src": "2209:118:20"
											},
											{
												"body": {
													"nativeSrc": "2431:124:20",
													"nodeType": "YulBlock",
													"src": "2431:124:20",
													"statements": [
														{
															"nativeSrc": "2441:26:20",
															"nodeType": "YulAssignment",
															"src": "2441:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:20"
																},
																"nativeSrc": "2449:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:20",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:20"
																		},
																		"nativeSrc": "2530:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:20"
																},
																"nativeSrc": "2477:71:20",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:20"
															},
															"nativeSrc": "2477:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:20",
														"nodeType": "YulTypedName",
														"src": "2403:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:20",
														"nodeType": "YulTypedName",
														"src": "2415:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:20",
														"nodeType": "YulTypedName",
														"src": "2426:4:20",
														"type": ""
													}
												],
												"src": "2333:222:20"
											},
											{
												"body": {
													"nativeSrc": "2606:81:20",
													"nodeType": "YulBlock",
													"src": "2606:81:20",
													"statements": [
														{
															"nativeSrc": "2616:65:20",
															"nodeType": "YulAssignment",
															"src": "2616:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:20",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:20"
																},
																"nativeSrc": "2627:54:20",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:20",
														"nodeType": "YulTypedName",
														"src": "2588:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:20",
														"nodeType": "YulTypedName",
														"src": "2598:7:20",
														"type": ""
													}
												],
												"src": "2561:126:20"
											},
											{
												"body": {
													"nativeSrc": "2738:51:20",
													"nodeType": "YulBlock",
													"src": "2738:51:20",
													"statements": [
														{
															"nativeSrc": "2748:35:20",
															"nodeType": "YulAssignment",
															"src": "2748:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:20"
																},
																"nativeSrc": "2759:24:20",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:20",
														"nodeType": "YulTypedName",
														"src": "2720:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:20",
														"nodeType": "YulTypedName",
														"src": "2730:7:20",
														"type": ""
													}
												],
												"src": "2693:96:20"
											},
											{
												"body": {
													"nativeSrc": "2838:79:20",
													"nodeType": "YulBlock",
													"src": "2838:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:20",
																"nodeType": "YulBlock",
																"src": "2895:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:20"
																			},
																			"nativeSrc": "2897:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:20"
																		},
																		"nativeSrc": "2897:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:20"
																				},
																				"nativeSrc": "2868:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:20"
																		},
																		"nativeSrc": "2858:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:20"
																},
																"nativeSrc": "2851:43:20",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:20"
															},
															"nativeSrc": "2848:63:20",
															"nodeType": "YulIf",
															"src": "2848:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:20",
														"nodeType": "YulTypedName",
														"src": "2831:5:20",
														"type": ""
													}
												],
												"src": "2795:122:20"
											},
											{
												"body": {
													"nativeSrc": "2975:87:20",
													"nodeType": "YulBlock",
													"src": "2975:87:20",
													"statements": [
														{
															"nativeSrc": "2985:29:20",
															"nodeType": "YulAssignment",
															"src": "2985:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:20"
																},
																"nativeSrc": "2994:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:20"
																},
																"nativeSrc": "3023:33:20",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:20"
															},
															"nativeSrc": "3023:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:20",
														"nodeType": "YulTypedName",
														"src": "2953:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:20",
														"nodeType": "YulTypedName",
														"src": "2961:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:20",
														"nodeType": "YulTypedName",
														"src": "2969:5:20",
														"type": ""
													}
												],
												"src": "2923:139:20"
											},
											{
												"body": {
													"nativeSrc": "3151:391:20",
													"nodeType": "YulBlock",
													"src": "3151:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:20",
																"nodeType": "YulBlock",
																"src": "3197:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:20"
																			},
																			"nativeSrc": "3199:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:20"
																		},
																		"nativeSrc": "3199:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:20"
																		},
																		"nativeSrc": "3168:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:20"
																},
																"nativeSrc": "3164:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:20"
															},
															"nativeSrc": "3161:119:20",
															"nodeType": "YulIf",
															"src": "3161:119:20"
														},
														{
															"nativeSrc": "3290:117:20",
															"nodeType": "YulBlock",
															"src": "3290:117:20",
															"statements": [
																{
																	"nativeSrc": "3305:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:20",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:20"
																				},
																				"nativeSrc": "3365:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:20"
																		},
																		"nativeSrc": "3344:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:20",
															"nodeType": "YulBlock",
															"src": "3417:118:20",
															"statements": [
																{
																	"nativeSrc": "3432:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:20"
																				},
																				"nativeSrc": "3493:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:20"
																		},
																		"nativeSrc": "3472:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:20",
														"nodeType": "YulTypedName",
														"src": "3113:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:20",
														"nodeType": "YulTypedName",
														"src": "3124:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:20",
														"nodeType": "YulTypedName",
														"src": "3136:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:20",
														"nodeType": "YulTypedName",
														"src": "3144:6:20",
														"type": ""
													}
												],
												"src": "3068:474:20"
											},
											{
												"body": {
													"nativeSrc": "3614:263:20",
													"nodeType": "YulBlock",
													"src": "3614:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3660:83:20",
																"nodeType": "YulBlock",
																"src": "3660:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3662:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3662:77:20"
																			},
																			"nativeSrc": "3662:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3662:79:20"
																		},
																		"nativeSrc": "3662:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3662:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3635:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3635:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3644:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3631:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:20"
																		},
																		"nativeSrc": "3631:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3631:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3656:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3627:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:20"
																},
																"nativeSrc": "3627:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3627:32:20"
															},
															"nativeSrc": "3624:119:20",
															"nodeType": "YulIf",
															"src": "3624:119:20"
														},
														{
															"nativeSrc": "3753:117:20",
															"nodeType": "YulBlock",
															"src": "3753:117:20",
															"statements": [
																{
																	"nativeSrc": "3768:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3768:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3782:1:20",
																		"nodeType": "YulLiteral",
																		"src": "3782:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3772:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3772:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3797:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3797:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3832:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3843:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:20"
																				},
																				"nativeSrc": "3828:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3852:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3807:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:20"
																		},
																		"nativeSrc": "3807:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3797:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3548:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3584:9:20",
														"nodeType": "YulTypedName",
														"src": "3584:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3595:7:20",
														"nodeType": "YulTypedName",
														"src": "3595:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3607:6:20",
														"nodeType": "YulTypedName",
														"src": "3607:6:20",
														"type": ""
													}
												],
												"src": "3548:329:20"
											},
											{
												"body": {
													"nativeSrc": "3966:391:20",
													"nodeType": "YulBlock",
													"src": "3966:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4012:83:20",
																"nodeType": "YulBlock",
																"src": "4012:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4014:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "4014:77:20"
																			},
																			"nativeSrc": "4014:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4014:79:20"
																		},
																		"nativeSrc": "4014:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4014:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3987:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3987:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3996:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3983:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:20"
																		},
																		"nativeSrc": "3983:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3983:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4008:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3979:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:20"
																},
																"nativeSrc": "3979:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3979:32:20"
															},
															"nativeSrc": "3976:119:20",
															"nodeType": "YulIf",
															"src": "3976:119:20"
														},
														{
															"nativeSrc": "4105:117:20",
															"nodeType": "YulBlock",
															"src": "4105:117:20",
															"statements": [
																{
																	"nativeSrc": "4120:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4120:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4134:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4134:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4124:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4124:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4149:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4149:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4184:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4184:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4195:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4195:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4180:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4180:3:20"
																				},
																				"nativeSrc": "4180:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4180:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4204:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4204:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4159:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4159:20:20"
																		},
																		"nativeSrc": "4159:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4159:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4149:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4149:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4232:118:20",
															"nodeType": "YulBlock",
															"src": "4232:118:20",
															"statements": [
																{
																	"nativeSrc": "4247:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4247:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4261:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4251:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4251:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4277:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4277:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4312:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4312:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4323:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4323:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4308:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4308:3:20"
																				},
																				"nativeSrc": "4308:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4308:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4332:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4332:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4287:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4287:20:20"
																		},
																		"nativeSrc": "4287:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4287:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4277:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4277:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3883:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3928:9:20",
														"nodeType": "YulTypedName",
														"src": "3928:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3939:7:20",
														"nodeType": "YulTypedName",
														"src": "3939:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3951:6:20",
														"nodeType": "YulTypedName",
														"src": "3951:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3959:6:20",
														"nodeType": "YulTypedName",
														"src": "3959:6:20",
														"type": ""
													}
												],
												"src": "3883:474:20"
											},
											{
												"body": {
													"nativeSrc": "4452:28:20",
													"nodeType": "YulBlock",
													"src": "4452:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4469:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4469:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4472:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4472:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4462:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4462:6:20"
																},
																"nativeSrc": "4462:12:20",
																"nodeType": "YulFunctionCall",
																"src": "4462:12:20"
															},
															"nativeSrc": "4462:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "4462:12:20"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4363:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "4363:117:20"
											},
											{
												"body": {
													"nativeSrc": "4575:28:20",
													"nodeType": "YulBlock",
													"src": "4575:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4592:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4592:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4595:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4595:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4585:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:20"
																},
																"nativeSrc": "4585:12:20",
																"nodeType": "YulFunctionCall",
																"src": "4585:12:20"
															},
															"nativeSrc": "4585:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "4585:12:20"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4486:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "4486:117:20"
											},
											{
												"body": {
													"nativeSrc": "4657:54:20",
													"nodeType": "YulBlock",
													"src": "4657:54:20",
													"statements": [
														{
															"nativeSrc": "4667:38:20",
															"nodeType": "YulAssignment",
															"src": "4667:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4685:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4685:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4692:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4681:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:20"
																		},
																		"nativeSrc": "4681:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4681:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4701:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4701:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4697:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:20"
																		},
																		"nativeSrc": "4697:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4697:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4677:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4677:3:20"
																},
																"nativeSrc": "4677:28:20",
																"nodeType": "YulFunctionCall",
																"src": "4677:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4667:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4609:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4640:5:20",
														"nodeType": "YulTypedName",
														"src": "4640:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4650:6:20",
														"nodeType": "YulTypedName",
														"src": "4650:6:20",
														"type": ""
													}
												],
												"src": "4609:102:20"
											},
											{
												"body": {
													"nativeSrc": "4745:152:20",
													"nodeType": "YulBlock",
													"src": "4745:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4762:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4762:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4765:77:20",
																		"nodeType": "YulLiteral",
																		"src": "4765:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:20"
																},
																"nativeSrc": "4755:88:20",
																"nodeType": "YulFunctionCall",
																"src": "4755:88:20"
															},
															"nativeSrc": "4755:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "4755:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4859:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4859:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4862:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4862:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4852:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:20"
																},
																"nativeSrc": "4852:15:20",
																"nodeType": "YulFunctionCall",
																"src": "4852:15:20"
															},
															"nativeSrc": "4852:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "4852:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4883:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4883:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4886:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4886:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4876:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:20"
																},
																"nativeSrc": "4876:15:20",
																"nodeType": "YulFunctionCall",
																"src": "4876:15:20"
															},
															"nativeSrc": "4876:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "4876:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4717:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "4717:180:20"
											},
											{
												"body": {
													"nativeSrc": "4946:238:20",
													"nodeType": "YulBlock",
													"src": "4946:238:20",
													"statements": [
														{
															"nativeSrc": "4956:58:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4956:58:20",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4978:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4978:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5008:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "5008:4:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4986:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "4986:21:20"
																		},
																		"nativeSrc": "4986:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:27:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4974:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:20"
																},
																"nativeSrc": "4974:40:20",
																"nodeType": "YulFunctionCall",
																"src": "4974:40:20"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4960:10:20",
																	"nodeType": "YulTypedName",
																	"src": "4960:10:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5125:22:20",
																"nodeType": "YulBlock",
																"src": "5125:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5127:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "5127:16:20"
																			},
																			"nativeSrc": "5127:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5127:18:20"
																		},
																		"nativeSrc": "5127:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5127:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5068:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "5068:10:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5080:18:20",
																				"nodeType": "YulLiteral",
																				"src": "5080:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5065:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "5065:2:20"
																		},
																		"nativeSrc": "5065:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5065:34:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5104:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "5104:10:20"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5116:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5116:6:20"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5101:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "5101:2:20"
																		},
																		"nativeSrc": "5101:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5101:22:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5062:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "5062:2:20"
																},
																"nativeSrc": "5062:62:20",
																"nodeType": "YulFunctionCall",
																"src": "5062:62:20"
															},
															"nativeSrc": "5059:88:20",
															"nodeType": "YulIf",
															"src": "5059:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5163:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5163:2:20",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5167:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "5167:10:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:20"
																},
																"nativeSrc": "5156:22:20",
																"nodeType": "YulFunctionCall",
																"src": "5156:22:20"
															},
															"nativeSrc": "5156:22:20",
															"nodeType": "YulExpressionStatement",
															"src": "5156:22:20"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4903:281:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4932:6:20",
														"nodeType": "YulTypedName",
														"src": "4932:6:20",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4940:4:20",
														"nodeType": "YulTypedName",
														"src": "4940:4:20",
														"type": ""
													}
												],
												"src": "4903:281:20"
											},
											{
												"body": {
													"nativeSrc": "5231:88:20",
													"nodeType": "YulBlock",
													"src": "5231:88:20",
													"statements": [
														{
															"nativeSrc": "5241:30:20",
															"nodeType": "YulAssignment",
															"src": "5241:30:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5251:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "5251:18:20"
																},
																"nativeSrc": "5251:20:20",
																"nodeType": "YulFunctionCall",
																"src": "5251:20:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5241:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5300:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5300:6:20"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5308:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "5308:4:20"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5280:19:20",
																	"nodeType": "YulIdentifier",
																	"src": "5280:19:20"
																},
																"nativeSrc": "5280:33:20",
																"nodeType": "YulFunctionCall",
																"src": "5280:33:20"
															},
															"nativeSrc": "5280:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "5280:33:20"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5190:129:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5215:4:20",
														"nodeType": "YulTypedName",
														"src": "5215:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5224:6:20",
														"nodeType": "YulTypedName",
														"src": "5224:6:20",
														"type": ""
													}
												],
												"src": "5190:129:20"
											},
											{
												"body": {
													"nativeSrc": "5391:241:20",
													"nodeType": "YulBlock",
													"src": "5391:241:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "5496:22:20",
																"nodeType": "YulBlock",
																"src": "5496:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5498:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "5498:16:20"
																			},
																			"nativeSrc": "5498:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5498:18:20"
																		},
																		"nativeSrc": "5498:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5498:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5468:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5468:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5476:18:20",
																		"nodeType": "YulLiteral",
																		"src": "5476:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5465:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "5465:2:20"
																},
																"nativeSrc": "5465:30:20",
																"nodeType": "YulFunctionCall",
																"src": "5465:30:20"
															},
															"nativeSrc": "5462:56:20",
															"nodeType": "YulIf",
															"src": "5462:56:20"
														},
														{
															"nativeSrc": "5528:37:20",
															"nodeType": "YulAssignment",
															"src": "5528:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5558:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5558:6:20"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5536:21:20",
																	"nodeType": "YulIdentifier",
																	"src": "5536:21:20"
																},
																"nativeSrc": "5536:29:20",
																"nodeType": "YulFunctionCall",
																"src": "5536:29:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5528:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5528:4:20"
																}
															]
														},
														{
															"nativeSrc": "5602:23:20",
															"nodeType": "YulAssignment",
															"src": "5602:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5614:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "5614:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5620:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5620:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5610:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:20"
																},
																"nativeSrc": "5610:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5610:15:20"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5602:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5602:4:20"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "5325:307:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5375:6:20",
														"nodeType": "YulTypedName",
														"src": "5375:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5386:4:20",
														"nodeType": "YulTypedName",
														"src": "5386:4:20",
														"type": ""
													}
												],
												"src": "5325:307:20"
											},
											{
												"body": {
													"nativeSrc": "5702:84:20",
													"nodeType": "YulBlock",
													"src": "5702:84:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5726:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5726:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5731:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5731:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5736:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5736:6:20"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5713:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "5713:12:20"
																},
																"nativeSrc": "5713:30:20",
																"nodeType": "YulFunctionCall",
																"src": "5713:30:20"
															},
															"nativeSrc": "5713:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "5713:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5763:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "5763:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5768:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5768:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5759:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:20"
																		},
																		"nativeSrc": "5759:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5759:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5777:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5777:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5752:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5752:6:20"
																},
																"nativeSrc": "5752:27:20",
																"nodeType": "YulFunctionCall",
																"src": "5752:27:20"
															},
															"nativeSrc": "5752:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "5752:27:20"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5638:148:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5684:3:20",
														"nodeType": "YulTypedName",
														"src": "5684:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5689:3:20",
														"nodeType": "YulTypedName",
														"src": "5689:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5694:6:20",
														"nodeType": "YulTypedName",
														"src": "5694:6:20",
														"type": ""
													}
												],
												"src": "5638:148:20"
											},
											{
												"body": {
													"nativeSrc": "5875:340:20",
													"nodeType": "YulBlock",
													"src": "5875:340:20",
													"statements": [
														{
															"nativeSrc": "5885:74:20",
															"nodeType": "YulAssignment",
															"src": "5885:74:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5951:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5951:6:20"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "5910:40:20",
																			"nodeType": "YulIdentifier",
																			"src": "5910:40:20"
																		},
																		"nativeSrc": "5910:48:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5910:48:20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5894:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "5894:15:20"
																},
																"nativeSrc": "5894:65:20",
																"nodeType": "YulFunctionCall",
																"src": "5894:65:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5885:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "5885:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5975:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5975:5:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5982:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5982:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5968:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5968:6:20"
																},
																"nativeSrc": "5968:21:20",
																"nodeType": "YulFunctionCall",
																"src": "5968:21:20"
															},
															"nativeSrc": "5968:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "5968:21:20"
														},
														{
															"nativeSrc": "5998:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "5998:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6013:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "6013:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6020:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6020:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6009:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6009:3:20"
																},
																"nativeSrc": "6009:16:20",
																"nodeType": "YulFunctionCall",
																"src": "6009:16:20"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6002:3:20",
																	"nodeType": "YulTypedName",
																	"src": "6002:3:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6063:83:20",
																"nodeType": "YulBlock",
																"src": "6063:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6065:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6065:77:20"
																			},
																			"nativeSrc": "6065:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6065:79:20"
																		},
																		"nativeSrc": "6065:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6065:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6044:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "6044:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6049:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6049:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6040:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:20"
																		},
																		"nativeSrc": "6040:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6040:16:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6058:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6058:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6037:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "6037:2:20"
																},
																"nativeSrc": "6037:25:20",
																"nodeType": "YulFunctionCall",
																"src": "6037:25:20"
															},
															"nativeSrc": "6034:112:20",
															"nodeType": "YulIf",
															"src": "6034:112:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6192:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6192:3:20"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6197:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6197:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6202:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6202:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6155:36:20",
																	"nodeType": "YulIdentifier",
																	"src": "6155:36:20"
																},
																"nativeSrc": "6155:54:20",
																"nodeType": "YulFunctionCall",
																"src": "6155:54:20"
															},
															"nativeSrc": "6155:54:20",
															"nodeType": "YulExpressionStatement",
															"src": "6155:54:20"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "5792:423:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5848:3:20",
														"nodeType": "YulTypedName",
														"src": "5848:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5853:6:20",
														"nodeType": "YulTypedName",
														"src": "5853:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5861:3:20",
														"nodeType": "YulTypedName",
														"src": "5861:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5869:5:20",
														"nodeType": "YulTypedName",
														"src": "5869:5:20",
														"type": ""
													}
												],
												"src": "5792:423:20"
											},
											{
												"body": {
													"nativeSrc": "6295:277:20",
													"nodeType": "YulBlock",
													"src": "6295:277:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6344:83:20",
																"nodeType": "YulBlock",
																"src": "6344:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6346:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6346:77:20"
																			},
																			"nativeSrc": "6346:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6346:79:20"
																		},
																		"nativeSrc": "6346:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6323:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "6323:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6331:4:20",
																						"nodeType": "YulLiteral",
																						"src": "6331:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6319:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6319:3:20"
																				},
																				"nativeSrc": "6319:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6319:17:20"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6338:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "6338:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6315:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:20"
																		},
																		"nativeSrc": "6315:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6308:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:20"
																},
																"nativeSrc": "6308:35:20",
																"nodeType": "YulFunctionCall",
																"src": "6308:35:20"
															},
															"nativeSrc": "6305:122:20",
															"nodeType": "YulIf",
															"src": "6305:122:20"
														},
														{
															"nativeSrc": "6436:34:20",
															"nodeType": "YulVariableDeclaration",
															"src": "6436:34:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6463:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6463:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6450:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "6450:12:20"
																},
																"nativeSrc": "6450:20:20",
																"nodeType": "YulFunctionCall",
																"src": "6450:20:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6440:6:20",
																	"nodeType": "YulTypedName",
																	"src": "6440:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6479:87:20",
															"nodeType": "YulAssignment",
															"src": "6479:87:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6539:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6539:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6547:4:20",
																				"nodeType": "YulLiteral",
																				"src": "6547:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6535:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6535:3:20"
																		},
																		"nativeSrc": "6535:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6535:17:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6554:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6554:6:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6562:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6562:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "6488:46:20",
																	"nodeType": "YulIdentifier",
																	"src": "6488:46:20"
																},
																"nativeSrc": "6488:78:20",
																"nodeType": "YulFunctionCall",
																"src": "6488:78:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6479:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "6479:5:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "6234:338:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6273:6:20",
														"nodeType": "YulTypedName",
														"src": "6273:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6281:3:20",
														"nodeType": "YulTypedName",
														"src": "6281:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6289:5:20",
														"nodeType": "YulTypedName",
														"src": "6289:5:20",
														"type": ""
													}
												],
												"src": "6234:338:20"
											},
											{
												"body": {
													"nativeSrc": "6670:560:20",
													"nodeType": "YulBlock",
													"src": "6670:560:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6716:83:20",
																"nodeType": "YulBlock",
																"src": "6716:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6718:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6718:77:20"
																			},
																			"nativeSrc": "6718:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6718:79:20"
																		},
																		"nativeSrc": "6718:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6718:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6691:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6691:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6700:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6700:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6687:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:20"
																		},
																		"nativeSrc": "6687:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6687:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6712:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6683:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6683:3:20"
																},
																"nativeSrc": "6683:32:20",
																"nodeType": "YulFunctionCall",
																"src": "6683:32:20"
															},
															"nativeSrc": "6680:119:20",
															"nodeType": "YulIf",
															"src": "6680:119:20"
														},
														{
															"nativeSrc": "6809:117:20",
															"nodeType": "YulBlock",
															"src": "6809:117:20",
															"statements": [
																{
																	"nativeSrc": "6824:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:1:20",
																		"nodeType": "YulLiteral",
																		"src": "6838:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:20",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6853:63:20",
																	"nodeType": "YulAssignment",
																	"src": "6853:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6888:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "6888:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6899:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "6899:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6884:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6884:3:20"
																				},
																				"nativeSrc": "6884:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6884:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6908:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6908:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6863:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "6863:20:20"
																		},
																		"nativeSrc": "6863:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6863:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6853:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "6853:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6936:287:20",
															"nodeType": "YulBlock",
															"src": "6936:287:20",
															"statements": [
																{
																	"nativeSrc": "6951:46:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6951:46:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6982:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "6982:9:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6993:2:20",
																						"nodeType": "YulLiteral",
																						"src": "6993:2:20",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6978:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6978:3:20"
																				},
																				"nativeSrc": "6978:18:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6978:18:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6965:12:20",
																			"nodeType": "YulIdentifier",
																			"src": "6965:12:20"
																		},
																		"nativeSrc": "6965:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6965:32:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6955:6:20",
																			"nodeType": "YulTypedName",
																			"src": "6955:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7044:83:20",
																		"nodeType": "YulBlock",
																		"src": "7044:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7046:77:20",
																						"nodeType": "YulIdentifier",
																						"src": "7046:77:20"
																					},
																					"nativeSrc": "7046:79:20",
																					"nodeType": "YulFunctionCall",
																					"src": "7046:79:20"
																				},
																				"nativeSrc": "7046:79:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "7046:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7016:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7016:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7024:18:20",
																				"nodeType": "YulLiteral",
																				"src": "7024:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7013:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "7013:2:20"
																		},
																		"nativeSrc": "7013:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:30:20"
																	},
																	"nativeSrc": "7010:117:20",
																	"nodeType": "YulIf",
																	"src": "7010:117:20"
																},
																{
																	"nativeSrc": "7141:72:20",
																	"nodeType": "YulAssignment",
																	"src": "7141:72:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7185:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "7185:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7196:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "7196:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7181:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7181:3:20"
																				},
																				"nativeSrc": "7181:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7181:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7205:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "7205:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "7151:29:20",
																			"nodeType": "YulIdentifier",
																			"src": "7151:29:20"
																		},
																		"nativeSrc": "7151:62:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7151:62:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7141:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "7141:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "6578:652:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6632:9:20",
														"nodeType": "YulTypedName",
														"src": "6632:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6643:7:20",
														"nodeType": "YulTypedName",
														"src": "6643:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6655:6:20",
														"nodeType": "YulTypedName",
														"src": "6655:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6663:6:20",
														"nodeType": "YulTypedName",
														"src": "6663:6:20",
														"type": ""
													}
												],
												"src": "6578:652:20"
											},
											{
												"body": {
													"nativeSrc": "7332:73:20",
													"nodeType": "YulBlock",
													"src": "7332:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7349:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7349:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7354:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7354:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7342:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:20"
																},
																"nativeSrc": "7342:19:20",
																"nodeType": "YulFunctionCall",
																"src": "7342:19:20"
															},
															"nativeSrc": "7342:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "7342:19:20"
														},
														{
															"nativeSrc": "7370:29:20",
															"nodeType": "YulAssignment",
															"src": "7370:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7389:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7389:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7394:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7394:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7385:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7385:3:20"
																},
																"nativeSrc": "7385:14:20",
																"nodeType": "YulFunctionCall",
																"src": "7385:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7370:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "7370:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7236:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7304:3:20",
														"nodeType": "YulTypedName",
														"src": "7304:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7309:6:20",
														"nodeType": "YulTypedName",
														"src": "7309:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7320:11:20",
														"nodeType": "YulTypedName",
														"src": "7320:11:20",
														"type": ""
													}
												],
												"src": "7236:169:20"
											},
											{
												"body": {
													"nativeSrc": "7517:128:20",
													"nodeType": "YulBlock",
													"src": "7517:128:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7539:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7539:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7547:1:20",
																				"nodeType": "YulLiteral",
																				"src": "7547:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7535:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7535:3:20"
																		},
																		"nativeSrc": "7535:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7535:14:20"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "7551:34:20",
																		"nodeType": "YulLiteral",
																		"src": "7551:34:20",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7528:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7528:6:20"
																},
																"nativeSrc": "7528:58:20",
																"nodeType": "YulFunctionCall",
																"src": "7528:58:20"
															},
															"nativeSrc": "7528:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "7528:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7607:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7607:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7615:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7615:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7603:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:20"
																		},
																		"nativeSrc": "7603:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7603:15:20"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "7620:17:20",
																		"nodeType": "YulLiteral",
																		"src": "7620:17:20",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7596:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7596:6:20"
																},
																"nativeSrc": "7596:42:20",
																"nodeType": "YulFunctionCall",
																"src": "7596:42:20"
															},
															"nativeSrc": "7596:42:20",
															"nodeType": "YulExpressionStatement",
															"src": "7596:42:20"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nativeSrc": "7411:234:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7509:6:20",
														"nodeType": "YulTypedName",
														"src": "7509:6:20",
														"type": ""
													}
												],
												"src": "7411:234:20"
											},
											{
												"body": {
													"nativeSrc": "7797:220:20",
													"nodeType": "YulBlock",
													"src": "7797:220:20",
													"statements": [
														{
															"nativeSrc": "7807:74:20",
															"nodeType": "YulAssignment",
															"src": "7807:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7873:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7873:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7878:2:20",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7814:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "7814:58:20"
																},
																"nativeSrc": "7814:67:20",
																"nodeType": "YulFunctionCall",
																"src": "7814:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7807:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7979:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7979:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nativeSrc": "7890:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "7890:88:20"
																},
																"nativeSrc": "7890:93:20",
																"nodeType": "YulFunctionCall",
																"src": "7890:93:20"
															},
															"nativeSrc": "7890:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "7890:93:20"
														},
														{
															"nativeSrc": "7992:19:20",
															"nodeType": "YulAssignment",
															"src": "7992:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8003:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8003:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8008:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8008:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7999:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7999:3:20"
																},
																"nativeSrc": "7999:12:20",
																"nodeType": "YulFunctionCall",
																"src": "7999:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7992:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7651:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7785:3:20",
														"nodeType": "YulTypedName",
														"src": "7785:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7793:3:20",
														"nodeType": "YulTypedName",
														"src": "7793:3:20",
														"type": ""
													}
												],
												"src": "7651:366:20"
											},
											{
												"body": {
													"nativeSrc": "8194:248:20",
													"nodeType": "YulBlock",
													"src": "8194:248:20",
													"statements": [
														{
															"nativeSrc": "8204:26:20",
															"nodeType": "YulAssignment",
															"src": "8204:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8216:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8216:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8227:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8227:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8212:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8212:3:20"
																},
																"nativeSrc": "8212:18:20",
																"nodeType": "YulFunctionCall",
																"src": "8212:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8204:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8204:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8251:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8251:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8262:1:20",
																				"nodeType": "YulLiteral",
																				"src": "8262:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8247:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8247:3:20"
																		},
																		"nativeSrc": "8247:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8247:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8270:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8270:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8276:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8276:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8266:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8266:3:20"
																		},
																		"nativeSrc": "8266:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8266:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8240:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:20"
																},
																"nativeSrc": "8240:47:20",
																"nodeType": "YulFunctionCall",
																"src": "8240:47:20"
															},
															"nativeSrc": "8240:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "8240:47:20"
														},
														{
															"nativeSrc": "8296:139:20",
															"nodeType": "YulAssignment",
															"src": "8296:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8430:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8430:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8304:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "8304:124:20"
																},
																"nativeSrc": "8304:131:20",
																"nodeType": "YulFunctionCall",
																"src": "8304:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8296:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8296:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8023:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8174:9:20",
														"nodeType": "YulTypedName",
														"src": "8174:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8189:4:20",
														"nodeType": "YulTypedName",
														"src": "8189:4:20",
														"type": ""
													}
												],
												"src": "8023:419:20"
											},
											{
												"body": {
													"nativeSrc": "8554:125:20",
													"nodeType": "YulBlock",
													"src": "8554:125:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8576:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8576:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8584:1:20",
																				"nodeType": "YulLiteral",
																				"src": "8584:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8572:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:20"
																		},
																		"nativeSrc": "8572:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:14:20"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "8588:34:20",
																		"nodeType": "YulLiteral",
																		"src": "8588:34:20",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:20"
																},
																"nativeSrc": "8565:58:20",
																"nodeType": "YulFunctionCall",
																"src": "8565:58:20"
															},
															"nativeSrc": "8565:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "8565:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8644:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8644:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8652:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8652:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8640:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8640:3:20"
																		},
																		"nativeSrc": "8640:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8640:15:20"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "8657:14:20",
																		"nodeType": "YulLiteral",
																		"src": "8657:14:20",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8633:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8633:6:20"
																},
																"nativeSrc": "8633:39:20",
																"nodeType": "YulFunctionCall",
																"src": "8633:39:20"
															},
															"nativeSrc": "8633:39:20",
															"nodeType": "YulExpressionStatement",
															"src": "8633:39:20"
														}
													]
												},
												"name": "store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
												"nativeSrc": "8448:231:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8546:6:20",
														"nodeType": "YulTypedName",
														"src": "8546:6:20",
														"type": ""
													}
												],
												"src": "8448:231:20"
											},
											{
												"body": {
													"nativeSrc": "8831:220:20",
													"nodeType": "YulBlock",
													"src": "8831:220:20",
													"statements": [
														{
															"nativeSrc": "8841:74:20",
															"nodeType": "YulAssignment",
															"src": "8841:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8907:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8907:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8912:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:20",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8848:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "8848:58:20"
																},
																"nativeSrc": "8848:67:20",
																"nodeType": "YulFunctionCall",
																"src": "8848:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8841:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8841:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9013:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9013:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																	"nativeSrc": "8924:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "8924:88:20"
																},
																"nativeSrc": "8924:93:20",
																"nodeType": "YulFunctionCall",
																"src": "8924:93:20"
															},
															"nativeSrc": "8924:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "8924:93:20"
														},
														{
															"nativeSrc": "9026:19:20",
															"nodeType": "YulAssignment",
															"src": "9026:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9037:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9037:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9042:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9042:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9033:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9033:3:20"
																},
																"nativeSrc": "9033:12:20",
																"nodeType": "YulFunctionCall",
																"src": "9033:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9026:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9026:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8685:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8819:3:20",
														"nodeType": "YulTypedName",
														"src": "8819:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8827:3:20",
														"nodeType": "YulTypedName",
														"src": "8827:3:20",
														"type": ""
													}
												],
												"src": "8685:366:20"
											},
											{
												"body": {
													"nativeSrc": "9228:248:20",
													"nodeType": "YulBlock",
													"src": "9228:248:20",
													"statements": [
														{
															"nativeSrc": "9238:26:20",
															"nodeType": "YulAssignment",
															"src": "9238:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9250:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9250:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9261:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9261:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9246:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9246:3:20"
																},
																"nativeSrc": "9246:18:20",
																"nodeType": "YulFunctionCall",
																"src": "9246:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9238:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9238:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9285:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9285:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9296:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9296:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9281:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9281:3:20"
																		},
																		"nativeSrc": "9281:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9281:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9304:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "9304:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9310:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9310:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9300:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9300:3:20"
																		},
																		"nativeSrc": "9300:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9300:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9274:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9274:6:20"
																},
																"nativeSrc": "9274:47:20",
																"nodeType": "YulFunctionCall",
																"src": "9274:47:20"
															},
															"nativeSrc": "9274:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "9274:47:20"
														},
														{
															"nativeSrc": "9330:139:20",
															"nodeType": "YulAssignment",
															"src": "9330:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9464:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "9464:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9338:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "9338:124:20"
																},
																"nativeSrc": "9338:131:20",
																"nodeType": "YulFunctionCall",
																"src": "9338:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9330:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9330:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9057:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9208:9:20",
														"nodeType": "YulTypedName",
														"src": "9208:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9223:4:20",
														"nodeType": "YulTypedName",
														"src": "9223:4:20",
														"type": ""
													}
												],
												"src": "9057:419:20"
											},
											{
												"body": {
													"nativeSrc": "9588:125:20",
													"nodeType": "YulBlock",
													"src": "9588:125:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9610:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9610:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9618:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9618:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9606:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9606:3:20"
																		},
																		"nativeSrc": "9606:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9606:14:20"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "9622:34:20",
																		"nodeType": "YulLiteral",
																		"src": "9622:34:20",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9599:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9599:6:20"
																},
																"nativeSrc": "9599:58:20",
																"nodeType": "YulFunctionCall",
																"src": "9599:58:20"
															},
															"nativeSrc": "9599:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "9599:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9678:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9678:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9686:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9686:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9674:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9674:3:20"
																		},
																		"nativeSrc": "9674:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:15:20"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nativeSrc": "9691:14:20",
																		"nodeType": "YulLiteral",
																		"src": "9691:14:20",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9667:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:20"
																},
																"nativeSrc": "9667:39:20",
																"nodeType": "YulFunctionCall",
																"src": "9667:39:20"
															},
															"nativeSrc": "9667:39:20",
															"nodeType": "YulExpressionStatement",
															"src": "9667:39:20"
														}
													]
												},
												"name": "store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
												"nativeSrc": "9482:231:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9580:6:20",
														"nodeType": "YulTypedName",
														"src": "9580:6:20",
														"type": ""
													}
												],
												"src": "9482:231:20"
											},
											{
												"body": {
													"nativeSrc": "9865:220:20",
													"nodeType": "YulBlock",
													"src": "9865:220:20",
													"statements": [
														{
															"nativeSrc": "9875:74:20",
															"nodeType": "YulAssignment",
															"src": "9875:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9941:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9941:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9946:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9946:2:20",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9882:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "9882:58:20"
																},
																"nativeSrc": "9882:67:20",
																"nodeType": "YulFunctionCall",
																"src": "9882:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9875:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9875:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10047:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10047:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																	"nativeSrc": "9958:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "9958:88:20"
																},
																"nativeSrc": "9958:93:20",
																"nodeType": "YulFunctionCall",
																"src": "9958:93:20"
															},
															"nativeSrc": "9958:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "9958:93:20"
														},
														{
															"nativeSrc": "10060:19:20",
															"nodeType": "YulAssignment",
															"src": "10060:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10071:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10071:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10076:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10076:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10067:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10067:3:20"
																},
																"nativeSrc": "10067:12:20",
																"nodeType": "YulFunctionCall",
																"src": "10067:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10060:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10060:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9719:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9853:3:20",
														"nodeType": "YulTypedName",
														"src": "9853:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9861:3:20",
														"nodeType": "YulTypedName",
														"src": "9861:3:20",
														"type": ""
													}
												],
												"src": "9719:366:20"
											},
											{
												"body": {
													"nativeSrc": "10262:248:20",
													"nodeType": "YulBlock",
													"src": "10262:248:20",
													"statements": [
														{
															"nativeSrc": "10272:26:20",
															"nodeType": "YulAssignment",
															"src": "10272:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10284:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "10284:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10295:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10295:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10280:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:20"
																},
																"nativeSrc": "10280:18:20",
																"nodeType": "YulFunctionCall",
																"src": "10280:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10272:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "10272:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10319:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10319:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10330:1:20",
																				"nodeType": "YulLiteral",
																				"src": "10330:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10315:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:20"
																		},
																		"nativeSrc": "10315:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10315:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10338:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "10338:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10344:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10334:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10334:3:20"
																		},
																		"nativeSrc": "10334:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10334:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10308:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10308:6:20"
																},
																"nativeSrc": "10308:47:20",
																"nodeType": "YulFunctionCall",
																"src": "10308:47:20"
															},
															"nativeSrc": "10308:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "10308:47:20"
														},
														{
															"nativeSrc": "10364:139:20",
															"nodeType": "YulAssignment",
															"src": "10364:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10498:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "10498:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10372:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "10372:124:20"
																},
																"nativeSrc": "10372:131:20",
																"nodeType": "YulFunctionCall",
																"src": "10372:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10364:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "10364:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10091:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10242:9:20",
														"nodeType": "YulTypedName",
														"src": "10242:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10257:4:20",
														"nodeType": "YulTypedName",
														"src": "10257:4:20",
														"type": ""
													}
												],
												"src": "10091:419:20"
											},
											{
												"body": {
													"nativeSrc": "10622:127:20",
													"nodeType": "YulBlock",
													"src": "10622:127:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10644:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10644:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10652:1:20",
																				"nodeType": "YulLiteral",
																				"src": "10652:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10640:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10640:3:20"
																		},
																		"nativeSrc": "10640:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10640:14:20"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "10656:34:20",
																		"nodeType": "YulLiteral",
																		"src": "10656:34:20",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10633:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10633:6:20"
																},
																"nativeSrc": "10633:58:20",
																"nodeType": "YulFunctionCall",
																"src": "10633:58:20"
															},
															"nativeSrc": "10633:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "10633:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10712:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10712:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10720:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10720:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10708:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10708:3:20"
																		},
																		"nativeSrc": "10708:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10708:15:20"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "10725:16:20",
																		"nodeType": "YulLiteral",
																		"src": "10725:16:20",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10701:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10701:6:20"
																},
																"nativeSrc": "10701:41:20",
																"nodeType": "YulFunctionCall",
																"src": "10701:41:20"
															},
															"nativeSrc": "10701:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "10701:41:20"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nativeSrc": "10516:233:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10614:6:20",
														"nodeType": "YulTypedName",
														"src": "10614:6:20",
														"type": ""
													}
												],
												"src": "10516:233:20"
											},
											{
												"body": {
													"nativeSrc": "10901:220:20",
													"nodeType": "YulBlock",
													"src": "10901:220:20",
													"statements": [
														{
															"nativeSrc": "10911:74:20",
															"nodeType": "YulAssignment",
															"src": "10911:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10977:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10977:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10982:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10982:2:20",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10918:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "10918:58:20"
																},
																"nativeSrc": "10918:67:20",
																"nodeType": "YulFunctionCall",
																"src": "10918:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10911:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10911:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11083:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11083:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nativeSrc": "10994:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "10994:88:20"
																},
																"nativeSrc": "10994:93:20",
																"nodeType": "YulFunctionCall",
																"src": "10994:93:20"
															},
															"nativeSrc": "10994:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "10994:93:20"
														},
														{
															"nativeSrc": "11096:19:20",
															"nodeType": "YulAssignment",
															"src": "11096:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11107:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11107:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11112:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11112:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11103:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:20"
																},
																"nativeSrc": "11103:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11103:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11096:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11096:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10755:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10889:3:20",
														"nodeType": "YulTypedName",
														"src": "10889:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10897:3:20",
														"nodeType": "YulTypedName",
														"src": "10897:3:20",
														"type": ""
													}
												],
												"src": "10755:366:20"
											},
											{
												"body": {
													"nativeSrc": "11298:248:20",
													"nodeType": "YulBlock",
													"src": "11298:248:20",
													"statements": [
														{
															"nativeSrc": "11308:26:20",
															"nodeType": "YulAssignment",
															"src": "11308:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11320:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "11320:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11331:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11331:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11316:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11316:3:20"
																},
																"nativeSrc": "11316:18:20",
																"nodeType": "YulFunctionCall",
																"src": "11316:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11308:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11308:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11355:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "11355:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11366:1:20",
																				"nodeType": "YulLiteral",
																				"src": "11366:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11351:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11351:3:20"
																		},
																		"nativeSrc": "11351:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11351:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11374:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "11374:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11380:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "11380:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11370:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11370:3:20"
																		},
																		"nativeSrc": "11370:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11370:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11344:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11344:6:20"
																},
																"nativeSrc": "11344:47:20",
																"nodeType": "YulFunctionCall",
																"src": "11344:47:20"
															},
															"nativeSrc": "11344:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "11344:47:20"
														},
														{
															"nativeSrc": "11400:139:20",
															"nodeType": "YulAssignment",
															"src": "11400:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11534:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11534:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11408:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "11408:124:20"
																},
																"nativeSrc": "11408:131:20",
																"nodeType": "YulFunctionCall",
																"src": "11408:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11400:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11400:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11127:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11278:9:20",
														"nodeType": "YulTypedName",
														"src": "11278:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11293:4:20",
														"nodeType": "YulTypedName",
														"src": "11293:4:20",
														"type": ""
													}
												],
												"src": "11127:419:20"
											},
											{
												"body": {
													"nativeSrc": "11605:32:20",
													"nodeType": "YulBlock",
													"src": "11605:32:20",
													"statements": [
														{
															"nativeSrc": "11615:16:20",
															"nodeType": "YulAssignment",
															"src": "11615:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "11626:5:20",
																"nodeType": "YulIdentifier",
																"src": "11626:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11615:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "11615:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "11552:85:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11587:5:20",
														"nodeType": "YulTypedName",
														"src": "11587:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11597:7:20",
														"nodeType": "YulTypedName",
														"src": "11597:7:20",
														"type": ""
													}
												],
												"src": "11552:85:20"
											},
											{
												"body": {
													"nativeSrc": "11686:43:20",
													"nodeType": "YulBlock",
													"src": "11686:43:20",
													"statements": [
														{
															"nativeSrc": "11696:27:20",
															"nodeType": "YulAssignment",
															"src": "11696:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11711:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11711:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11718:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11718:4:20",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11707:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:20"
																},
																"nativeSrc": "11707:16:20",
																"nodeType": "YulFunctionCall",
																"src": "11707:16:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11696:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "11696:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "11643:86:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11668:5:20",
														"nodeType": "YulTypedName",
														"src": "11668:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11678:7:20",
														"nodeType": "YulTypedName",
														"src": "11678:7:20",
														"type": ""
													}
												],
												"src": "11643:86:20"
											},
											{
												"body": {
													"nativeSrc": "11767:28:20",
													"nodeType": "YulBlock",
													"src": "11767:28:20",
													"statements": [
														{
															"nativeSrc": "11777:12:20",
															"nodeType": "YulAssignment",
															"src": "11777:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "11784:5:20",
																"nodeType": "YulIdentifier",
																"src": "11784:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11777:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11777:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11735:60:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11753:5:20",
														"nodeType": "YulTypedName",
														"src": "11753:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11763:3:20",
														"nodeType": "YulTypedName",
														"src": "11763:3:20",
														"type": ""
													}
												],
												"src": "11735:60:20"
											},
											{
												"body": {
													"nativeSrc": "11867:88:20",
													"nodeType": "YulBlock",
													"src": "11867:88:20",
													"statements": [
														{
															"nativeSrc": "11877:72:20",
															"nodeType": "YulAssignment",
															"src": "11877:72:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11941:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "11941:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "11915:25:20",
																					"nodeType": "YulIdentifier",
																					"src": "11915:25:20"
																				},
																				"nativeSrc": "11915:32:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11915:32:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11906:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "11906:8:20"
																		},
																		"nativeSrc": "11906:42:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11906:42:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "11890:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "11890:15:20"
																},
																"nativeSrc": "11890:59:20",
																"nodeType": "YulFunctionCall",
																"src": "11890:59:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11877:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "11877:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nativeSrc": "11801:154:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11847:5:20",
														"nodeType": "YulTypedName",
														"src": "11847:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11857:9:20",
														"nodeType": "YulTypedName",
														"src": "11857:9:20",
														"type": ""
													}
												],
												"src": "11801:154:20"
											},
											{
												"body": {
													"nativeSrc": "12032:72:20",
													"nodeType": "YulBlock",
													"src": "12032:72:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12049:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "12049:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12091:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "12091:5:20"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nativeSrc": "12054:36:20",
																			"nodeType": "YulIdentifier",
																			"src": "12054:36:20"
																		},
																		"nativeSrc": "12054:43:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12054:43:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12042:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:20"
																},
																"nativeSrc": "12042:56:20",
																"nodeType": "YulFunctionCall",
																"src": "12042:56:20"
															},
															"nativeSrc": "12042:56:20",
															"nodeType": "YulExpressionStatement",
															"src": "12042:56:20"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nativeSrc": "11961:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12020:5:20",
														"nodeType": "YulTypedName",
														"src": "12020:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12027:3:20",
														"nodeType": "YulTypedName",
														"src": "12027:3:20",
														"type": ""
													}
												],
												"src": "11961:143:20"
											},
											{
												"body": {
													"nativeSrc": "12214:130:20",
													"nodeType": "YulBlock",
													"src": "12214:130:20",
													"statements": [
														{
															"nativeSrc": "12224:26:20",
															"nodeType": "YulAssignment",
															"src": "12224:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12236:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12236:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12247:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12247:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12232:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12232:3:20"
																},
																"nativeSrc": "12232:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12232:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12224:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12224:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12310:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12310:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12323:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12323:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12334:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12334:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12319:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12319:3:20"
																		},
																		"nativeSrc": "12319:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12319:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "12260:49:20",
																	"nodeType": "YulIdentifier",
																	"src": "12260:49:20"
																},
																"nativeSrc": "12260:77:20",
																"nodeType": "YulFunctionCall",
																"src": "12260:77:20"
															},
															"nativeSrc": "12260:77:20",
															"nodeType": "YulExpressionStatement",
															"src": "12260:77:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "12110:234:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12186:9:20",
														"nodeType": "YulTypedName",
														"src": "12186:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12198:6:20",
														"nodeType": "YulTypedName",
														"src": "12198:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12209:4:20",
														"nodeType": "YulTypedName",
														"src": "12209:4:20",
														"type": ""
													}
												],
												"src": "12110:234:20"
											},
											{
												"body": {
													"nativeSrc": "12415:53:20",
													"nodeType": "YulBlock",
													"src": "12415:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12432:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "12432:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12455:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "12455:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12437:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "12437:17:20"
																		},
																		"nativeSrc": "12437:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12437:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12425:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12425:6:20"
																},
																"nativeSrc": "12425:37:20",
																"nodeType": "YulFunctionCall",
																"src": "12425:37:20"
															},
															"nativeSrc": "12425:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "12425:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12350:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12403:5:20",
														"nodeType": "YulTypedName",
														"src": "12403:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12410:3:20",
														"nodeType": "YulTypedName",
														"src": "12410:3:20",
														"type": ""
													}
												],
												"src": "12350:118:20"
											},
											{
												"body": {
													"nativeSrc": "12572:124:20",
													"nodeType": "YulBlock",
													"src": "12572:124:20",
													"statements": [
														{
															"nativeSrc": "12582:26:20",
															"nodeType": "YulAssignment",
															"src": "12582:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12594:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12594:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12605:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12605:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12590:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12590:3:20"
																},
																"nativeSrc": "12590:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12590:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12582:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12582:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12662:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12662:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12675:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12675:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12686:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12686:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12671:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12671:3:20"
																		},
																		"nativeSrc": "12671:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12671:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12618:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12618:43:20"
																},
																"nativeSrc": "12618:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12618:71:20"
															},
															"nativeSrc": "12618:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12618:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12474:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12544:9:20",
														"nodeType": "YulTypedName",
														"src": "12544:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12556:6:20",
														"nodeType": "YulTypedName",
														"src": "12556:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12567:4:20",
														"nodeType": "YulTypedName",
														"src": "12567:4:20",
														"type": ""
													}
												],
												"src": "12474:222:20"
											},
											{
												"body": {
													"nativeSrc": "12747:32:20",
													"nodeType": "YulBlock",
													"src": "12747:32:20",
													"statements": [
														{
															"nativeSrc": "12757:16:20",
															"nodeType": "YulAssignment",
															"src": "12757:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "12768:5:20",
																"nodeType": "YulIdentifier",
																"src": "12768:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12757:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "12757:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "12702:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12729:5:20",
														"nodeType": "YulTypedName",
														"src": "12729:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12739:7:20",
														"nodeType": "YulTypedName",
														"src": "12739:7:20",
														"type": ""
													}
												],
												"src": "12702:77:20"
											},
											{
												"body": {
													"nativeSrc": "12828:79:20",
													"nodeType": "YulBlock",
													"src": "12828:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "12885:16:20",
																"nodeType": "YulBlock",
																"src": "12885:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12894:1:20",
																					"nodeType": "YulLiteral",
																					"src": "12894:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12897:1:20",
																					"nodeType": "YulLiteral",
																					"src": "12897:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12887:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12887:6:20"
																			},
																			"nativeSrc": "12887:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12887:12:20"
																		},
																		"nativeSrc": "12887:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12887:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12851:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "12851:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12876:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "12876:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "12858:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "12858:17:20"
																				},
																				"nativeSrc": "12858:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12858:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12848:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "12848:2:20"
																		},
																		"nativeSrc": "12848:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12848:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12841:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12841:6:20"
																},
																"nativeSrc": "12841:43:20",
																"nodeType": "YulFunctionCall",
																"src": "12841:43:20"
															},
															"nativeSrc": "12838:63:20",
															"nodeType": "YulIf",
															"src": "12838:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "12785:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12821:5:20",
														"nodeType": "YulTypedName",
														"src": "12821:5:20",
														"type": ""
													}
												],
												"src": "12785:122:20"
											},
											{
												"body": {
													"nativeSrc": "12976:80:20",
													"nodeType": "YulBlock",
													"src": "12976:80:20",
													"statements": [
														{
															"nativeSrc": "12986:22:20",
															"nodeType": "YulAssignment",
															"src": "12986:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13001:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13001:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12995:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "12995:5:20"
																},
																"nativeSrc": "12995:13:20",
																"nodeType": "YulFunctionCall",
																"src": "12995:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12986:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "12986:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13044:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "13044:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13017:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "13017:26:20"
																},
																"nativeSrc": "13017:33:20",
																"nodeType": "YulFunctionCall",
																"src": "13017:33:20"
															},
															"nativeSrc": "13017:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "13017:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12913:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12954:6:20",
														"nodeType": "YulTypedName",
														"src": "12954:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12962:3:20",
														"nodeType": "YulTypedName",
														"src": "12962:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12970:5:20",
														"nodeType": "YulTypedName",
														"src": "12970:5:20",
														"type": ""
													}
												],
												"src": "12913:143:20"
											},
											{
												"body": {
													"nativeSrc": "13139:274:20",
													"nodeType": "YulBlock",
													"src": "13139:274:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "13185:83:20",
																"nodeType": "YulBlock",
																"src": "13185:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13187:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "13187:77:20"
																			},
																			"nativeSrc": "13187:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "13187:79:20"
																		},
																		"nativeSrc": "13187:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "13187:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13160:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "13160:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13169:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13169:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13156:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13156:3:20"
																		},
																		"nativeSrc": "13156:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13156:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13181:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13181:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13152:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13152:3:20"
																},
																"nativeSrc": "13152:32:20",
																"nodeType": "YulFunctionCall",
																"src": "13152:32:20"
															},
															"nativeSrc": "13149:119:20",
															"nodeType": "YulIf",
															"src": "13149:119:20"
														},
														{
															"nativeSrc": "13278:128:20",
															"nodeType": "YulBlock",
															"src": "13278:128:20",
															"statements": [
																{
																	"nativeSrc": "13293:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13293:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13307:1:20",
																		"nodeType": "YulLiteral",
																		"src": "13307:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13297:6:20",
																			"nodeType": "YulTypedName",
																			"src": "13297:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13322:74:20",
																	"nodeType": "YulAssignment",
																	"src": "13322:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13368:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "13368:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13379:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "13379:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13364:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "13364:3:20"
																				},
																				"nativeSrc": "13364:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "13364:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13388:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "13388:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13332:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "13332:31:20"
																		},
																		"nativeSrc": "13332:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13332:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13322:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "13322:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13062:351:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13109:9:20",
														"nodeType": "YulTypedName",
														"src": "13109:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13120:7:20",
														"nodeType": "YulTypedName",
														"src": "13120:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13132:6:20",
														"nodeType": "YulTypedName",
														"src": "13132:6:20",
														"type": ""
													}
												],
												"src": "13062:351:20"
											},
											{
												"body": {
													"nativeSrc": "13484:53:20",
													"nodeType": "YulBlock",
													"src": "13484:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13501:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "13501:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13524:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "13524:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13506:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "13506:17:20"
																		},
																		"nativeSrc": "13506:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13506:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13494:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:20"
																},
																"nativeSrc": "13494:37:20",
																"nodeType": "YulFunctionCall",
																"src": "13494:37:20"
															},
															"nativeSrc": "13494:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "13494:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13419:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13472:5:20",
														"nodeType": "YulTypedName",
														"src": "13472:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13479:3:20",
														"nodeType": "YulTypedName",
														"src": "13479:3:20",
														"type": ""
													}
												],
												"src": "13419:118:20"
											},
											{
												"body": {
													"nativeSrc": "13669:206:20",
													"nodeType": "YulBlock",
													"src": "13669:206:20",
													"statements": [
														{
															"nativeSrc": "13679:26:20",
															"nodeType": "YulAssignment",
															"src": "13679:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13691:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "13691:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13702:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13702:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13687:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13687:3:20"
																},
																"nativeSrc": "13687:18:20",
																"nodeType": "YulFunctionCall",
																"src": "13687:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13679:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13679:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13759:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13759:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13772:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13772:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13783:1:20",
																				"nodeType": "YulLiteral",
																				"src": "13783:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13768:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13768:3:20"
																		},
																		"nativeSrc": "13768:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13768:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13715:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13715:43:20"
																},
																"nativeSrc": "13715:71:20",
																"nodeType": "YulFunctionCall",
																"src": "13715:71:20"
															},
															"nativeSrc": "13715:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "13715:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13840:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13840:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13853:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13853:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13864:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13864:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13849:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13849:3:20"
																		},
																		"nativeSrc": "13849:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13849:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13796:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13796:43:20"
																},
																"nativeSrc": "13796:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13796:72:20"
															},
															"nativeSrc": "13796:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13796:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13543:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13633:9:20",
														"nodeType": "YulTypedName",
														"src": "13633:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13645:6:20",
														"nodeType": "YulTypedName",
														"src": "13645:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13653:6:20",
														"nodeType": "YulTypedName",
														"src": "13653:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13664:4:20",
														"nodeType": "YulTypedName",
														"src": "13664:4:20",
														"type": ""
													}
												],
												"src": "13543:332:20"
											},
											{
												"body": {
													"nativeSrc": "13921:76:20",
													"nodeType": "YulBlock",
													"src": "13921:76:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "13975:16:20",
																"nodeType": "YulBlock",
																"src": "13975:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13984:1:20",
																					"nodeType": "YulLiteral",
																					"src": "13984:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13987:1:20",
																					"nodeType": "YulLiteral",
																					"src": "13987:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13977:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "13977:6:20"
																			},
																			"nativeSrc": "13977:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "13977:12:20"
																		},
																		"nativeSrc": "13977:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "13977:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13944:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "13944:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13966:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "13966:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13951:14:20",
																					"nodeType": "YulIdentifier",
																					"src": "13951:14:20"
																				},
																				"nativeSrc": "13951:21:20",
																				"nodeType": "YulFunctionCall",
																				"src": "13951:21:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13941:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "13941:2:20"
																		},
																		"nativeSrc": "13941:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13941:32:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13934:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13934:6:20"
																},
																"nativeSrc": "13934:40:20",
																"nodeType": "YulFunctionCall",
																"src": "13934:40:20"
															},
															"nativeSrc": "13931:60:20",
															"nodeType": "YulIf",
															"src": "13931:60:20"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13881:116:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13914:5:20",
														"nodeType": "YulTypedName",
														"src": "13914:5:20",
														"type": ""
													}
												],
												"src": "13881:116:20"
											},
											{
												"body": {
													"nativeSrc": "14063:77:20",
													"nodeType": "YulBlock",
													"src": "14063:77:20",
													"statements": [
														{
															"nativeSrc": "14073:22:20",
															"nodeType": "YulAssignment",
															"src": "14073:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14088:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14088:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14082:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "14082:5:20"
																},
																"nativeSrc": "14082:13:20",
																"nodeType": "YulFunctionCall",
																"src": "14082:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14073:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "14073:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14128:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "14128:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14104:23:20",
																	"nodeType": "YulIdentifier",
																	"src": "14104:23:20"
																},
																"nativeSrc": "14104:30:20",
																"nodeType": "YulFunctionCall",
																"src": "14104:30:20"
															},
															"nativeSrc": "14104:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "14104:30:20"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14003:137:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14041:6:20",
														"nodeType": "YulTypedName",
														"src": "14041:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14049:3:20",
														"nodeType": "YulTypedName",
														"src": "14049:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14057:5:20",
														"nodeType": "YulTypedName",
														"src": "14057:5:20",
														"type": ""
													}
												],
												"src": "14003:137:20"
											},
											{
												"body": {
													"nativeSrc": "14220:271:20",
													"nodeType": "YulBlock",
													"src": "14220:271:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "14266:83:20",
																"nodeType": "YulBlock",
																"src": "14266:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14268:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "14268:77:20"
																			},
																			"nativeSrc": "14268:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "14268:79:20"
																		},
																		"nativeSrc": "14268:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "14268:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14241:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "14241:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14250:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14250:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14237:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14237:3:20"
																		},
																		"nativeSrc": "14237:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14237:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14262:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14262:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14233:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14233:3:20"
																},
																"nativeSrc": "14233:32:20",
																"nodeType": "YulFunctionCall",
																"src": "14233:32:20"
															},
															"nativeSrc": "14230:119:20",
															"nodeType": "YulIf",
															"src": "14230:119:20"
														},
														{
															"nativeSrc": "14359:125:20",
															"nodeType": "YulBlock",
															"src": "14359:125:20",
															"statements": [
																{
																	"nativeSrc": "14374:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14374:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14388:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14388:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14378:6:20",
																			"nodeType": "YulTypedName",
																			"src": "14378:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14403:71:20",
																	"nodeType": "YulAssignment",
																	"src": "14403:71:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14446:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "14446:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14457:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "14457:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14442:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "14442:3:20"
																				},
																				"nativeSrc": "14442:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "14442:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14466:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "14466:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14413:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "14413:28:20"
																		},
																		"nativeSrc": "14413:61:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14413:61:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14403:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "14403:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14146:345:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14190:9:20",
														"nodeType": "YulTypedName",
														"src": "14190:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14201:7:20",
														"nodeType": "YulTypedName",
														"src": "14201:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14213:6:20",
														"nodeType": "YulTypedName",
														"src": "14213:6:20",
														"type": ""
													}
												],
												"src": "14146:345:20"
											},
											{
												"body": {
													"nativeSrc": "14603:137:20",
													"nodeType": "YulBlock",
													"src": "14603:137:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14625:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14625:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14633:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14633:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14621:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14621:3:20"
																		},
																		"nativeSrc": "14621:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14621:14:20"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nativeSrc": "14637:34:20",
																		"nodeType": "YulLiteral",
																		"src": "14637:34:20",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14614:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14614:6:20"
																},
																"nativeSrc": "14614:58:20",
																"nodeType": "YulFunctionCall",
																"src": "14614:58:20"
															},
															"nativeSrc": "14614:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "14614:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14693:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14693:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14701:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14701:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14689:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14689:3:20"
																		},
																		"nativeSrc": "14689:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14689:15:20"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "14706:26:20",
																		"nodeType": "YulLiteral",
																		"src": "14706:26:20",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14682:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14682:6:20"
																},
																"nativeSrc": "14682:51:20",
																"nodeType": "YulFunctionCall",
																"src": "14682:51:20"
															},
															"nativeSrc": "14682:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "14682:51:20"
														}
													]
												},
												"name": "store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
												"nativeSrc": "14497:243:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14595:6:20",
														"nodeType": "YulTypedName",
														"src": "14595:6:20",
														"type": ""
													}
												],
												"src": "14497:243:20"
											},
											{
												"body": {
													"nativeSrc": "14892:220:20",
													"nodeType": "YulBlock",
													"src": "14892:220:20",
													"statements": [
														{
															"nativeSrc": "14902:74:20",
															"nodeType": "YulAssignment",
															"src": "14902:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14968:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "14968:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14973:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14973:2:20",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14909:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "14909:58:20"
																},
																"nativeSrc": "14909:67:20",
																"nodeType": "YulFunctionCall",
																"src": "14909:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14902:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14902:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15074:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "15074:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																	"nativeSrc": "14985:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "14985:88:20"
																},
																"nativeSrc": "14985:93:20",
																"nodeType": "YulFunctionCall",
																"src": "14985:93:20"
															},
															"nativeSrc": "14985:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "14985:93:20"
														},
														{
															"nativeSrc": "15087:19:20",
															"nodeType": "YulAssignment",
															"src": "15087:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15098:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "15098:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15103:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15103:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15094:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15094:3:20"
																},
																"nativeSrc": "15094:12:20",
																"nodeType": "YulFunctionCall",
																"src": "15094:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15087:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15087:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14746:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14880:3:20",
														"nodeType": "YulTypedName",
														"src": "14880:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14888:3:20",
														"nodeType": "YulTypedName",
														"src": "14888:3:20",
														"type": ""
													}
												],
												"src": "14746:366:20"
											},
											{
												"body": {
													"nativeSrc": "15289:248:20",
													"nodeType": "YulBlock",
													"src": "15289:248:20",
													"statements": [
														{
															"nativeSrc": "15299:26:20",
															"nodeType": "YulAssignment",
															"src": "15299:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15311:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "15311:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15322:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15322:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15307:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15307:3:20"
																},
																"nativeSrc": "15307:18:20",
																"nodeType": "YulFunctionCall",
																"src": "15307:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15299:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15299:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15346:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15346:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15357:1:20",
																				"nodeType": "YulLiteral",
																				"src": "15357:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15342:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15342:3:20"
																		},
																		"nativeSrc": "15342:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15342:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15365:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "15365:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15371:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15371:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15361:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15361:3:20"
																		},
																		"nativeSrc": "15361:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15361:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15335:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "15335:6:20"
																},
																"nativeSrc": "15335:47:20",
																"nodeType": "YulFunctionCall",
																"src": "15335:47:20"
															},
															"nativeSrc": "15335:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "15335:47:20"
														},
														{
															"nativeSrc": "15391:139:20",
															"nodeType": "YulAssignment",
															"src": "15391:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15525:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "15525:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15399:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "15399:124:20"
																},
																"nativeSrc": "15399:131:20",
																"nodeType": "YulFunctionCall",
																"src": "15399:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15391:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15391:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15118:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15269:9:20",
														"nodeType": "YulTypedName",
														"src": "15269:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15284:4:20",
														"nodeType": "YulTypedName",
														"src": "15284:4:20",
														"type": ""
													}
												],
												"src": "15118:419:20"
											},
											{
												"body": {
													"nativeSrc": "15606:80:20",
													"nodeType": "YulBlock",
													"src": "15606:80:20",
													"statements": [
														{
															"nativeSrc": "15616:22:20",
															"nodeType": "YulAssignment",
															"src": "15616:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15631:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15631:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15625:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "15625:5:20"
																},
																"nativeSrc": "15625:13:20",
																"nodeType": "YulFunctionCall",
																"src": "15625:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15616:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "15616:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15674:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "15674:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "15647:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "15647:26:20"
																},
																"nativeSrc": "15647:33:20",
																"nodeType": "YulFunctionCall",
																"src": "15647:33:20"
															},
															"nativeSrc": "15647:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "15647:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "15543:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15584:6:20",
														"nodeType": "YulTypedName",
														"src": "15584:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15592:3:20",
														"nodeType": "YulTypedName",
														"src": "15592:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15600:5:20",
														"nodeType": "YulTypedName",
														"src": "15600:5:20",
														"type": ""
													}
												],
												"src": "15543:143:20"
											},
											{
												"body": {
													"nativeSrc": "15769:274:20",
													"nodeType": "YulBlock",
													"src": "15769:274:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "15815:83:20",
																"nodeType": "YulBlock",
																"src": "15815:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15817:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "15817:77:20"
																			},
																			"nativeSrc": "15817:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "15817:79:20"
																		},
																		"nativeSrc": "15817:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "15817:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15790:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "15790:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15799:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15799:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15786:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15786:3:20"
																		},
																		"nativeSrc": "15786:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15786:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15811:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15811:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15782:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15782:3:20"
																},
																"nativeSrc": "15782:32:20",
																"nodeType": "YulFunctionCall",
																"src": "15782:32:20"
															},
															"nativeSrc": "15779:119:20",
															"nodeType": "YulIf",
															"src": "15779:119:20"
														},
														{
															"nativeSrc": "15908:128:20",
															"nodeType": "YulBlock",
															"src": "15908:128:20",
															"statements": [
																{
																	"nativeSrc": "15923:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15923:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15937:1:20",
																		"nodeType": "YulLiteral",
																		"src": "15937:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15927:6:20",
																			"nodeType": "YulTypedName",
																			"src": "15927:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15952:74:20",
																	"nodeType": "YulAssignment",
																	"src": "15952:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15998:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "15998:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16009:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "16009:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15994:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "15994:3:20"
																				},
																				"nativeSrc": "15994:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "15994:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16018:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "16018:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "15962:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "15962:31:20"
																		},
																		"nativeSrc": "15962:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15962:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15952:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "15952:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "15692:351:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15739:9:20",
														"nodeType": "YulTypedName",
														"src": "15739:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15750:7:20",
														"nodeType": "YulTypedName",
														"src": "15750:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15762:6:20",
														"nodeType": "YulTypedName",
														"src": "15762:6:20",
														"type": ""
													}
												],
												"src": "15692:351:20"
											},
											{
												"body": {
													"nativeSrc": "16155:127:20",
													"nodeType": "YulBlock",
													"src": "16155:127:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16177:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "16177:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16185:1:20",
																				"nodeType": "YulLiteral",
																				"src": "16185:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16173:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16173:3:20"
																		},
																		"nativeSrc": "16173:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16173:14:20"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nativeSrc": "16189:34:20",
																		"nodeType": "YulLiteral",
																		"src": "16189:34:20",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16166:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16166:6:20"
																},
																"nativeSrc": "16166:58:20",
																"nodeType": "YulFunctionCall",
																"src": "16166:58:20"
															},
															"nativeSrc": "16166:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "16166:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16245:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "16245:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16253:2:20",
																				"nodeType": "YulLiteral",
																				"src": "16253:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16241:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16241:3:20"
																		},
																		"nativeSrc": "16241:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16241:15:20"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nativeSrc": "16258:16:20",
																		"nodeType": "YulLiteral",
																		"src": "16258:16:20",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16234:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16234:6:20"
																},
																"nativeSrc": "16234:41:20",
																"nodeType": "YulFunctionCall",
																"src": "16234:41:20"
															},
															"nativeSrc": "16234:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "16234:41:20"
														}
													]
												},
												"name": "store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
												"nativeSrc": "16049:233:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16147:6:20",
														"nodeType": "YulTypedName",
														"src": "16147:6:20",
														"type": ""
													}
												],
												"src": "16049:233:20"
											},
											{
												"body": {
													"nativeSrc": "16434:220:20",
													"nodeType": "YulBlock",
													"src": "16434:220:20",
													"statements": [
														{
															"nativeSrc": "16444:74:20",
															"nodeType": "YulAssignment",
															"src": "16444:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16510:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16510:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16515:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16515:2:20",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16451:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "16451:58:20"
																},
																"nativeSrc": "16451:67:20",
																"nodeType": "YulFunctionCall",
																"src": "16451:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16444:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16444:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16616:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16616:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																	"nativeSrc": "16527:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "16527:88:20"
																},
																"nativeSrc": "16527:93:20",
																"nodeType": "YulFunctionCall",
																"src": "16527:93:20"
															},
															"nativeSrc": "16527:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "16527:93:20"
														},
														{
															"nativeSrc": "16629:19:20",
															"nodeType": "YulAssignment",
															"src": "16629:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16640:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16640:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16645:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16645:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16636:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16636:3:20"
																},
																"nativeSrc": "16636:12:20",
																"nodeType": "YulFunctionCall",
																"src": "16636:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16629:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16629:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16288:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16422:3:20",
														"nodeType": "YulTypedName",
														"src": "16422:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16430:3:20",
														"nodeType": "YulTypedName",
														"src": "16430:3:20",
														"type": ""
													}
												],
												"src": "16288:366:20"
											},
											{
												"body": {
													"nativeSrc": "16831:248:20",
													"nodeType": "YulBlock",
													"src": "16831:248:20",
													"statements": [
														{
															"nativeSrc": "16841:26:20",
															"nodeType": "YulAssignment",
															"src": "16841:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16853:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "16853:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16864:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16864:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16849:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16849:3:20"
																},
																"nativeSrc": "16849:18:20",
																"nodeType": "YulFunctionCall",
																"src": "16849:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16841:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "16841:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16888:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "16888:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16899:1:20",
																				"nodeType": "YulLiteral",
																				"src": "16899:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16884:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16884:3:20"
																		},
																		"nativeSrc": "16884:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16884:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16907:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "16907:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16913:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "16913:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16903:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16903:3:20"
																		},
																		"nativeSrc": "16903:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16903:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16877:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16877:6:20"
																},
																"nativeSrc": "16877:47:20",
																"nodeType": "YulFunctionCall",
																"src": "16877:47:20"
															},
															"nativeSrc": "16877:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "16877:47:20"
														},
														{
															"nativeSrc": "16933:139:20",
															"nodeType": "YulAssignment",
															"src": "16933:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17067:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "17067:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16941:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "16941:124:20"
																},
																"nativeSrc": "16941:131:20",
																"nodeType": "YulFunctionCall",
																"src": "16941:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16933:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "16933:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16660:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16811:9:20",
														"nodeType": "YulTypedName",
														"src": "16811:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16826:4:20",
														"nodeType": "YulTypedName",
														"src": "16826:4:20",
														"type": ""
													}
												],
												"src": "16660:419:20"
											},
											{
												"body": {
													"nativeSrc": "17191:122:20",
													"nodeType": "YulBlock",
													"src": "17191:122:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17213:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "17213:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17221:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17221:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17209:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17209:3:20"
																		},
																		"nativeSrc": "17209:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17209:14:20"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nativeSrc": "17225:34:20",
																		"nodeType": "YulLiteral",
																		"src": "17225:34:20",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17202:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17202:6:20"
																},
																"nativeSrc": "17202:58:20",
																"nodeType": "YulFunctionCall",
																"src": "17202:58:20"
															},
															"nativeSrc": "17202:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "17202:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17281:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "17281:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17289:2:20",
																				"nodeType": "YulLiteral",
																				"src": "17289:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17277:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17277:3:20"
																		},
																		"nativeSrc": "17277:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17277:15:20"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nativeSrc": "17294:11:20",
																		"nodeType": "YulLiteral",
																		"src": "17294:11:20",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17270:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17270:6:20"
																},
																"nativeSrc": "17270:36:20",
																"nodeType": "YulFunctionCall",
																"src": "17270:36:20"
															},
															"nativeSrc": "17270:36:20",
															"nodeType": "YulExpressionStatement",
															"src": "17270:36:20"
														}
													]
												},
												"name": "store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
												"nativeSrc": "17085:228:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17183:6:20",
														"nodeType": "YulTypedName",
														"src": "17183:6:20",
														"type": ""
													}
												],
												"src": "17085:228:20"
											},
											{
												"body": {
													"nativeSrc": "17465:220:20",
													"nodeType": "YulBlock",
													"src": "17465:220:20",
													"statements": [
														{
															"nativeSrc": "17475:74:20",
															"nodeType": "YulAssignment",
															"src": "17475:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17541:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17541:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17546:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17546:2:20",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17482:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "17482:58:20"
																},
																"nativeSrc": "17482:67:20",
																"nodeType": "YulFunctionCall",
																"src": "17482:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17475:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17475:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17647:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17647:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																	"nativeSrc": "17558:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "17558:88:20"
																},
																"nativeSrc": "17558:93:20",
																"nodeType": "YulFunctionCall",
																"src": "17558:93:20"
															},
															"nativeSrc": "17558:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "17558:93:20"
														},
														{
															"nativeSrc": "17660:19:20",
															"nodeType": "YulAssignment",
															"src": "17660:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17671:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17671:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17676:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17676:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17667:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17667:3:20"
																},
																"nativeSrc": "17667:12:20",
																"nodeType": "YulFunctionCall",
																"src": "17667:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17660:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17660:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17319:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17453:3:20",
														"nodeType": "YulTypedName",
														"src": "17453:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17461:3:20",
														"nodeType": "YulTypedName",
														"src": "17461:3:20",
														"type": ""
													}
												],
												"src": "17319:366:20"
											},
											{
												"body": {
													"nativeSrc": "17862:248:20",
													"nodeType": "YulBlock",
													"src": "17862:248:20",
													"statements": [
														{
															"nativeSrc": "17872:26:20",
															"nodeType": "YulAssignment",
															"src": "17872:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17884:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "17884:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17895:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17895:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17880:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17880:3:20"
																},
																"nativeSrc": "17880:18:20",
																"nodeType": "YulFunctionCall",
																"src": "17880:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17872:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17872:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17919:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17919:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17930:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17930:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17915:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17915:3:20"
																		},
																		"nativeSrc": "17915:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17915:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17938:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "17938:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17944:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17944:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17934:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17934:3:20"
																		},
																		"nativeSrc": "17934:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17934:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17908:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17908:6:20"
																},
																"nativeSrc": "17908:47:20",
																"nodeType": "YulFunctionCall",
																"src": "17908:47:20"
															},
															"nativeSrc": "17908:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "17908:47:20"
														},
														{
															"nativeSrc": "17964:139:20",
															"nodeType": "YulAssignment",
															"src": "17964:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18098:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "18098:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17972:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "17972:124:20"
																},
																"nativeSrc": "17972:131:20",
																"nodeType": "YulFunctionCall",
																"src": "17972:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17964:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17964:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17691:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17842:9:20",
														"nodeType": "YulTypedName",
														"src": "17842:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17857:4:20",
														"nodeType": "YulTypedName",
														"src": "17857:4:20",
														"type": ""
													}
												],
												"src": "17691:419:20"
											},
											{
												"body": {
													"nativeSrc": "18230:34:20",
													"nodeType": "YulBlock",
													"src": "18230:34:20",
													"statements": [
														{
															"nativeSrc": "18240:18:20",
															"nodeType": "YulAssignment",
															"src": "18240:18:20",
															"value": {
																"name": "pos",
																"nativeSrc": "18255:3:20",
																"nodeType": "YulIdentifier",
																"src": "18255:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18240:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "18240:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18116:148:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18202:3:20",
														"nodeType": "YulTypedName",
														"src": "18202:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18207:6:20",
														"nodeType": "YulTypedName",
														"src": "18207:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18218:11:20",
														"nodeType": "YulTypedName",
														"src": "18218:11:20",
														"type": ""
													}
												],
												"src": "18116:148:20"
											},
											{
												"body": {
													"nativeSrc": "18376:67:20",
													"nodeType": "YulBlock",
													"src": "18376:67:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18398:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "18398:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18406:1:20",
																				"nodeType": "YulLiteral",
																				"src": "18406:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18394:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18394:3:20"
																		},
																		"nativeSrc": "18394:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18394:14:20"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "18410:25:20",
																		"nodeType": "YulLiteral",
																		"src": "18410:25:20",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18387:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18387:6:20"
																},
																"nativeSrc": "18387:49:20",
																"nodeType": "YulFunctionCall",
																"src": "18387:49:20"
															},
															"nativeSrc": "18387:49:20",
															"nodeType": "YulExpressionStatement",
															"src": "18387:49:20"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nativeSrc": "18270:173:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18368:6:20",
														"nodeType": "YulTypedName",
														"src": "18368:6:20",
														"type": ""
													}
												],
												"src": "18270:173:20"
											},
											{
												"body": {
													"nativeSrc": "18613:238:20",
													"nodeType": "YulBlock",
													"src": "18613:238:20",
													"statements": [
														{
															"nativeSrc": "18623:92:20",
															"nodeType": "YulAssignment",
															"src": "18623:92:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18707:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "18707:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18712:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18712:2:20",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18630:76:20",
																	"nodeType": "YulIdentifier",
																	"src": "18630:76:20"
																},
																"nativeSrc": "18630:85:20",
																"nodeType": "YulFunctionCall",
																"src": "18630:85:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18623:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18623:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18813:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "18813:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nativeSrc": "18724:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "18724:88:20"
																},
																"nativeSrc": "18724:93:20",
																"nodeType": "YulFunctionCall",
																"src": "18724:93:20"
															},
															"nativeSrc": "18724:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "18724:93:20"
														},
														{
															"nativeSrc": "18826:19:20",
															"nodeType": "YulAssignment",
															"src": "18826:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18837:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "18837:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18842:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18842:2:20",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18833:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18833:3:20"
																},
																"nativeSrc": "18833:12:20",
																"nodeType": "YulFunctionCall",
																"src": "18833:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18826:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18826:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18449:402:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18601:3:20",
														"nodeType": "YulTypedName",
														"src": "18601:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18609:3:20",
														"nodeType": "YulTypedName",
														"src": "18609:3:20",
														"type": ""
													}
												],
												"src": "18449:402:20"
											},
											{
												"body": {
													"nativeSrc": "18916:40:20",
													"nodeType": "YulBlock",
													"src": "18916:40:20",
													"statements": [
														{
															"nativeSrc": "18927:22:20",
															"nodeType": "YulAssignment",
															"src": "18927:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18943:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "18943:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18937:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "18937:5:20"
																},
																"nativeSrc": "18937:12:20",
																"nodeType": "YulFunctionCall",
																"src": "18937:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18927:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "18927:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "18857:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18899:5:20",
														"nodeType": "YulTypedName",
														"src": "18899:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18909:6:20",
														"nodeType": "YulTypedName",
														"src": "18909:6:20",
														"type": ""
													}
												],
												"src": "18857:99:20"
											},
											{
												"body": {
													"nativeSrc": "19024:77:20",
													"nodeType": "YulBlock",
													"src": "19024:77:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "19041:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19041:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "19046:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19046:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19051:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19051:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "19035:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "19035:5:20"
																},
																"nativeSrc": "19035:23:20",
																"nodeType": "YulFunctionCall",
																"src": "19035:23:20"
															},
															"nativeSrc": "19035:23:20",
															"nodeType": "YulExpressionStatement",
															"src": "19035:23:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "19078:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "19078:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "19083:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "19083:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19074:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19074:3:20"
																		},
																		"nativeSrc": "19074:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19074:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19092:1:20",
																		"nodeType": "YulLiteral",
																		"src": "19092:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19067:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "19067:6:20"
																},
																"nativeSrc": "19067:27:20",
																"nodeType": "YulFunctionCall",
																"src": "19067:27:20"
															},
															"nativeSrc": "19067:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "19067:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "18962:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "19006:3:20",
														"nodeType": "YulTypedName",
														"src": "19006:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "19011:3:20",
														"nodeType": "YulTypedName",
														"src": "19011:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19016:6:20",
														"nodeType": "YulTypedName",
														"src": "19016:6:20",
														"type": ""
													}
												],
												"src": "18962:139:20"
											},
											{
												"body": {
													"nativeSrc": "19217:280:20",
													"nodeType": "YulBlock",
													"src": "19217:280:20",
													"statements": [
														{
															"nativeSrc": "19227:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "19227:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19274:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "19274:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19241:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "19241:32:20"
																},
																"nativeSrc": "19241:39:20",
																"nodeType": "YulFunctionCall",
																"src": "19241:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19231:6:20",
																	"nodeType": "YulTypedName",
																	"src": "19231:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19289:96:20",
															"nodeType": "YulAssignment",
															"src": "19289:96:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19373:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19373:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19378:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19378:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19296:76:20",
																	"nodeType": "YulIdentifier",
																	"src": "19296:76:20"
																},
																"nativeSrc": "19296:89:20",
																"nodeType": "YulFunctionCall",
																"src": "19296:89:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19289:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19289:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19433:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "19433:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19440:4:20",
																				"nodeType": "YulLiteral",
																				"src": "19440:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19429:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19429:3:20"
																		},
																		"nativeSrc": "19429:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19429:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19447:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19447:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19452:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19452:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19394:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "19394:34:20"
																},
																"nativeSrc": "19394:65:20",
																"nodeType": "YulFunctionCall",
																"src": "19394:65:20"
															},
															"nativeSrc": "19394:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "19394:65:20"
														},
														{
															"nativeSrc": "19468:23:20",
															"nodeType": "YulAssignment",
															"src": "19468:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19479:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19479:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19484:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19484:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19475:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19475:3:20"
																},
																"nativeSrc": "19475:16:20",
																"nodeType": "YulFunctionCall",
																"src": "19475:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19468:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19468:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19107:390:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19198:5:20",
														"nodeType": "YulTypedName",
														"src": "19198:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19205:3:20",
														"nodeType": "YulTypedName",
														"src": "19205:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19213:3:20",
														"nodeType": "YulTypedName",
														"src": "19213:3:20",
														"type": ""
													}
												],
												"src": "19107:390:20"
											},
											{
												"body": {
													"nativeSrc": "19609:61:20",
													"nodeType": "YulBlock",
													"src": "19609:61:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19631:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "19631:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19639:1:20",
																				"nodeType": "YulLiteral",
																				"src": "19639:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19627:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19627:3:20"
																		},
																		"nativeSrc": "19627:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19627:14:20"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "19643:19:20",
																		"nodeType": "YulLiteral",
																		"src": "19643:19:20",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19620:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "19620:6:20"
																},
																"nativeSrc": "19620:43:20",
																"nodeType": "YulFunctionCall",
																"src": "19620:43:20"
															},
															"nativeSrc": "19620:43:20",
															"nodeType": "YulExpressionStatement",
															"src": "19620:43:20"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nativeSrc": "19503:167:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19601:6:20",
														"nodeType": "YulTypedName",
														"src": "19601:6:20",
														"type": ""
													}
												],
												"src": "19503:167:20"
											},
											{
												"body": {
													"nativeSrc": "19840:238:20",
													"nodeType": "YulBlock",
													"src": "19840:238:20",
													"statements": [
														{
															"nativeSrc": "19850:92:20",
															"nodeType": "YulAssignment",
															"src": "19850:92:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19934:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19934:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19939:2:20",
																		"nodeType": "YulLiteral",
																		"src": "19939:2:20",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19857:76:20",
																	"nodeType": "YulIdentifier",
																	"src": "19857:76:20"
																},
																"nativeSrc": "19857:85:20",
																"nodeType": "YulFunctionCall",
																"src": "19857:85:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19850:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19850:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20040:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20040:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nativeSrc": "19951:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "19951:88:20"
																},
																"nativeSrc": "19951:93:20",
																"nodeType": "YulFunctionCall",
																"src": "19951:93:20"
															},
															"nativeSrc": "19951:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "19951:93:20"
														},
														{
															"nativeSrc": "20053:19:20",
															"nodeType": "YulAssignment",
															"src": "20053:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20064:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20064:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20069:2:20",
																		"nodeType": "YulLiteral",
																		"src": "20069:2:20",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20060:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20060:3:20"
																},
																"nativeSrc": "20060:12:20",
																"nodeType": "YulFunctionCall",
																"src": "20060:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20053:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20053:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19676:402:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19828:3:20",
														"nodeType": "YulTypedName",
														"src": "19828:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19836:3:20",
														"nodeType": "YulTypedName",
														"src": "19836:3:20",
														"type": ""
													}
												],
												"src": "19676:402:20"
											},
											{
												"body": {
													"nativeSrc": "20470:581:20",
													"nodeType": "YulBlock",
													"src": "20470:581:20",
													"statements": [
														{
															"nativeSrc": "20481:155:20",
															"nodeType": "YulAssignment",
															"src": "20481:155:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20632:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20632:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20488:142:20",
																	"nodeType": "YulIdentifier",
																	"src": "20488:142:20"
																},
																"nativeSrc": "20488:148:20",
																"nodeType": "YulFunctionCall",
																"src": "20488:148:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20481:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20481:3:20"
																}
															]
														},
														{
															"nativeSrc": "20646:102:20",
															"nodeType": "YulAssignment",
															"src": "20646:102:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20735:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20735:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20744:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20744:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20653:81:20",
																	"nodeType": "YulIdentifier",
																	"src": "20653:81:20"
																},
																"nativeSrc": "20653:95:20",
																"nodeType": "YulFunctionCall",
																"src": "20653:95:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20646:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20646:3:20"
																}
															]
														},
														{
															"nativeSrc": "20758:155:20",
															"nodeType": "YulAssignment",
															"src": "20758:155:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20909:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "20909:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20765:142:20",
																	"nodeType": "YulIdentifier",
																	"src": "20765:142:20"
																},
																"nativeSrc": "20765:148:20",
																"nodeType": "YulFunctionCall",
																"src": "20765:148:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20758:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20758:3:20"
																}
															]
														},
														{
															"nativeSrc": "20923:102:20",
															"nodeType": "YulAssignment",
															"src": "20923:102:20",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21012:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21012:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21021:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "21021:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20930:81:20",
																	"nodeType": "YulIdentifier",
																	"src": "20930:81:20"
																},
																"nativeSrc": "20930:95:20",
																"nodeType": "YulFunctionCall",
																"src": "20930:95:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20923:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20923:3:20"
																}
															]
														},
														{
															"nativeSrc": "21035:10:20",
															"nodeType": "YulAssignment",
															"src": "21035:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "21042:3:20",
																"nodeType": "YulIdentifier",
																"src": "21042:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21035:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21035:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "20084:967:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20441:3:20",
														"nodeType": "YulTypedName",
														"src": "20441:3:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20447:6:20",
														"nodeType": "YulTypedName",
														"src": "20447:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20455:6:20",
														"nodeType": "YulTypedName",
														"src": "20455:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20466:3:20",
														"nodeType": "YulTypedName",
														"src": "20466:3:20",
														"type": ""
													}
												],
												"src": "20084:967:20"
											},
											{
												"body": {
													"nativeSrc": "21149:285:20",
													"nodeType": "YulBlock",
													"src": "21149:285:20",
													"statements": [
														{
															"nativeSrc": "21159:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "21159:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21206:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "21206:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21173:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "21173:32:20"
																},
																"nativeSrc": "21173:39:20",
																"nodeType": "YulFunctionCall",
																"src": "21173:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21163:6:20",
																	"nodeType": "YulTypedName",
																	"src": "21163:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21221:78:20",
															"nodeType": "YulAssignment",
															"src": "21221:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21287:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "21287:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21292:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21292:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21228:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "21228:58:20"
																},
																"nativeSrc": "21228:71:20",
																"nodeType": "YulFunctionCall",
																"src": "21228:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21221:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21221:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21347:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "21347:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21354:4:20",
																				"nodeType": "YulLiteral",
																				"src": "21354:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21343:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21343:3:20"
																		},
																		"nativeSrc": "21343:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21343:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21361:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "21361:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21366:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21366:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21308:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "21308:34:20"
																},
																"nativeSrc": "21308:65:20",
																"nodeType": "YulFunctionCall",
																"src": "21308:65:20"
															},
															"nativeSrc": "21308:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "21308:65:20"
														},
														{
															"nativeSrc": "21382:46:20",
															"nodeType": "YulAssignment",
															"src": "21382:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21393:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "21393:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21420:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "21420:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21398:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "21398:21:20"
																		},
																		"nativeSrc": "21398:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21398:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21389:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21389:3:20"
																},
																"nativeSrc": "21389:39:20",
																"nodeType": "YulFunctionCall",
																"src": "21389:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21382:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21382:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21057:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21130:5:20",
														"nodeType": "YulTypedName",
														"src": "21130:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21137:3:20",
														"nodeType": "YulTypedName",
														"src": "21137:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21145:3:20",
														"nodeType": "YulTypedName",
														"src": "21145:3:20",
														"type": ""
													}
												],
												"src": "21057:377:20"
											},
											{
												"body": {
													"nativeSrc": "21558:195:20",
													"nodeType": "YulBlock",
													"src": "21558:195:20",
													"statements": [
														{
															"nativeSrc": "21568:26:20",
															"nodeType": "YulAssignment",
															"src": "21568:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21580:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "21580:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21591:2:20",
																		"nodeType": "YulLiteral",
																		"src": "21591:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21576:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "21576:3:20"
																},
																"nativeSrc": "21576:18:20",
																"nodeType": "YulFunctionCall",
																"src": "21576:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21568:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "21568:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21615:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "21615:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21626:1:20",
																				"nodeType": "YulLiteral",
																				"src": "21626:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21611:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21611:3:20"
																		},
																		"nativeSrc": "21611:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21611:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21634:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "21634:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21640:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "21640:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21630:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21630:3:20"
																		},
																		"nativeSrc": "21630:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21630:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21604:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21604:6:20"
																},
																"nativeSrc": "21604:47:20",
																"nodeType": "YulFunctionCall",
																"src": "21604:47:20"
															},
															"nativeSrc": "21604:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "21604:47:20"
														},
														{
															"nativeSrc": "21660:86:20",
															"nodeType": "YulAssignment",
															"src": "21660:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21732:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "21732:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21741:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "21741:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21668:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "21668:63:20"
																},
																"nativeSrc": "21668:78:20",
																"nodeType": "YulFunctionCall",
																"src": "21668:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21660:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "21660:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21440:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21530:9:20",
														"nodeType": "YulTypedName",
														"src": "21530:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21542:6:20",
														"nodeType": "YulTypedName",
														"src": "21542:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21553:4:20",
														"nodeType": "YulTypedName",
														"src": "21553:4:20",
														"type": ""
													}
												],
												"src": "21440:313:20"
											},
											{
												"body": {
													"nativeSrc": "21865:126:20",
													"nodeType": "YulBlock",
													"src": "21865:126:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21887:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "21887:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21895:1:20",
																				"nodeType": "YulLiteral",
																				"src": "21895:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21883:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21883:3:20"
																		},
																		"nativeSrc": "21883:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21883:14:20"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nativeSrc": "21899:34:20",
																		"nodeType": "YulLiteral",
																		"src": "21899:34:20",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21876:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21876:6:20"
																},
																"nativeSrc": "21876:58:20",
																"nodeType": "YulFunctionCall",
																"src": "21876:58:20"
															},
															"nativeSrc": "21876:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "21876:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21955:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "21955:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21963:2:20",
																				"nodeType": "YulLiteral",
																				"src": "21963:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21951:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "21951:3:20"
																		},
																		"nativeSrc": "21951:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "21951:15:20"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "21968:15:20",
																		"nodeType": "YulLiteral",
																		"src": "21968:15:20",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21944:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "21944:6:20"
																},
																"nativeSrc": "21944:40:20",
																"nodeType": "YulFunctionCall",
																"src": "21944:40:20"
															},
															"nativeSrc": "21944:40:20",
															"nodeType": "YulExpressionStatement",
															"src": "21944:40:20"
														}
													]
												},
												"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
												"nativeSrc": "21759:232:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21857:6:20",
														"nodeType": "YulTypedName",
														"src": "21857:6:20",
														"type": ""
													}
												],
												"src": "21759:232:20"
											},
											{
												"body": {
													"nativeSrc": "22143:220:20",
													"nodeType": "YulBlock",
													"src": "22143:220:20",
													"statements": [
														{
															"nativeSrc": "22153:74:20",
															"nodeType": "YulAssignment",
															"src": "22153:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22219:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "22219:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22224:2:20",
																		"nodeType": "YulLiteral",
																		"src": "22224:2:20",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22160:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "22160:58:20"
																},
																"nativeSrc": "22160:67:20",
																"nodeType": "YulFunctionCall",
																"src": "22160:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22153:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22153:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22325:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "22325:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																	"nativeSrc": "22236:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "22236:88:20"
																},
																"nativeSrc": "22236:93:20",
																"nodeType": "YulFunctionCall",
																"src": "22236:93:20"
															},
															"nativeSrc": "22236:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "22236:93:20"
														},
														{
															"nativeSrc": "22338:19:20",
															"nodeType": "YulAssignment",
															"src": "22338:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22349:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "22349:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22354:2:20",
																		"nodeType": "YulLiteral",
																		"src": "22354:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22345:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22345:3:20"
																},
																"nativeSrc": "22345:12:20",
																"nodeType": "YulFunctionCall",
																"src": "22345:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22338:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22338:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21997:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22131:3:20",
														"nodeType": "YulTypedName",
														"src": "22131:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22139:3:20",
														"nodeType": "YulTypedName",
														"src": "22139:3:20",
														"type": ""
													}
												],
												"src": "21997:366:20"
											},
											{
												"body": {
													"nativeSrc": "22540:248:20",
													"nodeType": "YulBlock",
													"src": "22540:248:20",
													"statements": [
														{
															"nativeSrc": "22550:26:20",
															"nodeType": "YulAssignment",
															"src": "22550:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22562:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "22562:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22573:2:20",
																		"nodeType": "YulLiteral",
																		"src": "22573:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22558:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "22558:3:20"
																},
																"nativeSrc": "22558:18:20",
																"nodeType": "YulFunctionCall",
																"src": "22558:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22550:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "22550:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22597:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "22597:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22608:1:20",
																				"nodeType": "YulLiteral",
																				"src": "22608:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22593:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "22593:3:20"
																		},
																		"nativeSrc": "22593:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22593:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22616:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "22616:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22622:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "22622:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22612:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "22612:3:20"
																		},
																		"nativeSrc": "22612:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "22612:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22586:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22586:6:20"
																},
																"nativeSrc": "22586:47:20",
																"nodeType": "YulFunctionCall",
																"src": "22586:47:20"
															},
															"nativeSrc": "22586:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "22586:47:20"
														},
														{
															"nativeSrc": "22642:139:20",
															"nodeType": "YulAssignment",
															"src": "22642:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22776:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "22776:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22650:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "22650:124:20"
																},
																"nativeSrc": "22650:131:20",
																"nodeType": "YulFunctionCall",
																"src": "22650:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22642:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "22642:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22369:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22520:9:20",
														"nodeType": "YulTypedName",
														"src": "22520:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22535:4:20",
														"nodeType": "YulTypedName",
														"src": "22535:4:20",
														"type": ""
													}
												],
												"src": "22369:419:20"
											},
											{
												"body": {
													"nativeSrc": "22822:152:20",
													"nodeType": "YulBlock",
													"src": "22822:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22839:1:20",
																		"nodeType": "YulLiteral",
																		"src": "22839:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22842:77:20",
																		"nodeType": "YulLiteral",
																		"src": "22842:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22832:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22832:6:20"
																},
																"nativeSrc": "22832:88:20",
																"nodeType": "YulFunctionCall",
																"src": "22832:88:20"
															},
															"nativeSrc": "22832:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "22832:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22936:1:20",
																		"nodeType": "YulLiteral",
																		"src": "22936:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22939:4:20",
																		"nodeType": "YulLiteral",
																		"src": "22939:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22929:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22929:6:20"
																},
																"nativeSrc": "22929:15:20",
																"nodeType": "YulFunctionCall",
																"src": "22929:15:20"
															},
															"nativeSrc": "22929:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "22929:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22960:1:20",
																		"nodeType": "YulLiteral",
																		"src": "22960:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22963:4:20",
																		"nodeType": "YulLiteral",
																		"src": "22963:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22953:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "22953:6:20"
																},
																"nativeSrc": "22953:15:20",
																"nodeType": "YulFunctionCall",
																"src": "22953:15:20"
															},
															"nativeSrc": "22953:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "22953:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "22794:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "22794:180:20"
											},
											{
												"body": {
													"nativeSrc": "23028:362:20",
													"nodeType": "YulBlock",
													"src": "23028:362:20",
													"statements": [
														{
															"nativeSrc": "23038:25:20",
															"nodeType": "YulAssignment",
															"src": "23038:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23061:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23061:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23043:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "23043:17:20"
																},
																"nativeSrc": "23043:20:20",
																"nodeType": "YulFunctionCall",
																"src": "23043:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23038:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "23038:1:20"
																}
															]
														},
														{
															"nativeSrc": "23072:25:20",
															"nodeType": "YulAssignment",
															"src": "23072:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23095:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23095:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23077:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "23077:17:20"
																},
																"nativeSrc": "23077:20:20",
																"nodeType": "YulFunctionCall",
																"src": "23077:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23072:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "23072:1:20"
																}
															]
														},
														{
															"nativeSrc": "23106:28:20",
															"nodeType": "YulVariableDeclaration",
															"src": "23106:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23129:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23129:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23132:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23132:1:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23125:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23125:3:20"
																},
																"nativeSrc": "23125:9:20",
																"nodeType": "YulFunctionCall",
																"src": "23125:9:20"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "23110:11:20",
																	"nodeType": "YulTypedName",
																	"src": "23110:11:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23143:41:20",
															"nodeType": "YulAssignment",
															"src": "23143:41:20",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "23172:11:20",
																		"nodeType": "YulIdentifier",
																		"src": "23172:11:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23154:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "23154:17:20"
																},
																"nativeSrc": "23154:30:20",
																"nodeType": "YulFunctionCall",
																"src": "23154:30:20"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "23143:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "23143:7:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23361:22:20",
																"nodeType": "YulBlock",
																"src": "23361:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23363:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "23363:16:20"
																			},
																			"nativeSrc": "23363:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23363:18:20"
																		},
																		"nativeSrc": "23363:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "23363:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "23294:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "23294:1:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "23287:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "23287:6:20"
																				},
																				"nativeSrc": "23287:9:20",
																				"nodeType": "YulFunctionCall",
																				"src": "23287:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "23317:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "23317:1:20"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "23324:7:20",
																								"nodeType": "YulIdentifier",
																								"src": "23324:7:20"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "23333:1:20",
																								"nodeType": "YulIdentifier",
																								"src": "23333:1:20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "23320:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "23320:3:20"
																						},
																						"nativeSrc": "23320:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "23320:15:20"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "23314:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "23314:2:20"
																				},
																				"nativeSrc": "23314:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "23314:22:20"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "23267:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "23267:2:20"
																		},
																		"nativeSrc": "23267:83:20",
																		"nodeType": "YulFunctionCall",
																		"src": "23267:83:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23247:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "23247:6:20"
																},
																"nativeSrc": "23247:113:20",
																"nodeType": "YulFunctionCall",
																"src": "23247:113:20"
															},
															"nativeSrc": "23244:139:20",
															"nodeType": "YulIf",
															"src": "23244:139:20"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "22980:410:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23011:1:20",
														"nodeType": "YulTypedName",
														"src": "23011:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23014:1:20",
														"nodeType": "YulTypedName",
														"src": "23014:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "23020:7:20",
														"nodeType": "YulTypedName",
														"src": "23020:7:20",
														"type": ""
													}
												],
												"src": "22980:410:20"
											},
											{
												"body": {
													"nativeSrc": "23440:147:20",
													"nodeType": "YulBlock",
													"src": "23440:147:20",
													"statements": [
														{
															"nativeSrc": "23450:25:20",
															"nodeType": "YulAssignment",
															"src": "23450:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23473:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23473:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23455:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "23455:17:20"
																},
																"nativeSrc": "23455:20:20",
																"nodeType": "YulFunctionCall",
																"src": "23455:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23450:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "23450:1:20"
																}
															]
														},
														{
															"nativeSrc": "23484:25:20",
															"nodeType": "YulAssignment",
															"src": "23484:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23507:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23507:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23489:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "23489:17:20"
																},
																"nativeSrc": "23489:20:20",
																"nodeType": "YulFunctionCall",
																"src": "23489:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23484:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "23484:1:20"
																}
															]
														},
														{
															"nativeSrc": "23518:16:20",
															"nodeType": "YulAssignment",
															"src": "23518:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23529:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23529:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23532:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23532:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23525:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23525:3:20"
																},
																"nativeSrc": "23525:9:20",
																"nodeType": "YulFunctionCall",
																"src": "23525:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23518:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23518:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23558:22:20",
																"nodeType": "YulBlock",
																"src": "23558:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23560:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "23560:16:20"
																			},
																			"nativeSrc": "23560:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23560:18:20"
																		},
																		"nativeSrc": "23560:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "23560:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23550:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "23550:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23553:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "23553:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23547:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "23547:2:20"
																},
																"nativeSrc": "23547:10:20",
																"nodeType": "YulFunctionCall",
																"src": "23547:10:20"
															},
															"nativeSrc": "23544:36:20",
															"nodeType": "YulIf",
															"src": "23544:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23396:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23427:1:20",
														"nodeType": "YulTypedName",
														"src": "23427:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23430:1:20",
														"nodeType": "YulTypedName",
														"src": "23430:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23436:3:20",
														"nodeType": "YulTypedName",
														"src": "23436:3:20",
														"type": ""
													}
												],
												"src": "23396:191:20"
											},
											{
												"body": {
													"nativeSrc": "23621:152:20",
													"nodeType": "YulBlock",
													"src": "23621:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23638:1:20",
																		"nodeType": "YulLiteral",
																		"src": "23638:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23641:77:20",
																		"nodeType": "YulLiteral",
																		"src": "23641:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23631:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "23631:6:20"
																},
																"nativeSrc": "23631:88:20",
																"nodeType": "YulFunctionCall",
																"src": "23631:88:20"
															},
															"nativeSrc": "23631:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "23631:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23735:1:20",
																		"nodeType": "YulLiteral",
																		"src": "23735:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23738:4:20",
																		"nodeType": "YulLiteral",
																		"src": "23738:4:20",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23728:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "23728:6:20"
																},
																"nativeSrc": "23728:15:20",
																"nodeType": "YulFunctionCall",
																"src": "23728:15:20"
															},
															"nativeSrc": "23728:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "23728:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23759:1:20",
																		"nodeType": "YulLiteral",
																		"src": "23759:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23762:4:20",
																		"nodeType": "YulLiteral",
																		"src": "23762:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23752:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "23752:6:20"
																},
																"nativeSrc": "23752:15:20",
																"nodeType": "YulFunctionCall",
																"src": "23752:15:20"
															},
															"nativeSrc": "23752:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "23752:15:20"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "23593:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "23593:180:20"
											},
											{
												"body": {
													"nativeSrc": "23822:128:20",
													"nodeType": "YulBlock",
													"src": "23822:128:20",
													"statements": [
														{
															"nativeSrc": "23832:33:20",
															"nodeType": "YulAssignment",
															"src": "23832:33:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23859:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "23859:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23841:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "23841:17:20"
																},
																"nativeSrc": "23841:24:20",
																"nodeType": "YulFunctionCall",
																"src": "23841:24:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23832:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "23832:5:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23893:22:20",
																"nodeType": "YulBlock",
																"src": "23893:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23895:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "23895:16:20"
																			},
																			"nativeSrc": "23895:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "23895:18:20"
																		},
																		"nativeSrc": "23895:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "23895:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23880:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "23880:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23887:4:20",
																		"nodeType": "YulLiteral",
																		"src": "23887:4:20",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "23877:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "23877:2:20"
																},
																"nativeSrc": "23877:15:20",
																"nodeType": "YulFunctionCall",
																"src": "23877:15:20"
															},
															"nativeSrc": "23874:41:20",
															"nodeType": "YulIf",
															"src": "23874:41:20"
														},
														{
															"nativeSrc": "23924:20:20",
															"nodeType": "YulAssignment",
															"src": "23924:20:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23935:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "23935:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23942:1:20",
																		"nodeType": "YulLiteral",
																		"src": "23942:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "23931:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23931:3:20"
																},
																"nativeSrc": "23931:13:20",
																"nodeType": "YulFunctionCall",
																"src": "23931:13:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23924:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "23924:3:20"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "23779:171:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23808:5:20",
														"nodeType": "YulTypedName",
														"src": "23808:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23818:3:20",
														"nodeType": "YulTypedName",
														"src": "23818:3:20",
														"type": ""
													}
												],
												"src": "23779:171:20"
											},
											{
												"body": {
													"nativeSrc": "24062:76:20",
													"nodeType": "YulBlock",
													"src": "24062:76:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24084:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "24084:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24092:1:20",
																				"nodeType": "YulLiteral",
																				"src": "24092:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24080:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "24080:3:20"
																		},
																		"nativeSrc": "24080:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24080:14:20"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "24096:34:20",
																		"nodeType": "YulLiteral",
																		"src": "24096:34:20",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24073:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "24073:6:20"
																},
																"nativeSrc": "24073:58:20",
																"nodeType": "YulFunctionCall",
																"src": "24073:58:20"
															},
															"nativeSrc": "24073:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "24073:58:20"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nativeSrc": "23956:182:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24054:6:20",
														"nodeType": "YulTypedName",
														"src": "24054:6:20",
														"type": ""
													}
												],
												"src": "23956:182:20"
											},
											{
												"body": {
													"nativeSrc": "24290:220:20",
													"nodeType": "YulBlock",
													"src": "24290:220:20",
													"statements": [
														{
															"nativeSrc": "24300:74:20",
															"nodeType": "YulAssignment",
															"src": "24300:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24366:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "24366:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24371:2:20",
																		"nodeType": "YulLiteral",
																		"src": "24371:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24307:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "24307:58:20"
																},
																"nativeSrc": "24307:67:20",
																"nodeType": "YulFunctionCall",
																"src": "24307:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24300:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24300:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24472:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "24472:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nativeSrc": "24383:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "24383:88:20"
																},
																"nativeSrc": "24383:93:20",
																"nodeType": "YulFunctionCall",
																"src": "24383:93:20"
															},
															"nativeSrc": "24383:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "24383:93:20"
														},
														{
															"nativeSrc": "24485:19:20",
															"nodeType": "YulAssignment",
															"src": "24485:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24496:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "24496:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24501:2:20",
																		"nodeType": "YulLiteral",
																		"src": "24501:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24492:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24492:3:20"
																},
																"nativeSrc": "24492:12:20",
																"nodeType": "YulFunctionCall",
																"src": "24492:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24485:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24485:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24144:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24278:3:20",
														"nodeType": "YulTypedName",
														"src": "24278:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24286:3:20",
														"nodeType": "YulTypedName",
														"src": "24286:3:20",
														"type": ""
													}
												],
												"src": "24144:366:20"
											},
											{
												"body": {
													"nativeSrc": "24687:248:20",
													"nodeType": "YulBlock",
													"src": "24687:248:20",
													"statements": [
														{
															"nativeSrc": "24697:26:20",
															"nodeType": "YulAssignment",
															"src": "24697:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24709:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "24709:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24720:2:20",
																		"nodeType": "YulLiteral",
																		"src": "24720:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24705:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "24705:3:20"
																},
																"nativeSrc": "24705:18:20",
																"nodeType": "YulFunctionCall",
																"src": "24705:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24697:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "24697:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24744:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "24744:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24755:1:20",
																				"nodeType": "YulLiteral",
																				"src": "24755:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24740:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "24740:3:20"
																		},
																		"nativeSrc": "24740:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24740:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24763:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "24763:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24769:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "24769:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24759:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "24759:3:20"
																		},
																		"nativeSrc": "24759:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "24759:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24733:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "24733:6:20"
																},
																"nativeSrc": "24733:47:20",
																"nodeType": "YulFunctionCall",
																"src": "24733:47:20"
															},
															"nativeSrc": "24733:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "24733:47:20"
														},
														{
															"nativeSrc": "24789:139:20",
															"nodeType": "YulAssignment",
															"src": "24789:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24923:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "24923:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24797:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "24797:124:20"
																},
																"nativeSrc": "24797:131:20",
																"nodeType": "YulFunctionCall",
																"src": "24797:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24789:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "24789:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24516:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24667:9:20",
														"nodeType": "YulTypedName",
														"src": "24667:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24682:4:20",
														"nodeType": "YulTypedName",
														"src": "24682:4:20",
														"type": ""
													}
												],
												"src": "24516:419:20"
											},
											{
												"body": {
													"nativeSrc": "24999:40:20",
													"nodeType": "YulBlock",
													"src": "24999:40:20",
													"statements": [
														{
															"nativeSrc": "25010:22:20",
															"nodeType": "YulAssignment",
															"src": "25010:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25026:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "25026:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25020:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "25020:5:20"
																},
																"nativeSrc": "25020:12:20",
																"nodeType": "YulFunctionCall",
																"src": "25020:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "25010:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "25010:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "24941:98:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24982:5:20",
														"nodeType": "YulTypedName",
														"src": "24982:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "24992:6:20",
														"nodeType": "YulTypedName",
														"src": "24992:6:20",
														"type": ""
													}
												],
												"src": "24941:98:20"
											},
											{
												"body": {
													"nativeSrc": "25158:34:20",
													"nodeType": "YulBlock",
													"src": "25158:34:20",
													"statements": [
														{
															"nativeSrc": "25168:18:20",
															"nodeType": "YulAssignment",
															"src": "25168:18:20",
															"value": {
																"name": "pos",
																"nativeSrc": "25183:3:20",
																"nodeType": "YulIdentifier",
																"src": "25183:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "25168:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "25168:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "25045:147:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25130:3:20",
														"nodeType": "YulTypedName",
														"src": "25130:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "25135:6:20",
														"nodeType": "YulTypedName",
														"src": "25135:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "25146:11:20",
														"nodeType": "YulTypedName",
														"src": "25146:11:20",
														"type": ""
													}
												],
												"src": "25045:147:20"
											},
											{
												"body": {
													"nativeSrc": "25306:278:20",
													"nodeType": "YulBlock",
													"src": "25306:278:20",
													"statements": [
														{
															"nativeSrc": "25316:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "25316:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25362:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "25362:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "25330:31:20",
																	"nodeType": "YulIdentifier",
																	"src": "25330:31:20"
																},
																"nativeSrc": "25330:38:20",
																"nodeType": "YulFunctionCall",
																"src": "25330:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "25320:6:20",
																	"nodeType": "YulTypedName",
																	"src": "25320:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25377:95:20",
															"nodeType": "YulAssignment",
															"src": "25377:95:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25460:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25460:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25465:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25465:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25384:75:20",
																	"nodeType": "YulIdentifier",
																	"src": "25384:75:20"
																},
																"nativeSrc": "25384:88:20",
																"nodeType": "YulFunctionCall",
																"src": "25384:88:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25377:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25377:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25520:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "25520:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25527:4:20",
																				"nodeType": "YulLiteral",
																				"src": "25527:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25516:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "25516:3:20"
																		},
																		"nativeSrc": "25516:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "25516:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25534:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25534:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25539:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25539:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "25481:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "25481:34:20"
																},
																"nativeSrc": "25481:65:20",
																"nodeType": "YulFunctionCall",
																"src": "25481:65:20"
															},
															"nativeSrc": "25481:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "25481:65:20"
														},
														{
															"nativeSrc": "25555:23:20",
															"nodeType": "YulAssignment",
															"src": "25555:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25566:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25566:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25571:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25571:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25562:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25562:3:20"
																},
																"nativeSrc": "25562:16:20",
																"nodeType": "YulFunctionCall",
																"src": "25562:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25555:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25555:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "25198:386:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25287:5:20",
														"nodeType": "YulTypedName",
														"src": "25287:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25294:3:20",
														"nodeType": "YulTypedName",
														"src": "25294:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25302:3:20",
														"nodeType": "YulTypedName",
														"src": "25302:3:20",
														"type": ""
													}
												],
												"src": "25198:386:20"
											},
											{
												"body": {
													"nativeSrc": "25724:137:20",
													"nodeType": "YulBlock",
													"src": "25724:137:20",
													"statements": [
														{
															"nativeSrc": "25735:100:20",
															"nodeType": "YulAssignment",
															"src": "25735:100:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25822:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "25822:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25831:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "25831:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25742:79:20",
																	"nodeType": "YulIdentifier",
																	"src": "25742:79:20"
																},
																"nativeSrc": "25742:93:20",
																"nodeType": "YulFunctionCall",
																"src": "25742:93:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25735:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25735:3:20"
																}
															]
														},
														{
															"nativeSrc": "25845:10:20",
															"nodeType": "YulAssignment",
															"src": "25845:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "25852:3:20",
																"nodeType": "YulIdentifier",
																"src": "25852:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25845:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "25845:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "25590:271:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25703:3:20",
														"nodeType": "YulTypedName",
														"src": "25703:3:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25709:6:20",
														"nodeType": "YulTypedName",
														"src": "25709:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25720:3:20",
														"nodeType": "YulTypedName",
														"src": "25720:3:20",
														"type": ""
													}
												],
												"src": "25590:271:20"
											},
											{
												"body": {
													"nativeSrc": "25973:73:20",
													"nodeType": "YulBlock",
													"src": "25973:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25995:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "25995:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26003:1:20",
																				"nodeType": "YulLiteral",
																				"src": "26003:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25991:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "25991:3:20"
																		},
																		"nativeSrc": "25991:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "25991:14:20"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "26007:31:20",
																		"nodeType": "YulLiteral",
																		"src": "26007:31:20",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25984:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "25984:6:20"
																},
																"nativeSrc": "25984:55:20",
																"nodeType": "YulFunctionCall",
																"src": "25984:55:20"
															},
															"nativeSrc": "25984:55:20",
															"nodeType": "YulExpressionStatement",
															"src": "25984:55:20"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "25867:179:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25965:6:20",
														"nodeType": "YulTypedName",
														"src": "25965:6:20",
														"type": ""
													}
												],
												"src": "25867:179:20"
											},
											{
												"body": {
													"nativeSrc": "26198:220:20",
													"nodeType": "YulBlock",
													"src": "26198:220:20",
													"statements": [
														{
															"nativeSrc": "26208:74:20",
															"nodeType": "YulAssignment",
															"src": "26208:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26274:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26274:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26279:2:20",
																		"nodeType": "YulLiteral",
																		"src": "26279:2:20",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26215:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "26215:58:20"
																},
																"nativeSrc": "26215:67:20",
																"nodeType": "YulFunctionCall",
																"src": "26215:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26208:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26208:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26380:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26380:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "26291:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "26291:88:20"
																},
																"nativeSrc": "26291:93:20",
																"nodeType": "YulFunctionCall",
																"src": "26291:93:20"
															},
															"nativeSrc": "26291:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "26291:93:20"
														},
														{
															"nativeSrc": "26393:19:20",
															"nodeType": "YulAssignment",
															"src": "26393:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26404:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "26404:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26409:2:20",
																		"nodeType": "YulLiteral",
																		"src": "26409:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26400:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26400:3:20"
																},
																"nativeSrc": "26400:12:20",
																"nodeType": "YulFunctionCall",
																"src": "26400:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26393:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26393:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26052:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26186:3:20",
														"nodeType": "YulTypedName",
														"src": "26186:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26194:3:20",
														"nodeType": "YulTypedName",
														"src": "26194:3:20",
														"type": ""
													}
												],
												"src": "26052:366:20"
											},
											{
												"body": {
													"nativeSrc": "26595:248:20",
													"nodeType": "YulBlock",
													"src": "26595:248:20",
													"statements": [
														{
															"nativeSrc": "26605:26:20",
															"nodeType": "YulAssignment",
															"src": "26605:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26617:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "26617:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26628:2:20",
																		"nodeType": "YulLiteral",
																		"src": "26628:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26613:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "26613:3:20"
																},
																"nativeSrc": "26613:18:20",
																"nodeType": "YulFunctionCall",
																"src": "26613:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26605:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "26605:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26652:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "26652:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26663:1:20",
																				"nodeType": "YulLiteral",
																				"src": "26663:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26648:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "26648:3:20"
																		},
																		"nativeSrc": "26648:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "26648:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26671:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "26671:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26677:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "26677:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26667:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "26667:3:20"
																		},
																		"nativeSrc": "26667:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "26667:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26641:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "26641:6:20"
																},
																"nativeSrc": "26641:47:20",
																"nodeType": "YulFunctionCall",
																"src": "26641:47:20"
															},
															"nativeSrc": "26641:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "26641:47:20"
														},
														{
															"nativeSrc": "26697:139:20",
															"nodeType": "YulAssignment",
															"src": "26697:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26831:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "26831:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26705:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "26705:124:20"
																},
																"nativeSrc": "26705:131:20",
																"nodeType": "YulFunctionCall",
																"src": "26705:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26697:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "26697:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26424:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26575:9:20",
														"nodeType": "YulTypedName",
														"src": "26575:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26590:4:20",
														"nodeType": "YulTypedName",
														"src": "26590:4:20",
														"type": ""
													}
												],
												"src": "26424:419:20"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"active proxy\")\n\n    }\n\n    function abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"UUPSUpgradeable: must not be cal\")\n\n        mstore(add(memPtr, 32), \"led through delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: new implementati\")\n\n        mstore(add(memPtr, 32), \"on is not UUPS\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: unsupported prox\")\n\n        mstore(add(memPtr, 32), \"iableUUID\")\n\n    }\n\n    function abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"964": [
									{
										"length": 32,
										"start": 1018
									},
									{
										"length": 32,
										"start": 1160
									},
									{
										"length": 32,
										"start": 1790
									},
									{
										"length": 32,
										"start": 1932
									},
									{
										"length": 32,
										"start": 2437
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100a6575f3560e01c80634f1ef286116100635780634f1ef286146101c257806351cff8d9146101de57806352d1902d1461020657806391d1485414610230578063a217fddf1461026c578063d547741f14610296576100a6565b806301ffc9a7146100aa578063248a9ca3146100e65780632f2ff15d1461012257806336568abe1461014a5780633659cfe614610172578063485cc9551461019a575b5f80fd5b3480156100b5575f80fd5b506100d060048036038101906100cb91906114fb565b6102be565b6040516100dd9190611540565b60405180910390f35b3480156100f1575f80fd5b5061010c6004803603810190610107919061158c565b610337565b60405161011991906115c6565b60405180910390f35b34801561012d575f80fd5b5061014860048036038101906101439190611639565b610354565b005b348015610155575f80fd5b50610170600480360381019061016b9190611639565b610375565b005b34801561017d575f80fd5b5061019860048036038101906101939190611677565b6103f8565b005b3480156101a5575f80fd5b506101c060048036038101906101bb91906116a2565b61057e565b005b6101dc60048036038101906101d7919061181c565b6106fc565b005b3480156101e9575f80fd5b5061020460048036038101906101ff9190611677565b610838565b005b348015610211575f80fd5b5061021a610982565b60405161022791906115c6565b60405180910390f35b34801561023b575f80fd5b5061025660048036038101906102519190611639565b610a39565b6040516102639190611540565b60405180910390f35b348015610277575f80fd5b50610280610a9d565b60405161028d91906115c6565b60405180910390f35b3480156102a1575f80fd5b506102bc60048036038101906102b79190611639565b610aa3565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610330575061032f82610ac4565b5b9050919050565b5f60c95f8381526020019081526020015f20600101549050919050565b61035d82610337565b61036681610b2d565b6103708383610b41565b505050565b61037d610c1c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e1906118f6565b60405180910390fd5b6103f48282610c23565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047d90611984565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104c5610cfe565b73ffffffffffffffffffffffffffffffffffffffff161461051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290611a12565b60405180910390fd5b61052481610d51565b61057b815f67ffffffffffffffff811115610542576105416116f8565b5b6040519080825280601f01601f1916602001820160405280156105745781602001600182028036833780820191505090505b505f610d61565b50565b5f8060019054906101000a900460ff161590508080156105ad575060015f8054906101000a900460ff1660ff16105b806105d957506105bc30610ecb565b1580156105d8575060015f8054906101000a900460ff1660ff16145b5b610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90611aa0565b60405180910390fd5b60015f806101000a81548160ff021916908360ff16021790555080156106535760015f60016101000a81548160ff0219169083151502179055505b61065f5f801b83610eed565b8260fb5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106f7575f8060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516106ee9190611b0c565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361078a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078190611984565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107c9610cfe565b73ffffffffffffffffffffffffffffffffffffffff161461081f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081690611a12565b60405180910390fd5b61082882610d51565b61083482826001610d61565b5050565b5f801b61084481610b2d565b5f60fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161089f9190611b34565b602060405180830381865afa1580156108ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108de9190611b80565b905060fb5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b815260040161093c929190611bba565b6020604051808303815f875af1158015610958573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097c9190611c0b565b50505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0890611ca6565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610aac82610337565b610ab581610b2d565b610abf8383610c23565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b3e81610b39610c1c565b610efb565b50565b610b4b8282610a39565b610c1857600160c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bbd610c1c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b610c2d8282610a39565b15610cfa575f60c95f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c9f610c1c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f610d2a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610f7f565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f801b610d5d81610b2d565b5050565b610d8c7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435f1b610f88565b5f015f9054906101000a900460ff1615610dae57610da983610f91565b610ec6565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e1657506040513d601f19601f82011682018060405250810190610e139190611cd8565b60015b610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611d73565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610eb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb090611e01565b60405180910390fd5b50610ec5838383611047565b5b505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b610ef78282610b41565b5050565b610f058282610a39565b610f7b57610f1281611072565b610f1f835f1c602061109f565b604051602001610f30929190611f05565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f729190611f76565b60405180910390fd5b5050565b5f819050919050565b5f819050919050565b610f9a81610ecb565b610fd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd090612006565b60405180910390fd5b806110057f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610f7f565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611050836112d4565b5f8251118061105c5750805b1561106d5761106b8383611323565b505b505050565b60606110988273ffffffffffffffffffffffffffffffffffffffff16601460ff1661109f565b9050919050565b60605f60028360026110b19190612051565b6110bb9190612092565b67ffffffffffffffff8111156110d4576110d36116f8565b5b6040519080825280601f01601f1916602001820160405280156111065781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f8151811061113d5761113c6120c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106111a05761119f6120c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f60018460026111de9190612051565b6111e89190612092565b90505b6001811115611287577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061122a576112296120c5565b5b1a60f81b828281518110611241576112406120c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c945080611280906120f2565b90506111eb565b505f84146112ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c190612163565b60405180910390fd5b8091505092915050565b6112dd81610f91565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611348838360405180606001604052806027815260200161224460279139611350565b905092915050565b60605f808573ffffffffffffffffffffffffffffffffffffffff168560405161137991906121c5565b5f60405180830381855af49150503d805f81146113b1576040519150601f19603f3d011682016040523d82523d5f602084013e6113b6565b606091505b50915091506113c7868383876113d2565b925050509392505050565b60608315611433575f83510361142b576113eb85610ecb565b61142a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142190612225565b60405180910390fd5b5b82905061143e565b61143d8383611446565b5b949350505050565b5f825111156114585781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148c9190611f76565b60405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114da816114a6565b81146114e4575f80fd5b50565b5f813590506114f5816114d1565b92915050565b5f602082840312156115105761150f61149e565b5b5f61151d848285016114e7565b91505092915050565b5f8115159050919050565b61153a81611526565b82525050565b5f6020820190506115535f830184611531565b92915050565b5f819050919050565b61156b81611559565b8114611575575f80fd5b50565b5f8135905061158681611562565b92915050565b5f602082840312156115a1576115a061149e565b5b5f6115ae84828501611578565b91505092915050565b6115c081611559565b82525050565b5f6020820190506115d95f8301846115b7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611608826115df565b9050919050565b611618816115fe565b8114611622575f80fd5b50565b5f813590506116338161160f565b92915050565b5f806040838503121561164f5761164e61149e565b5b5f61165c85828601611578565b925050602061166d85828601611625565b9150509250929050565b5f6020828403121561168c5761168b61149e565b5b5f61169984828501611625565b91505092915050565b5f80604083850312156116b8576116b761149e565b5b5f6116c585828601611625565b92505060206116d685828601611625565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61172e826116e8565b810181811067ffffffffffffffff8211171561174d5761174c6116f8565b5b80604052505050565b5f61175f611495565b905061176b8282611725565b919050565b5f67ffffffffffffffff82111561178a576117896116f8565b5b611793826116e8565b9050602081019050919050565b828183375f83830152505050565b5f6117c06117bb84611770565b611756565b9050828152602081018484840111156117dc576117db6116e4565b5b6117e78482856117a0565b509392505050565b5f82601f830112611803576118026116e0565b5b81356118138482602086016117ae565b91505092915050565b5f80604083850312156118325761183161149e565b5b5f61183f85828601611625565b925050602083013567ffffffffffffffff8111156118605761185f6114a2565b5b61186c858286016117ef565b9150509250929050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f6118e0602f83611876565b91506118eb82611886565b604082019050919050565b5f6020820190508181035f83015261190d816118d4565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b5f61196e602c83611876565b915061197982611914565b604082019050919050565b5f6020820190508181035f83015261199b81611962565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f756768205f8201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b5f6119fc602c83611876565b9150611a07826119a2565b604082019050919050565b5f6020820190508181035f830152611a29816119f0565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f611a8a602e83611876565b9150611a9582611a30565b604082019050919050565b5f6020820190508181035f830152611ab781611a7e565b9050919050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f611af6611af1611aec84611abe565b611ad3565b611ac7565b9050919050565b611b0681611adc565b82525050565b5f602082019050611b1f5f830184611afd565b92915050565b611b2e816115fe565b82525050565b5f602082019050611b475f830184611b25565b92915050565b5f819050919050565b611b5f81611b4d565b8114611b69575f80fd5b50565b5f81519050611b7a81611b56565b92915050565b5f60208284031215611b9557611b9461149e565b5b5f611ba284828501611b6c565b91505092915050565b611bb481611b4d565b82525050565b5f604082019050611bcd5f830185611b25565b611bda6020830184611bab565b9392505050565b611bea81611526565b8114611bf4575f80fd5b50565b5f81519050611c0581611be1565b92915050565b5f60208284031215611c2057611c1f61149e565b5b5f611c2d84828501611bf7565b91505092915050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c5f8201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b5f611c90603883611876565b9150611c9b82611c36565b604082019050919050565b5f6020820190508181035f830152611cbd81611c84565b9050919050565b5f81519050611cd281611562565b92915050565b5f60208284031215611ced57611cec61149e565b5b5f611cfa84828501611cc4565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e746174695f8201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b5f611d5d602e83611876565b9150611d6882611d03565b604082019050919050565b5f6020820190508181035f830152611d8a81611d51565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f785f8201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b5f611deb602983611876565b9150611df682611d91565b604082019050919050565b5f6020820190508181035f830152611e1881611ddf565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f611e5d601783611e1f565b9150611e6882611e29565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f611e9582611e73565b611e9f8185611e1f565b9350611eaf818560208601611e7d565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f611eef601183611e1f565b9150611efa82611ebb565b601182019050919050565b5f611f0f82611e51565b9150611f1b8285611e8b565b9150611f2682611ee3565b9150611f328284611e8b565b91508190509392505050565b5f611f4882611e73565b611f528185611876565b9350611f62818560208601611e7d565b611f6b816116e8565b840191505092915050565b5f6020820190508181035f830152611f8e8184611f3e565b905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f611ff0602d83611876565b9150611ffb82611f96565b604082019050919050565b5f6020820190508181035f83015261201d81611fe4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61205b82611b4d565b915061206683611b4d565b925082820261207481611b4d565b9150828204841483151761208b5761208a612024565b5b5092915050565b5f61209c82611b4d565b91506120a783611b4d565b92508282019050808211156120bf576120be612024565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6120fc82611b4d565b91505f820361210e5761210d612024565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f61214d602083611876565b915061215882612119565b602082019050919050565b5f6020820190508181035f83015261217a81612141565b9050919050565b5f81519050919050565b5f81905092915050565b5f61219f82612181565b6121a9818561218b565b93506121b9818560208601611e7d565b80840191505092915050565b5f6121d08284612195565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f61220f601d83611876565b915061221a826121db565b602082019050919050565b5f6020820190508181035f83015261223c81612203565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220208b8808897ed27996a45e921d4b368229ed2c5e6d684711fc7964af832962e064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x296 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x19A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x330 JUMPI POP PUSH2 0x32F DUP3 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35D DUP3 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x366 DUP2 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x370 DUP4 DUP4 PUSH2 0xB41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x37D PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 DUP3 DUP3 PUSH2 0xC23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C5 PUSH2 0xCFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x524 DUP2 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x574 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH0 PUSH2 0xD61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x5AD JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x5D9 JUMPI POP PUSH2 0x5BC ADDRESS PUSH2 0xECB JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x65F PUSH0 DUP1 SHL DUP4 PUSH2 0xEED JUMP JUMPDEST DUP3 PUSH1 0xFB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C9 PUSH2 0xCFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x816 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x834 DUP3 DUP3 PUSH1 0x1 PUSH2 0xD61 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x844 DUP2 PUSH2 0xB2D JUMP JUMPDEST PUSH0 PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST SWAP1 POP PUSH1 0xFB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xAAC DUP3 PUSH2 0x337 JUMP JUMPDEST PUSH2 0xAB5 DUP2 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0xABF DUP4 DUP4 PUSH2 0xC23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3E DUP2 PUSH2 0xB39 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xEFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB4B DUP3 DUP3 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0xC18 JUMPI PUSH1 0x1 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBBD PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC2D DUP3 DUP3 PUSH2 0xA39 JUMP JUMPDEST ISZERO PUSH2 0xCFA JUMPI PUSH0 PUSH1 0xC9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC9F PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD2A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xF7F JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xD5D DUP2 PUSH2 0xB2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD8C PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH0 SHL PUSH2 0xF88 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDAE JUMPI PUSH2 0xDA9 DUP4 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0xEC6 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE16 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB0 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xEC5 DUP4 DUP4 DUP4 PUSH2 0x1047 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF7 DUP3 DUP3 PUSH2 0xB41 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF05 DUP3 DUP3 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0xF7B JUMPI PUSH2 0xF12 DUP2 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0xF1F DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF30 SWAP3 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9A DUP2 PUSH2 0xECB JUMP JUMPDEST PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD0 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1005 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xF7F JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1050 DUP4 PUSH2 0x12D4 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x105C JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x106D JUMPI PUSH2 0x106B DUP4 DUP4 PUSH2 0x1323 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1098 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x10BB SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1106 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x113D JUMPI PUSH2 0x113C PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11A0 JUMPI PUSH2 0x119F PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1287 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x122A JUMPI PUSH2 0x1229 PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x20C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1280 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x11EB JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C1 SWAP1 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12DD DUP2 PUSH2 0xF91 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1348 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2244 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x21C5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C7 DUP7 DUP4 DUP4 DUP8 PUSH2 0x13D2 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1433 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x142B JUMPI PUSH2 0x13EB DUP6 PUSH2 0xECB JUMP JUMPDEST PUSH2 0x142A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP1 PUSH2 0x2225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x143E JUMP JUMPDEST PUSH2 0x143D DUP4 DUP4 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1458 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DA DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F5 DUP2 PUSH2 0x14D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH2 0x150F PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x151D DUP5 DUP3 DUP6 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1553 PUSH0 DUP4 ADD DUP5 PUSH2 0x1531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP2 EQ PUSH2 0x1575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A1 JUMPI PUSH2 0x15A0 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AE DUP5 DUP3 DUP6 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15C0 DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1608 DUP3 PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x15FE JUMP JUMPDEST DUP2 EQ PUSH2 0x1622 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1633 DUP2 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165C DUP6 DUP3 DUP7 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x166D DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168C JUMPI PUSH2 0x168B PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1699 DUP5 DUP3 DUP6 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x172E DUP3 PUSH2 0x16E8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175F PUSH2 0x1495 JUMP JUMPDEST SWAP1 POP PUSH2 0x176B DUP3 DUP3 PUSH2 0x1725 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1793 DUP3 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C0 PUSH2 0x17BB DUP5 PUSH2 0x1770 JUMP JUMPDEST PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST PUSH2 0x17E7 DUP5 DUP3 DUP6 PUSH2 0x17A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1813 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x183F DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x14A2 JUMP JUMPDEST JUMPDEST PUSH2 0x186C DUP6 DUP3 DUP7 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E0 PUSH1 0x2F DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EB DUP3 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190D DUP2 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x196E PUSH1 0x2C DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1979 DUP3 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199B DUP2 PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19FC PUSH1 0x2C DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A07 DUP3 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A29 DUP2 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8A PUSH1 0x2E DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AB7 DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF6 PUSH2 0x1AF1 PUSH2 0x1AEC DUP5 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B06 DUP2 PUSH2 0x1ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B1F PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B2E DUP2 PUSH2 0x15FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B47 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5F DUP2 PUSH2 0x1B4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B7A DUP2 PUSH2 0x1B56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA2 DUP5 DUP3 DUP6 ADD PUSH2 0x1B6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB4 DUP2 PUSH2 0x1B4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BCD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x1BDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BAB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BEA DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C05 DUP2 PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C2D DUP5 DUP3 DUP6 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C90 PUSH1 0x38 DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9B DUP3 PUSH2 0x1C36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CD2 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH2 0x1CEC PUSH2 0x149E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFA DUP5 DUP3 DUP6 ADD PUSH2 0x1CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5D PUSH1 0x2E DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D68 DUP3 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D8A DUP2 PUSH2 0x1D51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEB PUSH1 0x29 DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF6 DUP3 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E18 DUP2 PUSH2 0x1DDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5D PUSH1 0x17 DUP4 PUSH2 0x1E1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E68 DUP3 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E95 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1E9F DUP2 DUP6 PUSH2 0x1E1F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEF PUSH1 0x11 DUP4 PUSH2 0x1E1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFA DUP3 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 DUP6 PUSH2 0x1E8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F26 DUP3 PUSH2 0x1EE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F32 DUP3 DUP5 PUSH2 0x1E8B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F48 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1F52 DUP2 DUP6 PUSH2 0x1876 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F62 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x1F6B DUP2 PUSH2 0x16E8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8E DUP2 DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF0 PUSH1 0x2D DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x201D DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x205B DUP3 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2074 DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x2024 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x209C DUP3 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP PUSH2 0x20A7 DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20BF JUMPI PUSH2 0x20BE PUSH2 0x2024 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20FC DUP3 PUSH2 0x1B4D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x210E JUMPI PUSH2 0x210D PUSH2 0x2024 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214D PUSH1 0x20 DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x2158 DUP3 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x217A DUP2 PUSH2 0x2141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x219F DUP3 PUSH2 0x2181 JUMP JUMPDEST PUSH2 0x21A9 DUP2 DUP6 PUSH2 0x218B JUMP JUMPDEST SWAP4 POP PUSH2 0x21B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21D0 DUP3 DUP5 PUSH2 0x2195 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220F PUSH1 0x1D DUP4 PUSH2 0x1876 JUMP JUMPDEST SWAP2 POP PUSH2 0x221A DUP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223C DUP2 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220208B88 ADDMOD DUP10 PUSH31 0xD27996A45E921D4B368229ED2C5E6D684711FC7964AF832962E064736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "381:594:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3050:213:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4855:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5280:145;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6389:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3408:195:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;495:172:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3922:220:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;672:171:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3027:131:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3350:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2320:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5705:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3050:213;3135:4;3173:43;3158:58;;;:11;:58;;;;:98;;;;3220:36;3244:11;3220:23;:36::i;:::-;3158:98;3151:105;;3050:213;;;:::o;4855:129::-;4929:7;4955:6;:12;4962:4;4955:12;;;;;;;;;;;:22;;;4948:29;;4855:129;;;:::o;5280:145::-;5363:18;5376:4;5363:12;:18::i;:::-;2798:16;2809:4;2798:10;:16::i;:::-;5393:25:::1;5404:4;5410:7;5393:10;:25::i;:::-;5280:145:::0;;;:::o;6389:214::-;6495:12;:10;:12::i;:::-;6484:23;;:7;:23;;;6476:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6570:26;6582:4;6588:7;6570:11;:26::i;:::-;6389:214;;:::o;3408:195:7:-;1764:6;1747:23;;1755:4;1747:23;;;1739:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:6;1837:30;;:20;:18;:20::i;:::-;:30;;;1829:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3489:36:::1;3507:17;3489;:36::i;:::-;3535:61;3557:17;3586:1;3576:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3590:5;3535:21;:61::i;:::-;3408:195:::0;:::o;495:172:19:-;3279:19:6;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;577:38:19::1;2365:4:0;588:18:19::0;::::1;608:6;577:10;:38::i;:::-;652:7;625:6;;:35;;;;;;;;;;;;;;;;;;3651:14:6::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;495:172:19;;:::o;3922:220:7:-;1764:6;1747:23;;1755:4;1747:23;;;1739:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:6;1837:30;;:20;:18;:20::i;:::-;:30;;;1829:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4037:36:::1;4055:17;4037;:36::i;:::-;4083:52;4105:17;4124:4;4130;4083:21;:52::i;:::-;3922:220:::0;;:::o;672:171:19:-;2365:4:0;722:18:19;;2798:16:0;2809:4;2798:10;:16::i;:::-;751:12:19::1;766:6;;;;;;;;;;;:16;;;791:4;766:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;751:46;;807:6;;;;;;;;;;;:15;;;823:3;828:7;807:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;741:102;672:171:::0;;:::o;3027:131:7:-;3105:7;2199:6;2182:23;;2190:4;2182:23;;;2174:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1180:66:4::1;3131:20:7;;3124:27;;3027:131:::0;:::o;3350:145:0:-;3436:4;3459:6;:12;3466:4;3459:12;;;;;;;;;;;:20;;:29;3480:7;3459:29;;;;;;;;;;;;;;;;;;;;;;;;;3452:36;;3350:145;;;;:::o;2320:49::-;2365:4;2320:49;;;:::o;5705:147::-;5789:18;5802:4;5789:12;:18::i;:::-;2798:16;2809:4;2798:10;:16::i;:::-;5819:26:::1;5831:4;5837:7;5819:11;:26::i;:::-;5705:147:::0;;;:::o;1081:166:15:-;1166:4;1204:36;1189:51;;;:11;:51;;;;1182:58;;1081:166;;;:::o;3789:103:0:-;3855:30;3866:4;3872:12;:10;:12::i;:::-;3855:10;:30::i;:::-;3789:103;:::o;7938:233::-;8021:22;8029:4;8035:7;8021;:22::i;:::-;8016:149;;8091:4;8059:6;:12;8066:4;8059:12;;;;;;;;;;;:20;;:29;8080:7;8059:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8141:12;:10;:12::i;:::-;8114:40;;8132:7;8114:40;;8126:4;8114:40;;;;;;;;;;8016:149;7938:233;;:::o;886:96:12:-;939:7;965:10;958:17;;886:96;:::o;8342:234:0:-;8425:22;8433:4;8439:7;8425;:22::i;:::-;8421:149;;;8495:5;8463:6;:12;8470:4;8463:12;;;;;;;;;;;:20;;:29;8484:7;8463:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8546:12;:10;:12::i;:::-;8519:40;;8537:7;8519:40;;8531:4;8519:40;;;;;;;;;;8421:149;8342:234;;:::o;1478:151:4:-;1531:7;1557:59;1180:66;1595:20;;1557:37;:59::i;:::-;:65;;;;;;;;;;;;1550:72;;1478:151;:::o;848:125:19:-;2365:4:0;951:18:19;;2798:16:0;2809:4;2798:10;:16::i;:::-;848:125:19;;:::o;2841:944:4:-;3257:53;839:66;3295:14;;3257:37;:53::i;:::-;:59;;;;;;;;;;;;3253:526;;;3332:37;3351:17;3332:18;:37::i;:::-;3253:526;;;3433:17;3404:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3400:302;;3631:56;;;;;;;;;;:::i;:::-;;;;;;;;3400:302;1180:66;3525:20;;3517:4;:28;3509:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3468:138;3715:53;3733:17;3752:4;3758:9;3715:17;:53::i;:::-;3253:526;2841:944;;;:::o;1423:320:11:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;7288:110:0:-;7366:25;7377:4;7383:7;7366:10;:25::i;:::-;7288:110;;:::o;4173:501::-;4261:22;4269:4;4275:7;4261;:22::i;:::-;4256:412;;4444:39;4475:7;4444:30;:39::i;:::-;4554:49;4593:4;4585:13;;4600:2;4554:30;:49::i;:::-;4351:274;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4299:358;;;;;;;;;;;:::i;:::-;;;;;;;;4256:412;4173:501;;:::o;1870:190:13:-;1931:21;2040:4;2030:14;;1870:190;;;:::o;2158:::-;2219:21;2328:4;2318:14;;2158:190;;;:::o;1720:281:4:-;1801:48;1831:17;1801:29;:48::i;:::-;1793:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1977:17;1909:59;1180:66;1947:20;;1909:37;:59::i;:::-;:65;;;:85;;;;;;;;;;;;;;;;;;1720:281;:::o;2393:276::-;2501:29;2512:17;2501:10;:29::i;:::-;2558:1;2544:4;:11;:15;:28;;;;2563:9;2544:28;2540:123;;;2588:64;2628:17;2647:4;2588:39;:64::i;:::-;;2540:123;2393:276;;;:::o;2473:149:14:-;2531:13;2563:52;2591:4;2575:22;;376:2;2563:52;;:11;:52::i;:::-;2556:59;;2473:149;;;:::o;1884:437::-;1959:13;1984:19;2029:1;2020:6;2016:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:47;;2041:15;:6;2048:1;2041:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2066;:6;2073:1;2066:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2096:9;2121:1;2112:6;2108:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;2162:8;2179:3;2171:5;:11;2162:21;;;;;;;:::i;:::-;;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2207:1;2197:11;;;;;2131:3;;;;:::i;:::-;;;2091:128;;;;2245:1;2236:5;:10;2228:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2307:6;2293:21;;;1884:437;;;;:::o;2107:152:4:-;2173:37;2192:17;2173:18;:37::i;:::-;2234:17;2225:27;;;;;;;;;;;;2107:152;:::o;6685:198:11:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;;6685:198;;;;:::o;7069:325::-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;;;;7069:325;;;;;:::o;7682:628::-;7862:12;7890:7;7886:418;;;7938:1;7917:10;:17;:22;7913:286;;8132:18;8143:6;8132:10;:18::i;:::-;8124:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7913:286;8219:10;8212:17;;;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;;:::o;8832:540::-;9011:1;8991:10;:17;:21;8987:379;;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:75:20;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:329::-;3607:6;3656:2;3644:9;3635:7;3631:23;3627:32;3624:119;;;3662:79;;:::i;:::-;3624:119;3782:1;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3753:117;3548:329;;;;:::o;3883:474::-;3951:6;3959;4008:2;3996:9;3987:7;3983:23;3979:32;3976:119;;;4014:79;;:::i;:::-;3976:119;4134:1;4159:53;4204:7;4195:6;4184:9;4180:22;4159:53;:::i;:::-;4149:63;;4105:117;4261:2;4287:53;4332:7;4323:6;4312:9;4308:22;4287:53;:::i;:::-;4277:63;;4232:118;3883:474;;;;;:::o;4363:117::-;4472:1;4469;4462:12;4486:117;4595:1;4592;4585:12;4609:102;4650:6;4701:2;4697:7;4692:2;4685:5;4681:14;4677:28;4667:38;;4609:102;;;:::o;4717:180::-;4765:77;4762:1;4755:88;4862:4;4859:1;4852:15;4886:4;4883:1;4876:15;4903:281;4986:27;5008:4;4986:27;:::i;:::-;4978:6;4974:40;5116:6;5104:10;5101:22;5080:18;5068:10;5065:34;5062:62;5059:88;;;5127:18;;:::i;:::-;5059:88;5167:10;5163:2;5156:22;4946:238;4903:281;;:::o;5190:129::-;5224:6;5251:20;;:::i;:::-;5241:30;;5280:33;5308:4;5300:6;5280:33;:::i;:::-;5190:129;;;:::o;5325:307::-;5386:4;5476:18;5468:6;5465:30;5462:56;;;5498:18;;:::i;:::-;5462:56;5536:29;5558:6;5536:29;:::i;:::-;5528:37;;5620:4;5614;5610:15;5602:23;;5325:307;;;:::o;5638:148::-;5736:6;5731:3;5726;5713:30;5777:1;5768:6;5763:3;5759:16;5752:27;5638:148;;;:::o;5792:423::-;5869:5;5894:65;5910:48;5951:6;5910:48;:::i;:::-;5894:65;:::i;:::-;5885:74;;5982:6;5975:5;5968:21;6020:4;6013:5;6009:16;6058:3;6049:6;6044:3;6040:16;6037:25;6034:112;;;6065:79;;:::i;:::-;6034:112;6155:54;6202:6;6197:3;6192;6155:54;:::i;:::-;5875:340;5792:423;;;;;:::o;6234:338::-;6289:5;6338:3;6331:4;6323:6;6319:17;6315:27;6305:122;;6346:79;;:::i;:::-;6305:122;6463:6;6450:20;6488:78;6562:3;6554:6;6547:4;6539:6;6535:17;6488:78;:::i;:::-;6479:87;;6295:277;6234:338;;;;:::o;6578:652::-;6655:6;6663;6712:2;6700:9;6691:7;6687:23;6683:32;6680:119;;;6718:79;;:::i;:::-;6680:119;6838:1;6863:53;6908:7;6899:6;6888:9;6884:22;6863:53;:::i;:::-;6853:63;;6809:117;6993:2;6982:9;6978:18;6965:32;7024:18;7016:6;7013:30;7010:117;;;7046:79;;:::i;:::-;7010:117;7151:62;7205:7;7196:6;7185:9;7181:22;7151:62;:::i;:::-;7141:72;;6936:287;6578:652;;;;;:::o;7236:169::-;7320:11;7354:6;7349:3;7342:19;7394:4;7389:3;7385:14;7370:29;;7236:169;;;;:::o;7411:234::-;7551:34;7547:1;7539:6;7535:14;7528:58;7620:17;7615:2;7607:6;7603:15;7596:42;7411:234;:::o;7651:366::-;7793:3;7814:67;7878:2;7873:3;7814:67;:::i;:::-;7807:74;;7890:93;7979:3;7890:93;:::i;:::-;8008:2;8003:3;7999:12;7992:19;;7651:366;;;:::o;8023:419::-;8189:4;8227:2;8216:9;8212:18;8204:26;;8276:9;8270:4;8266:20;8262:1;8251:9;8247:17;8240:47;8304:131;8430:4;8304:131;:::i;:::-;8296:139;;8023:419;;;:::o;8448:231::-;8588:34;8584:1;8576:6;8572:14;8565:58;8657:14;8652:2;8644:6;8640:15;8633:39;8448:231;:::o;8685:366::-;8827:3;8848:67;8912:2;8907:3;8848:67;:::i;:::-;8841:74;;8924:93;9013:3;8924:93;:::i;:::-;9042:2;9037:3;9033:12;9026:19;;8685:366;;;:::o;9057:419::-;9223:4;9261:2;9250:9;9246:18;9238:26;;9310:9;9304:4;9300:20;9296:1;9285:9;9281:17;9274:47;9338:131;9464:4;9338:131;:::i;:::-;9330:139;;9057:419;;;:::o;9482:231::-;9622:34;9618:1;9610:6;9606:14;9599:58;9691:14;9686:2;9678:6;9674:15;9667:39;9482:231;:::o;9719:366::-;9861:3;9882:67;9946:2;9941:3;9882:67;:::i;:::-;9875:74;;9958:93;10047:3;9958:93;:::i;:::-;10076:2;10071:3;10067:12;10060:19;;9719:366;;;:::o;10091:419::-;10257:4;10295:2;10284:9;10280:18;10272:26;;10344:9;10338:4;10334:20;10330:1;10319:9;10315:17;10308:47;10372:131;10498:4;10372:131;:::i;:::-;10364:139;;10091:419;;;:::o;10516:233::-;10656:34;10652:1;10644:6;10640:14;10633:58;10725:16;10720:2;10712:6;10708:15;10701:41;10516:233;:::o;10755:366::-;10897:3;10918:67;10982:2;10977:3;10918:67;:::i;:::-;10911:74;;10994:93;11083:3;10994:93;:::i;:::-;11112:2;11107:3;11103:12;11096:19;;10755:366;;;:::o;11127:419::-;11293:4;11331:2;11320:9;11316:18;11308:26;;11380:9;11374:4;11370:20;11366:1;11355:9;11351:17;11344:47;11408:131;11534:4;11408:131;:::i;:::-;11400:139;;11127:419;;;:::o;11552:85::-;11597:7;11626:5;11615:16;;11552:85;;;:::o;11643:86::-;11678:7;11718:4;11711:5;11707:16;11696:27;;11643:86;;;:::o;11735:60::-;11763:3;11784:5;11777:12;;11735:60;;;:::o;11801:154::-;11857:9;11890:59;11906:42;11915:32;11941:5;11915:32;:::i;:::-;11906:42;:::i;:::-;11890:59;:::i;:::-;11877:72;;11801:154;;;:::o;11961:143::-;12054:43;12091:5;12054:43;:::i;:::-;12049:3;12042:56;11961:143;;:::o;12110:234::-;12209:4;12247:2;12236:9;12232:18;12224:26;;12260:77;12334:1;12323:9;12319:17;12310:6;12260:77;:::i;:::-;12110:234;;;;:::o;12350:118::-;12437:24;12455:5;12437:24;:::i;:::-;12432:3;12425:37;12350:118;;:::o;12474:222::-;12567:4;12605:2;12594:9;12590:18;12582:26;;12618:71;12686:1;12675:9;12671:17;12662:6;12618:71;:::i;:::-;12474:222;;;;:::o;12702:77::-;12739:7;12768:5;12757:16;;12702:77;;;:::o;12785:122::-;12858:24;12876:5;12858:24;:::i;:::-;12851:5;12848:35;12838:63;;12897:1;12894;12887:12;12838:63;12785:122;:::o;12913:143::-;12970:5;13001:6;12995:13;12986:22;;13017:33;13044:5;13017:33;:::i;:::-;12913:143;;;;:::o;13062:351::-;13132:6;13181:2;13169:9;13160:7;13156:23;13152:32;13149:119;;;13187:79;;:::i;:::-;13149:119;13307:1;13332:64;13388:7;13379:6;13368:9;13364:22;13332:64;:::i;:::-;13322:74;;13278:128;13062:351;;;;:::o;13419:118::-;13506:24;13524:5;13506:24;:::i;:::-;13501:3;13494:37;13419:118;;:::o;13543:332::-;13664:4;13702:2;13691:9;13687:18;13679:26;;13715:71;13783:1;13772:9;13768:17;13759:6;13715:71;:::i;:::-;13796:72;13864:2;13853:9;13849:18;13840:6;13796:72;:::i;:::-;13543:332;;;;;:::o;13881:116::-;13951:21;13966:5;13951:21;:::i;:::-;13944:5;13941:32;13931:60;;13987:1;13984;13977:12;13931:60;13881:116;:::o;14003:137::-;14057:5;14088:6;14082:13;14073:22;;14104:30;14128:5;14104:30;:::i;:::-;14003:137;;;;:::o;14146:345::-;14213:6;14262:2;14250:9;14241:7;14237:23;14233:32;14230:119;;;14268:79;;:::i;:::-;14230:119;14388:1;14413:61;14466:7;14457:6;14446:9;14442:22;14413:61;:::i;:::-;14403:71;;14359:125;14146:345;;;;:::o;14497:243::-;14637:34;14633:1;14625:6;14621:14;14614:58;14706:26;14701:2;14693:6;14689:15;14682:51;14497:243;:::o;14746:366::-;14888:3;14909:67;14973:2;14968:3;14909:67;:::i;:::-;14902:74;;14985:93;15074:3;14985:93;:::i;:::-;15103:2;15098:3;15094:12;15087:19;;14746:366;;;:::o;15118:419::-;15284:4;15322:2;15311:9;15307:18;15299:26;;15371:9;15365:4;15361:20;15357:1;15346:9;15342:17;15335:47;15399:131;15525:4;15399:131;:::i;:::-;15391:139;;15118:419;;;:::o;15543:143::-;15600:5;15631:6;15625:13;15616:22;;15647:33;15674:5;15647:33;:::i;:::-;15543:143;;;;:::o;15692:351::-;15762:6;15811:2;15799:9;15790:7;15786:23;15782:32;15779:119;;;15817:79;;:::i;:::-;15779:119;15937:1;15962:64;16018:7;16009:6;15998:9;15994:22;15962:64;:::i;:::-;15952:74;;15908:128;15692:351;;;;:::o;16049:233::-;16189:34;16185:1;16177:6;16173:14;16166:58;16258:16;16253:2;16245:6;16241:15;16234:41;16049:233;:::o;16288:366::-;16430:3;16451:67;16515:2;16510:3;16451:67;:::i;:::-;16444:74;;16527:93;16616:3;16527:93;:::i;:::-;16645:2;16640:3;16636:12;16629:19;;16288:366;;;:::o;16660:419::-;16826:4;16864:2;16853:9;16849:18;16841:26;;16913:9;16907:4;16903:20;16899:1;16888:9;16884:17;16877:47;16941:131;17067:4;16941:131;:::i;:::-;16933:139;;16660:419;;;:::o;17085:228::-;17225:34;17221:1;17213:6;17209:14;17202:58;17294:11;17289:2;17281:6;17277:15;17270:36;17085:228;:::o;17319:366::-;17461:3;17482:67;17546:2;17541:3;17482:67;:::i;:::-;17475:74;;17558:93;17647:3;17558:93;:::i;:::-;17676:2;17671:3;17667:12;17660:19;;17319:366;;;:::o;17691:419::-;17857:4;17895:2;17884:9;17880:18;17872:26;;17944:9;17938:4;17934:20;17930:1;17919:9;17915:17;17908:47;17972:131;18098:4;17972:131;:::i;:::-;17964:139;;17691:419;;;:::o;18116:148::-;18218:11;18255:3;18240:18;;18116:148;;;;:::o;18270:173::-;18410:25;18406:1;18398:6;18394:14;18387:49;18270:173;:::o;18449:402::-;18609:3;18630:85;18712:2;18707:3;18630:85;:::i;:::-;18623:92;;18724:93;18813:3;18724:93;:::i;:::-;18842:2;18837:3;18833:12;18826:19;;18449:402;;;:::o;18857:99::-;18909:6;18943:5;18937:12;18927:22;;18857:99;;;:::o;18962:139::-;19051:6;19046:3;19041;19035:23;19092:1;19083:6;19078:3;19074:16;19067:27;18962:139;;;:::o;19107:390::-;19213:3;19241:39;19274:5;19241:39;:::i;:::-;19296:89;19378:6;19373:3;19296:89;:::i;:::-;19289:96;;19394:65;19452:6;19447:3;19440:4;19433:5;19429:16;19394:65;:::i;:::-;19484:6;19479:3;19475:16;19468:23;;19217:280;19107:390;;;;:::o;19503:167::-;19643:19;19639:1;19631:6;19627:14;19620:43;19503:167;:::o;19676:402::-;19836:3;19857:85;19939:2;19934:3;19857:85;:::i;:::-;19850:92;;19951:93;20040:3;19951:93;:::i;:::-;20069:2;20064:3;20060:12;20053:19;;19676:402;;;:::o;20084:967::-;20466:3;20488:148;20632:3;20488:148;:::i;:::-;20481:155;;20653:95;20744:3;20735:6;20653:95;:::i;:::-;20646:102;;20765:148;20909:3;20765:148;:::i;:::-;20758:155;;20930:95;21021:3;21012:6;20930:95;:::i;:::-;20923:102;;21042:3;21035:10;;20084:967;;;;;:::o;21057:377::-;21145:3;21173:39;21206:5;21173:39;:::i;:::-;21228:71;21292:6;21287:3;21228:71;:::i;:::-;21221:78;;21308:65;21366:6;21361:3;21354:4;21347:5;21343:16;21308:65;:::i;:::-;21398:29;21420:6;21398:29;:::i;:::-;21393:3;21389:39;21382:46;;21149:285;21057:377;;;;:::o;21440:313::-;21553:4;21591:2;21580:9;21576:18;21568:26;;21640:9;21634:4;21630:20;21626:1;21615:9;21611:17;21604:47;21668:78;21741:4;21732:6;21668:78;:::i;:::-;21660:86;;21440:313;;;;:::o;21759:232::-;21899:34;21895:1;21887:6;21883:14;21876:58;21968:15;21963:2;21955:6;21951:15;21944:40;21759:232;:::o;21997:366::-;22139:3;22160:67;22224:2;22219:3;22160:67;:::i;:::-;22153:74;;22236:93;22325:3;22236:93;:::i;:::-;22354:2;22349:3;22345:12;22338:19;;21997:366;;;:::o;22369:419::-;22535:4;22573:2;22562:9;22558:18;22550:26;;22622:9;22616:4;22612:20;22608:1;22597:9;22593:17;22586:47;22650:131;22776:4;22650:131;:::i;:::-;22642:139;;22369:419;;;:::o;22794:180::-;22842:77;22839:1;22832:88;22939:4;22936:1;22929:15;22963:4;22960:1;22953:15;22980:410;23020:7;23043:20;23061:1;23043:20;:::i;:::-;23038:25;;23077:20;23095:1;23077:20;:::i;:::-;23072:25;;23132:1;23129;23125:9;23154:30;23172:11;23154:30;:::i;:::-;23143:41;;23333:1;23324:7;23320:15;23317:1;23314:22;23294:1;23287:9;23267:83;23244:139;;23363:18;;:::i;:::-;23244:139;23028:362;22980:410;;;;:::o;23396:191::-;23436:3;23455:20;23473:1;23455:20;:::i;:::-;23450:25;;23489:20;23507:1;23489:20;:::i;:::-;23484:25;;23532:1;23529;23525:9;23518:16;;23553:3;23550:1;23547:10;23544:36;;;23560:18;;:::i;:::-;23544:36;23396:191;;;;:::o;23593:180::-;23641:77;23638:1;23631:88;23738:4;23735:1;23728:15;23762:4;23759:1;23752:15;23779:171;23818:3;23841:24;23859:5;23841:24;:::i;:::-;23832:33;;23887:4;23880:5;23877:15;23874:41;;23895:18;;:::i;:::-;23874:41;23942:1;23935:5;23931:13;23924:20;;23779:171;;;:::o;23956:182::-;24096:34;24092:1;24084:6;24080:14;24073:58;23956:182;:::o;24144:366::-;24286:3;24307:67;24371:2;24366:3;24307:67;:::i;:::-;24300:74;;24383:93;24472:3;24383:93;:::i;:::-;24501:2;24496:3;24492:12;24485:19;;24144:366;;;:::o;24516:419::-;24682:4;24720:2;24709:9;24705:18;24697:26;;24769:9;24763:4;24759:20;24755:1;24744:9;24740:17;24733:47;24797:131;24923:4;24797:131;:::i;:::-;24789:139;;24516:419;;;:::o;24941:98::-;24992:6;25026:5;25020:12;25010:22;;24941:98;;;:::o;25045:147::-;25146:11;25183:3;25168:18;;25045:147;;;;:::o;25198:386::-;25302:3;25330:38;25362:5;25330:38;:::i;:::-;25384:88;25465:6;25460:3;25384:88;:::i;:::-;25377:95;;25481:65;25539:6;25534:3;25527:4;25520:5;25516:16;25481:65;:::i;:::-;25571:6;25566:3;25562:16;25555:23;;25306:278;25198:386;;;;:::o;25590:271::-;25720:3;25742:93;25831:3;25822:6;25742:93;:::i;:::-;25735:100;;25852:3;25845:10;;25590:271;;;;:::o;25867:179::-;26007:31;26003:1;25995:6;25991:14;25984:55;25867:179;:::o;26052:366::-;26194:3;26215:67;26279:2;26274:3;26215:67;:::i;:::-;26208:74;;26291:93;26380:3;26291:93;:::i;:::-;26409:2;26404:3;26400:12;26393:19;;26052:366;;;:::o;26424:419::-;26590:4;26628:2;26617:9;26613:18;26605:26;;26677:9;26671:4;26667:20;26663:1;26652:9;26648:17;26641:47;26705:131;26831:4;26705:131;:::i;:::-;26697:139;;26424:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1772800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "418",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3188",
								"initialize(address,address)": "infinite",
								"proxiableUUID()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "718",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"withdraw(address)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1198,
									"end": 1202,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 381,
									"end": 975,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "964"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 975,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220208b8808897ed27996a45e921d4b368229ed2c5e6d684711fc7964af832962e064736f6c634300081a0033",
									".code": [
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "4F1EF286"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "4F1EF286"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "51CFF8D9"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "52D1902D"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "91D14854"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "A217FDDF"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "D547741F"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "tag",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "1FFC9A7"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "248A9CA3"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "2F2FF15D"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "36568ABE"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "3659CFE6"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "485CC955"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 381,
											"end": 975,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4855,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4855,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4855,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3408,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3408,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 495,
											"end": 667,
											"name": "tag",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 495,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "tag",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 495,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "tag",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3922,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3922,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 672,
											"end": 843,
											"name": "tag",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 672,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 672,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "tag",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3027,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3027,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2320,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2320,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3220,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5376,
											"end": 5380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5363,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5404,
											"end": 5408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5417,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5393,
											"end": 5418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6495,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6495,
											"end": 6507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6507,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6495,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6476,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6582,
											"end": 6586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6570,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "964"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1739,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "964"
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1837,
											"end": 1857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1829,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3507,
											"end": 3524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3489,
											"end": 3525,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3489,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3557,
											"end": 3574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3576,
											"end": 3588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3535,
											"end": 3596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3535,
											"end": 3596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 495,
											"end": 667,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 495,
											"end": 667,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3388,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3432,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3325,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 2365,
											"end": 2369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 606,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 588,
											"end": 606,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 608,
											"end": 614,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 577,
											"end": 587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 577,
											"end": 615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 652,
											"end": 659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 625,
											"end": 631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 625,
											"end": 631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 625,
											"end": 660,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 495,
											"end": 667,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 495,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "964"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1739,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "964"
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1837,
											"end": 1857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1829,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4055,
											"end": 4072,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4037,
											"end": 4073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4037,
											"end": 4073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4105,
											"end": 4122,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4128,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4083,
											"end": 4104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4083,
											"end": 4135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4083,
											"end": 4135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 672,
											"end": 843,
											"name": "tag",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 672,
											"end": 843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 740,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 722,
											"end": 740,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 751,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 766,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 766,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 791,
											"end": 795,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 766,
											"end": 797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 797,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "144"
										},
										{
											"begin": 766,
											"end": 797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 766,
											"end": 797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 751,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 751,
											"end": 797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FB"
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 807,
											"end": 822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 807,
											"end": 822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 823,
											"end": 826,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 828,
											"end": 835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "146"
										},
										{
											"begin": 807,
											"end": 836,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "148"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 836,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "148"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 807,
											"end": 836,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 807,
											"end": 836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 741,
											"end": 843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 672,
											"end": 843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "964"
										},
										{
											"begin": 2182,
											"end": 2205,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2205,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2205,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2205,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2205,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2174,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3131,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3151,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5802,
											"end": 5806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5789,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5831,
											"end": 5835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5819,
											"end": 5845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5819,
											"end": 5845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1247,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 1081,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1166,
											"end": 1170,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1240,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1182,
											"end": 1240,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1182,
											"end": 1240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1081,
											"end": 1247,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1081,
											"end": 1247,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1081,
											"end": 1247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1081,
											"end": 1247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3872,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3872,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3855,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8021,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8059,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8141,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8141,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8132,
											"end": 8139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 982,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 886,
											"end": 982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 939,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 958,
											"end": 975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 982,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8425,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8546,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8546,
											"end": 8558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8558,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8546,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8531,
											"end": 8535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1629,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1478,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1180,
											"end": 1246,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1595,
											"end": 1615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1615,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1557,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1557,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 848,
											"end": 973,
											"name": "tag",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 848,
											"end": 973,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 969,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 951,
											"end": 969,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 973,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 848,
											"end": 973,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 848,
											"end": 973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 839,
											"end": 905,
											"name": "PUSH",
											"source": 4,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3295,
											"end": 3309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3309,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3257,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3310,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3257,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3351,
											"end": 3368,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3332,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3465,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3465,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3465,
											"name": "PUSH",
											"source": 4,
											"value": "52D1902D"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3404,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3631,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1246,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3545,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3509,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3733,
											"end": 3750,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3715,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3715,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 3785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7398,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7288,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7366,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7366,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7366,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7366,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7366,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4261,
											"end": 4283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4475,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4444,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4585,
											"end": 4598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4598,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 4554,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4351,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4299,
											"end": 4657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1720,
											"end": 2001,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1720,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1801,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1801,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 1793,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1180,
											"end": 1246,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1909,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1968,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1909,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 2001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2669,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2393,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2501,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2559,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2628,
											"end": 2645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2588,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2652,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2588,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2669,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2669,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2669,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 2591,
											"end": 2595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 2563,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2556,
											"end": 2615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2556,
											"end": 2615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 2016,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 2016,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 2006,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 14,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 2041,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 14,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 2066,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 2108,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 2108,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2170,
											"name": "PUSH",
											"source": 14,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 2162,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 2150,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 2131,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2241,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 2228,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1884,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2259,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2107,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2192,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2173,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2210,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2173,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6768,
											"end": 6780,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH data",
											"source": 11,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 6799,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6792,
											"end": 6876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6792,
											"end": 6876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7235,
											"end": 7247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7295,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7276,
											"end": 7295,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 7276,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7362,
											"end": 7372,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7386,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 7318,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7917,
											"end": 7939,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 8132,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 8124,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8280,
											"end": 8292,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 8260,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 9012,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9262,
											"end": 9272,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9254,
											"end": 9273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9291,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 9335,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 20,
											"value": "301"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "301"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 20,
											"value": "303"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "303"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "tag",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3627,
											"end": 3659,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 3662,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "tag",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "tag",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3753,
											"end": 3870,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3548,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "tag",
											"source": 20,
											"value": "46"
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3987,
											"end": 3994,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 4014,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "tag",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "tag",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 4204,
											"end": 4211,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4180,
											"end": 4202,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 4159,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "tag",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4149,
											"end": 4212,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4149,
											"end": 4212,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4105,
											"end": 4222,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "415"
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4312,
											"end": 4321,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4308,
											"end": 4330,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 4287,
											"end": 4340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "tag",
											"source": 20,
											"value": "415"
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4232,
											"end": 4350,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3883,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4363,
											"end": 4480,
											"name": "tag",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 4363,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4462,
											"end": 4474,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4486,
											"end": 4603,
											"name": "tag",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 4486,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4593,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4585,
											"end": 4597,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "tag",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4650,
											"end": 4656,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4703,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4685,
											"end": 4690,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4681,
											"end": 4695,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4677,
											"end": 4705,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4667,
											"end": 4705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4667,
											"end": 4705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4717,
											"end": 4897,
											"name": "tag",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 4717,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4765,
											"end": 4842,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4762,
											"end": 4763,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4843,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4862,
											"end": 4866,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4852,
											"end": 4867,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4886,
											"end": 4890,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4891,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "tag",
											"source": 20,
											"value": "308"
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 4986,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "tag",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 4986,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4974,
											"end": 5014,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5104,
											"end": 5114,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5101,
											"end": 5123,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 5062,
											"end": 5124,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 5127,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "tag",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "tag",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5167,
											"end": 5177,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5163,
											"end": 5165,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5178,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4946,
											"end": 5184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4903,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "tag",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 5251,
											"end": 5271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "tag",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5241,
											"end": 5271,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5241,
											"end": 5271,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5300,
											"end": 5306,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "308"
										},
										{
											"begin": 5280,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "tag",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5190,
											"end": 5319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "tag",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5386,
											"end": 5390,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5465,
											"end": 5495,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 5498,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "tag",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "tag",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 5536,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "tag",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5528,
											"end": 5565,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5528,
											"end": 5565,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5620,
											"end": 5624,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5610,
											"end": 5625,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5325,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "tag",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5736,
											"end": 5742,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5731,
											"end": 5734,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5726,
											"end": 5729,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5713,
											"end": 5743,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 5777,
											"end": 5778,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5763,
											"end": 5766,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5759,
											"end": 5775,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5752,
											"end": 5779,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5638,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "tag",
											"source": 20,
											"value": "312"
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 5910,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "tag",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 5910,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 5894,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "tag",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 5894,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5885,
											"end": 5959,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5885,
											"end": 5959,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5975,
											"end": 5980,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5968,
											"end": 5989,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6020,
											"end": 6024,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6044,
											"end": 6047,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6037,
											"end": 6062,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 6065,
											"end": 6144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "tag",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "tag",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 6034,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 6202,
											"end": 6208,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6197,
											"end": 6200,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6192,
											"end": 6195,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 6155,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "tag",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 6155,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5875,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "tag",
											"source": 20,
											"value": "313"
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6289,
											"end": 6294,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6323,
											"end": 6329,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6315,
											"end": 6342,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 6346,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "tag",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 6346,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "tag",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 6305,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6450,
											"end": 6470,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "441"
										},
										{
											"begin": 6562,
											"end": 6565,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6554,
											"end": 6560,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "312"
										},
										{
											"begin": 6488,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "tag",
											"source": 20,
											"value": "441"
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6479,
											"end": 6566,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6479,
											"end": 6566,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6295,
											"end": 6572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6234,
											"end": 6572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "tag",
											"source": 20,
											"value": "50"
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6655,
											"end": 6661,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6691,
											"end": 6698,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6687,
											"end": 6710,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6683,
											"end": 6715,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 6718,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "tag",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 6718,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "tag",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 6680,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6838,
											"end": 6839,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 6908,
											"end": 6915,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6899,
											"end": 6905,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6888,
											"end": 6897,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6884,
											"end": 6906,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 6863,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "tag",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6853,
											"end": 6916,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6853,
											"end": 6916,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6809,
											"end": 6926,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6993,
											"end": 6995,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6982,
											"end": 6991,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6978,
											"end": 6996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6965,
											"end": 6997,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7022,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7013,
											"end": 7043,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 7046,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "tag",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 7046,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "tag",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "313"
										},
										{
											"begin": 7151,
											"end": 7213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 7151,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7213,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7141,
											"end": 7213,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6936,
											"end": 7223,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 7230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "tag",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7320,
											"end": 7331,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7394,
											"end": 7398,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7385,
											"end": 7399,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7370,
											"end": 7399,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7370,
											"end": 7399,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7236,
											"end": 7405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7411,
											"end": 7645,
											"name": "tag",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 7411,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "PUSH",
											"source": 20,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7545,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7535,
											"end": 7549,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7528,
											"end": 7586,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7620,
											"end": 7637,
											"name": "PUSH",
											"source": 20,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 7615,
											"end": 7617,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7603,
											"end": 7618,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7596,
											"end": 7638,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7411,
											"end": 7645,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7411,
											"end": 7645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7651,
											"end": 8017,
											"name": "tag",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 7651,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7793,
											"end": 7796,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 7878,
											"end": 7880,
											"name": "PUSH",
											"source": 20,
											"value": "2F"
										},
										{
											"begin": 7873,
											"end": 7876,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7814,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 7814,
											"end": 7881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7814,
											"end": 7881,
											"name": "tag",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 7814,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7807,
											"end": 7881,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7807,
											"end": 7881,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 7979,
											"end": 7982,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 7890,
											"end": 7983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "tag",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8008,
											"end": 8010,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8003,
											"end": 8006,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7651,
											"end": 8017,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7651,
											"end": 8017,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7651,
											"end": 8017,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7651,
											"end": 8017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "tag",
											"source": 20,
											"value": "90"
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8189,
											"end": 8193,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8229,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8216,
											"end": 8225,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8212,
											"end": 8230,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8276,
											"end": 8285,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8270,
											"end": 8274,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8266,
											"end": 8286,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8260,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8247,
											"end": 8264,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8240,
											"end": 8287,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 8304,
											"end": 8435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "tag",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8296,
											"end": 8435,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8296,
											"end": 8435,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8023,
											"end": 8442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8448,
											"end": 8679,
											"name": "tag",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 8448,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8588,
											"end": 8622,
											"name": "PUSH",
											"source": 20,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 8584,
											"end": 8585,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8572,
											"end": 8586,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8565,
											"end": 8623,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8657,
											"end": 8671,
											"name": "PUSH",
											"source": 20,
											"value": "64656C656761746563616C6C0000000000000000000000000000000000000000"
										},
										{
											"begin": 8652,
											"end": 8654,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8644,
											"end": 8650,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8640,
											"end": 8655,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8633,
											"end": 8672,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8448,
											"end": 8679,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8448,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8685,
											"end": 9051,
											"name": "tag",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 8685,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8827,
											"end": 8830,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8848,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 20,
											"value": "2C"
										},
										{
											"begin": 8907,
											"end": 8910,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8848,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 8848,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8848,
											"end": 8915,
											"name": "tag",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 8848,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8841,
											"end": 8915,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8841,
											"end": 8915,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8924,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8924,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 8924,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8924,
											"end": 9017,
											"name": "tag",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 8924,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9040,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9045,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9026,
											"end": 9045,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9026,
											"end": 9045,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8685,
											"end": 9051,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8685,
											"end": 9051,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8685,
											"end": 9051,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8685,
											"end": 9051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9057,
											"end": 9476,
											"name": "tag",
											"source": 20,
											"value": "96"
										},
										{
											"begin": 9057,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9223,
											"end": 9227,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9263,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9250,
											"end": 9259,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9246,
											"end": 9264,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9238,
											"end": 9264,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9238,
											"end": 9264,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9310,
											"end": 9319,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9304,
											"end": 9308,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9300,
											"end": 9320,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9285,
											"end": 9294,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9281,
											"end": 9298,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9274,
											"end": 9321,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9338,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "461"
										},
										{
											"begin": 9464,
											"end": 9468,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9338,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 9338,
											"end": 9469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9338,
											"end": 9469,
											"name": "tag",
											"source": 20,
											"value": "461"
										},
										{
											"begin": 9338,
											"end": 9469,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9330,
											"end": 9469,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9330,
											"end": 9469,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9057,
											"end": 9476,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9057,
											"end": 9476,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9057,
											"end": 9476,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9057,
											"end": 9476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9482,
											"end": 9713,
											"name": "tag",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 9482,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9622,
											"end": 9656,
											"name": "PUSH",
											"source": 20,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 9618,
											"end": 9619,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9616,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9606,
											"end": 9620,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9599,
											"end": 9657,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9691,
											"end": 9705,
											"name": "PUSH",
											"source": 20,
											"value": "6163746976652070726F78790000000000000000000000000000000000000000"
										},
										{
											"begin": 9686,
											"end": 9688,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9674,
											"end": 9689,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9667,
											"end": 9706,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9482,
											"end": 9713,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9482,
											"end": 9713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "tag",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9861,
											"end": 9864,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 9946,
											"end": 9948,
											"name": "PUSH",
											"source": 20,
											"value": "2C"
										},
										{
											"begin": 9941,
											"end": 9944,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 9882,
											"end": 9949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "tag",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9875,
											"end": 9949,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9875,
											"end": 9949,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 9958,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "tag",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10076,
											"end": 10078,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10071,
											"end": 10074,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10067,
											"end": 10079,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9719,
											"end": 10085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "tag",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10257,
											"end": 10261,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10297,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10284,
											"end": 10293,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10272,
											"end": 10298,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10272,
											"end": 10298,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10338,
											"end": 10342,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10330,
											"end": 10331,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10328,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10315,
											"end": 10332,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10308,
											"end": 10355,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 10498,
											"end": 10502,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 10372,
											"end": 10503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "tag",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10364,
											"end": 10503,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10364,
											"end": 10503,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10091,
											"end": 10510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10516,
											"end": 10749,
											"name": "tag",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 10516,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10656,
											"end": 10690,
											"name": "PUSH",
											"source": 20,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10644,
											"end": 10650,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10633,
											"end": 10691,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10725,
											"end": 10741,
											"name": "PUSH",
											"source": 20,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 10720,
											"end": 10722,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10712,
											"end": 10718,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10708,
											"end": 10723,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10701,
											"end": 10742,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10516,
											"end": 10749,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10516,
											"end": 10749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10755,
											"end": 11121,
											"name": "tag",
											"source": 20,
											"value": "322"
										},
										{
											"begin": 10755,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10897,
											"end": 10900,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "470"
										},
										{
											"begin": 10982,
											"end": 10984,
											"name": "PUSH",
											"source": 20,
											"value": "2E"
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10918,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 10918,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10918,
											"end": 10985,
											"name": "tag",
											"source": 20,
											"value": "470"
										},
										{
											"begin": 10918,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10911,
											"end": 10985,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10911,
											"end": 10985,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10994,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 11083,
											"end": 11086,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10994,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 10994,
											"end": 11087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10994,
											"end": 11087,
											"name": "tag",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 10994,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11112,
											"end": 11114,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11107,
											"end": 11110,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11103,
											"end": 11115,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11096,
											"end": 11115,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11096,
											"end": 11115,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10755,
											"end": 11121,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10755,
											"end": 11121,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10755,
											"end": 11121,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10755,
											"end": 11121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11546,
											"name": "tag",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 11127,
											"end": 11546,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11293,
											"end": 11297,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11331,
											"end": 11333,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11320,
											"end": 11329,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11308,
											"end": 11334,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11308,
											"end": 11334,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11380,
											"end": 11389,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11374,
											"end": 11378,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11370,
											"end": 11390,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 11366,
											"end": 11367,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11351,
											"end": 11368,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11344,
											"end": 11391,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11408,
											"end": 11539,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "473"
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11408,
											"end": 11539,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "322"
										},
										{
											"begin": 11408,
											"end": 11539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11408,
											"end": 11539,
											"name": "tag",
											"source": 20,
											"value": "473"
										},
										{
											"begin": 11408,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11400,
											"end": 11539,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11400,
											"end": 11539,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11546,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11546,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11546,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11127,
											"end": 11546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11552,
											"end": 11637,
											"name": "tag",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 11552,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11597,
											"end": 11604,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11631,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11615,
											"end": 11631,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11615,
											"end": 11631,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11552,
											"end": 11637,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11552,
											"end": 11637,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11552,
											"end": 11637,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11552,
											"end": 11637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11643,
											"end": 11729,
											"name": "tag",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 11643,
											"end": 11729,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11678,
											"end": 11685,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11718,
											"end": 11722,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 11711,
											"end": 11716,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11707,
											"end": 11723,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11696,
											"end": 11723,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11696,
											"end": 11723,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11643,
											"end": 11729,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11643,
											"end": 11729,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11643,
											"end": 11729,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11643,
											"end": 11729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11735,
											"end": 11795,
											"name": "tag",
											"source": 20,
											"value": "325"
										},
										{
											"begin": 11735,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11763,
											"end": 11766,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11784,
											"end": 11789,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11777,
											"end": 11789,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11777,
											"end": 11789,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11735,
											"end": 11795,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11735,
											"end": 11795,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11735,
											"end": 11795,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11735,
											"end": 11795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11801,
											"end": 11955,
											"name": "tag",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 11801,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11857,
											"end": 11866,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 11906,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 11915,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11915,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 11915,
											"end": 11947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11915,
											"end": 11947,
											"name": "tag",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 11915,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11906,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "325"
										},
										{
											"begin": 11906,
											"end": 11948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11906,
											"end": 11948,
											"name": "tag",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 11906,
											"end": 11948,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11890,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 11890,
											"end": 11949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11890,
											"end": 11949,
											"name": "tag",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 11890,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11877,
											"end": 11949,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11877,
											"end": 11949,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11801,
											"end": 11955,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11801,
											"end": 11955,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11801,
											"end": 11955,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11801,
											"end": 11955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11961,
											"end": 12104,
											"name": "tag",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 11961,
											"end": 12104,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12054,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 12091,
											"end": 12096,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12054,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 12054,
											"end": 12097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12054,
											"end": 12097,
											"name": "tag",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 12054,
											"end": 12097,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12049,
											"end": 12052,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12042,
											"end": 12098,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11961,
											"end": 12104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11961,
											"end": 12104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11961,
											"end": 12104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12110,
											"end": 12344,
											"name": "tag",
											"source": 20,
											"value": "126"
										},
										{
											"begin": 12110,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12209,
											"end": 12213,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12249,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12236,
											"end": 12245,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12224,
											"end": 12250,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12224,
											"end": 12250,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12260,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 12334,
											"end": 12335,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12323,
											"end": 12332,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12319,
											"end": 12336,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12310,
											"end": 12316,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12260,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 12260,
											"end": 12337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12260,
											"end": 12337,
											"name": "tag",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 12260,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12110,
											"end": 12344,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12110,
											"end": 12344,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12110,
											"end": 12344,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12110,
											"end": 12344,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12110,
											"end": 12344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12350,
											"end": 12468,
											"name": "tag",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 12350,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 12455,
											"end": 12460,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 12437,
											"end": 12461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "tag",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12432,
											"end": 12435,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12425,
											"end": 12462,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12350,
											"end": 12468,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12350,
											"end": 12468,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12350,
											"end": 12468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12474,
											"end": 12696,
											"name": "tag",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 12474,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12567,
											"end": 12571,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12605,
											"end": 12607,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12594,
											"end": 12603,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12590,
											"end": 12608,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12582,
											"end": 12608,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12582,
											"end": 12608,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12618,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 12686,
											"end": 12687,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12675,
											"end": 12684,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12671,
											"end": 12688,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12662,
											"end": 12668,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12618,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 12618,
											"end": 12689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12618,
											"end": 12689,
											"name": "tag",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 12618,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12474,
											"end": 12696,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12474,
											"end": 12696,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12474,
											"end": 12696,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12474,
											"end": 12696,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12474,
											"end": 12696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12702,
											"end": 12779,
											"name": "tag",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 12702,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12739,
											"end": 12746,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12773,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12757,
											"end": 12773,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12757,
											"end": 12773,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12702,
											"end": 12779,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12702,
											"end": 12779,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12702,
											"end": 12779,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12702,
											"end": 12779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12907,
											"name": "tag",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 12785,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12858,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "491"
										},
										{
											"begin": 12876,
											"end": 12881,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12858,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 12858,
											"end": 12882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12858,
											"end": 12882,
											"name": "tag",
											"source": 20,
											"value": "491"
										},
										{
											"begin": 12858,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12851,
											"end": 12856,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 12838,
											"end": 12901,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "492"
										},
										{
											"begin": 12838,
											"end": 12901,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12897,
											"end": 12898,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12894,
											"end": 12895,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12887,
											"end": 12899,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 12838,
											"end": 12901,
											"name": "tag",
											"source": 20,
											"value": "492"
										},
										{
											"begin": 12838,
											"end": 12901,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12907,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12913,
											"end": 13056,
											"name": "tag",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 12913,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12970,
											"end": 12975,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13001,
											"end": 13007,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12995,
											"end": 13008,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 12986,
											"end": 13008,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12986,
											"end": 13008,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13017,
											"end": 13050,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 13044,
											"end": 13049,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13017,
											"end": 13050,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 13017,
											"end": 13050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13017,
											"end": 13050,
											"name": "tag",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 13017,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12913,
											"end": 13056,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12913,
											"end": 13056,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12913,
											"end": 13056,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12913,
											"end": 13056,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12913,
											"end": 13056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13062,
											"end": 13413,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 13062,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13138,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13181,
											"end": 13183,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13169,
											"end": 13178,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13160,
											"end": 13167,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13156,
											"end": 13179,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 13152,
											"end": 13184,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 13149,
											"end": 13268,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 13149,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "496"
										},
										{
											"begin": 13149,
											"end": 13268,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "497"
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 13187,
											"end": 13266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "tag",
											"source": 20,
											"value": "497"
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13149,
											"end": 13268,
											"name": "tag",
											"source": 20,
											"value": "496"
										},
										{
											"begin": 13149,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13307,
											"end": 13308,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "498"
										},
										{
											"begin": 13388,
											"end": 13395,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13379,
											"end": 13385,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13368,
											"end": 13377,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13364,
											"end": 13386,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13332,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 13332,
											"end": 13396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13332,
											"end": 13396,
											"name": "tag",
											"source": 20,
											"value": "498"
										},
										{
											"begin": 13332,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13322,
											"end": 13396,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13322,
											"end": 13396,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13278,
											"end": 13406,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13062,
											"end": 13413,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13062,
											"end": 13413,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13062,
											"end": 13413,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13062,
											"end": 13413,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13062,
											"end": 13413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13419,
											"end": 13537,
											"name": "tag",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 13419,
											"end": 13537,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13506,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "500"
										},
										{
											"begin": 13524,
											"end": 13529,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13506,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 13506,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13506,
											"end": 13530,
											"name": "tag",
											"source": 20,
											"value": "500"
										},
										{
											"begin": 13506,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13501,
											"end": 13504,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13494,
											"end": 13531,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13419,
											"end": 13537,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13419,
											"end": 13537,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13419,
											"end": 13537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13543,
											"end": 13875,
											"name": "tag",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 13543,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13664,
											"end": 13668,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13702,
											"end": 13704,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13691,
											"end": 13700,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13679,
											"end": 13705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13679,
											"end": 13705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13715,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "502"
										},
										{
											"begin": 13783,
											"end": 13784,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13772,
											"end": 13781,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13768,
											"end": 13785,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13759,
											"end": 13765,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13715,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 13715,
											"end": 13786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13715,
											"end": 13786,
											"name": "tag",
											"source": 20,
											"value": "502"
										},
										{
											"begin": 13715,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13796,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 13864,
											"end": 13866,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13853,
											"end": 13862,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13849,
											"end": 13867,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13840,
											"end": 13846,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13796,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 13796,
											"end": 13868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13796,
											"end": 13868,
											"name": "tag",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 13796,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13543,
											"end": 13875,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 13543,
											"end": 13875,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13543,
											"end": 13875,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13543,
											"end": 13875,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13543,
											"end": 13875,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13543,
											"end": 13875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13881,
											"end": 13997,
											"name": "tag",
											"source": 20,
											"value": "333"
										},
										{
											"begin": 13881,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13951,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "505"
										},
										{
											"begin": 13966,
											"end": 13971,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13951,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 13951,
											"end": 13972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13951,
											"end": 13972,
											"name": "tag",
											"source": 20,
											"value": "505"
										},
										{
											"begin": 13951,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13944,
											"end": 13949,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13941,
											"end": 13973,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 13931,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 13931,
											"end": 13991,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 13987,
											"end": 13988,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 13977,
											"end": 13989,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 13931,
											"end": 13991,
											"name": "tag",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 13931,
											"end": 13991,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13881,
											"end": 13997,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13881,
											"end": 13997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "tag",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14057,
											"end": 14062,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14088,
											"end": 14094,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14082,
											"end": 14095,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 14073,
											"end": 14095,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14073,
											"end": 14095,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14104,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 14128,
											"end": 14133,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14104,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "333"
										},
										{
											"begin": 14104,
											"end": 14134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14104,
											"end": 14134,
											"name": "tag",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 14104,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14003,
											"end": 14140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14146,
											"end": 14491,
											"name": "tag",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 14146,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14213,
											"end": 14219,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14262,
											"end": 14264,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14250,
											"end": 14259,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14241,
											"end": 14248,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14237,
											"end": 14260,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 14233,
											"end": 14265,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 14230,
											"end": 14349,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 14230,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "510"
										},
										{
											"begin": 14230,
											"end": 14349,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14268,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "511"
										},
										{
											"begin": 14268,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 14268,
											"end": 14347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14268,
											"end": 14347,
											"name": "tag",
											"source": 20,
											"value": "511"
										},
										{
											"begin": 14268,
											"end": 14347,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14230,
											"end": 14349,
											"name": "tag",
											"source": 20,
											"value": "510"
										},
										{
											"begin": 14230,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14388,
											"end": 14389,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "512"
										},
										{
											"begin": 14466,
											"end": 14473,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14457,
											"end": 14463,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14446,
											"end": 14455,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 14442,
											"end": 14464,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14413,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 14413,
											"end": 14474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14413,
											"end": 14474,
											"name": "tag",
											"source": 20,
											"value": "512"
										},
										{
											"begin": 14413,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14403,
											"end": 14474,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14403,
											"end": 14474,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14359,
											"end": 14484,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14146,
											"end": 14491,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14146,
											"end": 14491,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14146,
											"end": 14491,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14146,
											"end": 14491,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14146,
											"end": 14491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14497,
											"end": 14740,
											"name": "tag",
											"source": 20,
											"value": "335"
										},
										{
											"begin": 14497,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14637,
											"end": 14671,
											"name": "PUSH",
											"source": 20,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 14633,
											"end": 14634,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14625,
											"end": 14631,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14621,
											"end": 14635,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14614,
											"end": 14672,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14706,
											"end": 14732,
											"name": "PUSH",
											"source": 20,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 14701,
											"end": 14703,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14693,
											"end": 14699,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14689,
											"end": 14704,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14682,
											"end": 14733,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14497,
											"end": 14740,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14497,
											"end": 14740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14746,
											"end": 15112,
											"name": "tag",
											"source": 20,
											"value": "336"
										},
										{
											"begin": 14746,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14888,
											"end": 14891,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 14973,
											"end": 14975,
											"name": "PUSH",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 14968,
											"end": 14971,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14909,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 14909,
											"end": 14976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14909,
											"end": 14976,
											"name": "tag",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 14909,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14902,
											"end": 14976,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14902,
											"end": 14976,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14985,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 15074,
											"end": 15077,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14985,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "335"
										},
										{
											"begin": 14985,
											"end": 15078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14985,
											"end": 15078,
											"name": "tag",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 14985,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15103,
											"end": 15105,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15098,
											"end": 15101,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15094,
											"end": 15106,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15087,
											"end": 15106,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15087,
											"end": 15106,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14746,
											"end": 15112,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14746,
											"end": 15112,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14746,
											"end": 15112,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14746,
											"end": 15112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15118,
											"end": 15537,
											"name": "tag",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 15118,
											"end": 15537,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15284,
											"end": 15288,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15322,
											"end": 15324,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15311,
											"end": 15320,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15307,
											"end": 15325,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15299,
											"end": 15325,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15299,
											"end": 15325,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15371,
											"end": 15380,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15365,
											"end": 15369,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15361,
											"end": 15381,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15357,
											"end": 15358,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15355,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15342,
											"end": 15359,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15335,
											"end": 15382,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15399,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "518"
										},
										{
											"begin": 15525,
											"end": 15529,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15399,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "336"
										},
										{
											"begin": 15399,
											"end": 15530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15399,
											"end": 15530,
											"name": "tag",
											"source": 20,
											"value": "518"
										},
										{
											"begin": 15399,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15391,
											"end": 15530,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15391,
											"end": 15530,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15118,
											"end": 15537,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15118,
											"end": 15537,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15118,
											"end": 15537,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15118,
											"end": 15537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15543,
											"end": 15686,
											"name": "tag",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 15543,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15600,
											"end": 15605,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15631,
											"end": 15637,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15625,
											"end": 15638,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 15616,
											"end": 15638,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15616,
											"end": 15638,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15647,
											"end": 15680,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 15674,
											"end": 15679,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15647,
											"end": 15680,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 15647,
											"end": 15680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15647,
											"end": 15680,
											"name": "tag",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 15647,
											"end": 15680,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15543,
											"end": 15686,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 15543,
											"end": 15686,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15543,
											"end": 15686,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15543,
											"end": 15686,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15543,
											"end": 15686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15692,
											"end": 16043,
											"name": "tag",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 15692,
											"end": 16043,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15762,
											"end": 15768,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15811,
											"end": 15813,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15799,
											"end": 15808,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15790,
											"end": 15797,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15786,
											"end": 15809,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15782,
											"end": 15814,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15898,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "522"
										},
										{
											"begin": 15779,
											"end": 15898,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15817,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 15817,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 15817,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15817,
											"end": 15896,
											"name": "tag",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 15817,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15898,
											"name": "tag",
											"source": 20,
											"value": "522"
										},
										{
											"begin": 15779,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15937,
											"end": 15938,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15962,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "524"
										},
										{
											"begin": 16018,
											"end": 16025,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 16009,
											"end": 16015,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15998,
											"end": 16007,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 15994,
											"end": 16016,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15962,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 15962,
											"end": 16026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15962,
											"end": 16026,
											"name": "tag",
											"source": 20,
											"value": "524"
										},
										{
											"begin": 15962,
											"end": 16026,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15952,
											"end": 16026,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15952,
											"end": 16026,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15908,
											"end": 16036,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15692,
											"end": 16043,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 15692,
											"end": 16043,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15692,
											"end": 16043,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15692,
											"end": 16043,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15692,
											"end": 16043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16049,
											"end": 16282,
											"name": "tag",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 16049,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16189,
											"end": 16223,
											"name": "PUSH",
											"source": 20,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 16185,
											"end": 16186,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16177,
											"end": 16183,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16173,
											"end": 16187,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16166,
											"end": 16224,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16258,
											"end": 16274,
											"name": "PUSH",
											"source": 20,
											"value": "6F6E206973206E6F742055555053000000000000000000000000000000000000"
										},
										{
											"begin": 16253,
											"end": 16255,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16245,
											"end": 16251,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16241,
											"end": 16256,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16234,
											"end": 16275,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16049,
											"end": 16282,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16049,
											"end": 16282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "tag",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16430,
											"end": 16433,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "527"
										},
										{
											"begin": 16515,
											"end": 16517,
											"name": "PUSH",
											"source": 20,
											"value": "2E"
										},
										{
											"begin": 16510,
											"end": 16513,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 16451,
											"end": 16518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "tag",
											"source": 20,
											"value": "527"
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16444,
											"end": 16518,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16444,
											"end": 16518,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 16616,
											"end": 16619,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 16527,
											"end": 16620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "tag",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16645,
											"end": 16647,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 16640,
											"end": 16643,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16636,
											"end": 16648,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16629,
											"end": 16648,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16629,
											"end": 16648,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16288,
											"end": 16654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "tag",
											"source": 20,
											"value": "197"
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16826,
											"end": 16830,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16864,
											"end": 16866,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16853,
											"end": 16862,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16841,
											"end": 16867,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16841,
											"end": 16867,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16913,
											"end": 16922,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 16899,
											"end": 16900,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16888,
											"end": 16897,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16884,
											"end": 16901,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16877,
											"end": 16924,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "530"
										},
										{
											"begin": 17067,
											"end": 17071,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 16941,
											"end": 17072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "tag",
											"source": 20,
											"value": "530"
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16933,
											"end": 17072,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16933,
											"end": 17072,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16660,
											"end": 17079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17085,
											"end": 17313,
											"name": "tag",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 17085,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17225,
											"end": 17259,
											"name": "PUSH",
											"source": 20,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 17221,
											"end": 17222,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17213,
											"end": 17219,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17209,
											"end": 17223,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17202,
											"end": 17260,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17294,
											"end": 17305,
											"name": "PUSH",
											"source": 20,
											"value": "6961626C65555549440000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17289,
											"end": 17291,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17281,
											"end": 17287,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17277,
											"end": 17292,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17270,
											"end": 17306,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17085,
											"end": 17313,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17085,
											"end": 17313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17685,
											"name": "tag",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 17319,
											"end": 17685,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17461,
											"end": 17464,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17482,
											"end": 17549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "533"
										},
										{
											"begin": 17546,
											"end": 17548,
											"name": "PUSH",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 17541,
											"end": 17544,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17482,
											"end": 17549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 17482,
											"end": 17549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17482,
											"end": 17549,
											"name": "tag",
											"source": 20,
											"value": "533"
										},
										{
											"begin": 17482,
											"end": 17549,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17475,
											"end": 17549,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17475,
											"end": 17549,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17558,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "534"
										},
										{
											"begin": 17647,
											"end": 17650,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17558,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 17558,
											"end": 17651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17558,
											"end": 17651,
											"name": "tag",
											"source": 20,
											"value": "534"
										},
										{
											"begin": 17558,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17676,
											"end": 17678,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 17671,
											"end": 17674,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17667,
											"end": 17679,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17660,
											"end": 17679,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17660,
											"end": 17679,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17685,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17685,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17685,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17691,
											"end": 18110,
											"name": "tag",
											"source": 20,
											"value": "201"
										},
										{
											"begin": 17691,
											"end": 18110,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17857,
											"end": 17861,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17895,
											"end": 17897,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17884,
											"end": 17893,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17880,
											"end": 17898,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17872,
											"end": 17898,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17872,
											"end": 17898,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17944,
											"end": 17953,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17938,
											"end": 17942,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17934,
											"end": 17954,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 17930,
											"end": 17931,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17919,
											"end": 17928,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17915,
											"end": 17932,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17908,
											"end": 17955,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17972,
											"end": 18103,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "536"
										},
										{
											"begin": 18098,
											"end": 18102,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17972,
											"end": 18103,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 17972,
											"end": 18103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17972,
											"end": 18103,
											"name": "tag",
											"source": 20,
											"value": "536"
										},
										{
											"begin": 17972,
											"end": 18103,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17964,
											"end": 18103,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17964,
											"end": 18103,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17691,
											"end": 18110,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17691,
											"end": 18110,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17691,
											"end": 18110,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17691,
											"end": 18110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18116,
											"end": 18264,
											"name": "tag",
											"source": 20,
											"value": "342"
										},
										{
											"begin": 18116,
											"end": 18264,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18218,
											"end": 18229,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18255,
											"end": 18258,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18240,
											"end": 18258,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18240,
											"end": 18258,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18116,
											"end": 18264,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18116,
											"end": 18264,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18116,
											"end": 18264,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18116,
											"end": 18264,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18116,
											"end": 18264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18270,
											"end": 18443,
											"name": "tag",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 18270,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18410,
											"end": 18435,
											"name": "PUSH",
											"source": 20,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 18406,
											"end": 18407,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18398,
											"end": 18404,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18394,
											"end": 18408,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18387,
											"end": 18436,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18270,
											"end": 18443,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18270,
											"end": 18443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18449,
											"end": 18851,
											"name": "tag",
											"source": 20,
											"value": "344"
										},
										{
											"begin": 18449,
											"end": 18851,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18609,
											"end": 18612,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18630,
											"end": 18715,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "540"
										},
										{
											"begin": 18712,
											"end": 18714,
											"name": "PUSH",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 18707,
											"end": 18710,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18630,
											"end": 18715,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "342"
										},
										{
											"begin": 18630,
											"end": 18715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18630,
											"end": 18715,
											"name": "tag",
											"source": 20,
											"value": "540"
										},
										{
											"begin": 18630,
											"end": 18715,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18623,
											"end": 18715,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18623,
											"end": 18715,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18724,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "541"
										},
										{
											"begin": 18813,
											"end": 18816,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18724,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 18724,
											"end": 18817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18724,
											"end": 18817,
											"name": "tag",
											"source": 20,
											"value": "541"
										},
										{
											"begin": 18724,
											"end": 18817,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18842,
											"end": 18844,
											"name": "PUSH",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 18837,
											"end": 18840,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18833,
											"end": 18845,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18826,
											"end": 18845,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18826,
											"end": 18845,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18449,
											"end": 18851,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18449,
											"end": 18851,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18449,
											"end": 18851,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18449,
											"end": 18851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18857,
											"end": 18956,
											"name": "tag",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 18857,
											"end": 18956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18909,
											"end": 18915,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18943,
											"end": 18948,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18937,
											"end": 18949,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 18927,
											"end": 18949,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18927,
											"end": 18949,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18857,
											"end": 18956,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18857,
											"end": 18956,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18857,
											"end": 18956,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18857,
											"end": 18956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18962,
											"end": 19101,
											"name": "tag",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 18962,
											"end": 19101,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19051,
											"end": 19057,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19046,
											"end": 19049,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19041,
											"end": 19044,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19035,
											"end": 19058,
											"name": "MCOPY",
											"source": 20
										},
										{
											"begin": 19092,
											"end": 19093,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19083,
											"end": 19089,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19078,
											"end": 19081,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19074,
											"end": 19090,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19067,
											"end": 19094,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18962,
											"end": 19101,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18962,
											"end": 19101,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18962,
											"end": 19101,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18962,
											"end": 19101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19107,
											"end": 19497,
											"name": "tag",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 19107,
											"end": 19497,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19213,
											"end": 19216,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 19274,
											"end": 19279,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 19241,
											"end": 19280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "tag",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19296,
											"end": 19385,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "546"
										},
										{
											"begin": 19378,
											"end": 19384,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19373,
											"end": 19376,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19296,
											"end": 19385,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "342"
										},
										{
											"begin": 19296,
											"end": 19385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19296,
											"end": 19385,
											"name": "tag",
											"source": 20,
											"value": "546"
										},
										{
											"begin": 19296,
											"end": 19385,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19289,
											"end": 19385,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 19289,
											"end": 19385,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19394,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "547"
										},
										{
											"begin": 19452,
											"end": 19458,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19447,
											"end": 19450,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19440,
											"end": 19444,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 19433,
											"end": 19438,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 19429,
											"end": 19445,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19394,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 19394,
											"end": 19459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19394,
											"end": 19459,
											"name": "tag",
											"source": 20,
											"value": "547"
										},
										{
											"begin": 19394,
											"end": 19459,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19484,
											"end": 19490,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 19479,
											"end": 19482,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19475,
											"end": 19491,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19468,
											"end": 19491,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19468,
											"end": 19491,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19217,
											"end": 19497,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19107,
											"end": 19497,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19107,
											"end": 19497,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19107,
											"end": 19497,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19107,
											"end": 19497,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19107,
											"end": 19497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19503,
											"end": 19670,
											"name": "tag",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 19503,
											"end": 19670,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19643,
											"end": 19662,
											"name": "PUSH",
											"source": 20,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 19639,
											"end": 19640,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19631,
											"end": 19637,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19627,
											"end": 19641,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19620,
											"end": 19663,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 19503,
											"end": 19670,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19503,
											"end": 19670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19676,
											"end": 20078,
											"name": "tag",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 19676,
											"end": 20078,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19836,
											"end": 19839,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19857,
											"end": 19942,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "550"
										},
										{
											"begin": 19939,
											"end": 19941,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 19934,
											"end": 19937,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19857,
											"end": 19942,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "342"
										},
										{
											"begin": 19857,
											"end": 19942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19857,
											"end": 19942,
											"name": "tag",
											"source": 20,
											"value": "550"
										},
										{
											"begin": 19857,
											"end": 19942,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19850,
											"end": 19942,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19850,
											"end": 19942,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19951,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "551"
										},
										{
											"begin": 20040,
											"end": 20043,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19951,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 19951,
											"end": 20044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19951,
											"end": 20044,
											"name": "tag",
											"source": 20,
											"value": "551"
										},
										{
											"begin": 19951,
											"end": 20044,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20069,
											"end": 20071,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 20064,
											"end": 20067,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20060,
											"end": 20072,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20053,
											"end": 20072,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20053,
											"end": 20072,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19676,
											"end": 20078,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19676,
											"end": 20078,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19676,
											"end": 20078,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19676,
											"end": 20078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20084,
											"end": 21051,
											"name": "tag",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 20084,
											"end": 21051,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20466,
											"end": 20469,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20488,
											"end": 20636,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "553"
										},
										{
											"begin": 20632,
											"end": 20635,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20488,
											"end": 20636,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "344"
										},
										{
											"begin": 20488,
											"end": 20636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20488,
											"end": 20636,
											"name": "tag",
											"source": 20,
											"value": "553"
										},
										{
											"begin": 20488,
											"end": 20636,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20481,
											"end": 20636,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20481,
											"end": 20636,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20653,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 20744,
											"end": 20747,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20735,
											"end": 20741,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20653,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 20653,
											"end": 20748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20653,
											"end": 20748,
											"name": "tag",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 20653,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20646,
											"end": 20748,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20646,
											"end": 20748,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20765,
											"end": 20913,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "555"
										},
										{
											"begin": 20909,
											"end": 20912,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20765,
											"end": 20913,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 20765,
											"end": 20913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20765,
											"end": 20913,
											"name": "tag",
											"source": 20,
											"value": "555"
										},
										{
											"begin": 20765,
											"end": 20913,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20758,
											"end": 20913,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20758,
											"end": 20913,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20930,
											"end": 21025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 21021,
											"end": 21024,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21012,
											"end": 21018,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 20930,
											"end": 21025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 20930,
											"end": 21025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20930,
											"end": 21025,
											"name": "tag",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 20930,
											"end": 21025,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20923,
											"end": 21025,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 20923,
											"end": 21025,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21042,
											"end": 21045,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21035,
											"end": 21045,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21035,
											"end": 21045,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20084,
											"end": 21051,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 20084,
											"end": 21051,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 20084,
											"end": 21051,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20084,
											"end": 21051,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20084,
											"end": 21051,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20084,
											"end": 21051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21057,
											"end": 21434,
											"name": "tag",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 21057,
											"end": 21434,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21145,
											"end": 21148,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21212,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "558"
										},
										{
											"begin": 21206,
											"end": 21211,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21173,
											"end": 21212,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 21173,
											"end": 21212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21173,
											"end": 21212,
											"name": "tag",
											"source": 20,
											"value": "558"
										},
										{
											"begin": 21173,
											"end": 21212,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21228,
											"end": 21299,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 21292,
											"end": 21298,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21287,
											"end": 21290,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 21228,
											"end": 21299,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 21228,
											"end": 21299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21228,
											"end": 21299,
											"name": "tag",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 21228,
											"end": 21299,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21221,
											"end": 21299,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 21221,
											"end": 21299,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21308,
											"end": 21373,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 21366,
											"end": 21372,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21361,
											"end": 21364,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 21354,
											"end": 21358,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 21347,
											"end": 21352,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 21343,
											"end": 21359,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21308,
											"end": 21373,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 21308,
											"end": 21373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21308,
											"end": 21373,
											"name": "tag",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 21308,
											"end": 21373,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21398,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "561"
										},
										{
											"begin": 21420,
											"end": 21426,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21398,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 21398,
											"end": 21427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21398,
											"end": 21427,
											"name": "tag",
											"source": 20,
											"value": "561"
										},
										{
											"begin": 21398,
											"end": 21427,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21393,
											"end": 21396,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 21389,
											"end": 21428,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21382,
											"end": 21428,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21382,
											"end": 21428,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21149,
											"end": 21434,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21057,
											"end": 21434,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21057,
											"end": 21434,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21057,
											"end": 21434,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21057,
											"end": 21434,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21057,
											"end": 21434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21440,
											"end": 21753,
											"name": "tag",
											"source": 20,
											"value": "217"
										},
										{
											"begin": 21440,
											"end": 21753,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21553,
											"end": 21557,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21591,
											"end": 21593,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 21580,
											"end": 21589,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21576,
											"end": 21594,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21568,
											"end": 21594,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21568,
											"end": 21594,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21640,
											"end": 21649,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21634,
											"end": 21638,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21630,
											"end": 21650,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 21626,
											"end": 21627,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21615,
											"end": 21624,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 21611,
											"end": 21628,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21604,
											"end": 21651,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 21668,
											"end": 21746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "563"
										},
										{
											"begin": 21741,
											"end": 21745,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21732,
											"end": 21738,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 21668,
											"end": 21746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 21668,
											"end": 21746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21668,
											"end": 21746,
											"name": "tag",
											"source": 20,
											"value": "563"
										},
										{
											"begin": 21668,
											"end": 21746,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21660,
											"end": 21746,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21660,
											"end": 21746,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21440,
											"end": 21753,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21440,
											"end": 21753,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21440,
											"end": 21753,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21440,
											"end": 21753,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21440,
											"end": 21753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21759,
											"end": 21991,
											"name": "tag",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 21759,
											"end": 21991,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21899,
											"end": 21933,
											"name": "PUSH",
											"source": 20,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 21895,
											"end": 21896,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21887,
											"end": 21893,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21883,
											"end": 21897,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21876,
											"end": 21934,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 21968,
											"end": 21983,
											"name": "PUSH",
											"source": 20,
											"value": "6F74206120636F6E747261637400000000000000000000000000000000000000"
										},
										{
											"begin": 21963,
											"end": 21965,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 21955,
											"end": 21961,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21951,
											"end": 21966,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21944,
											"end": 21984,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 21759,
											"end": 21991,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21759,
											"end": 21991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21997,
											"end": 22363,
											"name": "tag",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 21997,
											"end": 22363,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22139,
											"end": 22142,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22160,
											"end": 22227,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 22224,
											"end": 22226,
											"name": "PUSH",
											"source": 20,
											"value": "2D"
										},
										{
											"begin": 22219,
											"end": 22222,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 22160,
											"end": 22227,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 22160,
											"end": 22227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22160,
											"end": 22227,
											"name": "tag",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 22160,
											"end": 22227,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22153,
											"end": 22227,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22153,
											"end": 22227,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22236,
											"end": 22329,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "567"
										},
										{
											"begin": 22325,
											"end": 22328,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22236,
											"end": 22329,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 22236,
											"end": 22329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22236,
											"end": 22329,
											"name": "tag",
											"source": 20,
											"value": "567"
										},
										{
											"begin": 22236,
											"end": 22329,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22354,
											"end": 22356,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 22349,
											"end": 22352,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22338,
											"end": 22357,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22338,
											"end": 22357,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21997,
											"end": 22363,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21997,
											"end": 22363,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21997,
											"end": 22363,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21997,
											"end": 22363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22369,
											"end": 22788,
											"name": "tag",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 22369,
											"end": 22788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22535,
											"end": 22539,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22573,
											"end": 22575,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 22562,
											"end": 22571,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22558,
											"end": 22576,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22550,
											"end": 22576,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22550,
											"end": 22576,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22622,
											"end": 22631,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 22616,
											"end": 22620,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 22612,
											"end": 22632,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 22608,
											"end": 22609,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22597,
											"end": 22606,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 22593,
											"end": 22610,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22586,
											"end": 22633,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 22650,
											"end": 22781,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 22776,
											"end": 22780,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 22650,
											"end": 22781,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 22650,
											"end": 22781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22650,
											"end": 22781,
											"name": "tag",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 22650,
											"end": 22781,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22642,
											"end": 22781,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22642,
											"end": 22781,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22369,
											"end": 22788,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22369,
											"end": 22788,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22369,
											"end": 22788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22369,
											"end": 22788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22794,
											"end": 22974,
											"name": "tag",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 22794,
											"end": 22974,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22842,
											"end": 22919,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22839,
											"end": 22840,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22832,
											"end": 22920,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 22939,
											"end": 22943,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 22936,
											"end": 22937,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 22929,
											"end": 22944,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 22963,
											"end": 22967,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 22960,
											"end": 22961,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22953,
											"end": 22968,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 22980,
											"end": 23390,
											"name": "tag",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 22980,
											"end": 23390,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23020,
											"end": 23027,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23043,
											"end": 23063,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "572"
										},
										{
											"begin": 23061,
											"end": 23062,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23043,
											"end": 23063,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 23043,
											"end": 23063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23043,
											"end": 23063,
											"name": "tag",
											"source": 20,
											"value": "572"
										},
										{
											"begin": 23043,
											"end": 23063,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23038,
											"end": 23063,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23038,
											"end": 23063,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23077,
											"end": 23097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "573"
										},
										{
											"begin": 23095,
											"end": 23096,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23077,
											"end": 23097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 23077,
											"end": 23097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23077,
											"end": 23097,
											"name": "tag",
											"source": 20,
											"value": "573"
										},
										{
											"begin": 23077,
											"end": 23097,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23072,
											"end": 23097,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 23072,
											"end": 23097,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23132,
											"end": 23133,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23129,
											"end": 23130,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23125,
											"end": 23134,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 23154,
											"end": 23184,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "574"
										},
										{
											"begin": 23172,
											"end": 23183,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23154,
											"end": 23184,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 23154,
											"end": 23184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23154,
											"end": 23184,
											"name": "tag",
											"source": 20,
											"value": "574"
										},
										{
											"begin": 23154,
											"end": 23184,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23143,
											"end": 23184,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23143,
											"end": 23184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23333,
											"end": 23334,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23324,
											"end": 23331,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23320,
											"end": 23335,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 23317,
											"end": 23318,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 23314,
											"end": 23336,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 23294,
											"end": 23295,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23287,
											"end": 23296,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 23267,
											"end": 23350,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 23244,
											"end": 23383,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "575"
										},
										{
											"begin": 23244,
											"end": 23383,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 23363,
											"end": 23381,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 23363,
											"end": 23381,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 23363,
											"end": 23381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23363,
											"end": 23381,
											"name": "tag",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 23363,
											"end": 23381,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23244,
											"end": 23383,
											"name": "tag",
											"source": 20,
											"value": "575"
										},
										{
											"begin": 23244,
											"end": 23383,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23028,
											"end": 23390,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22980,
											"end": 23390,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 22980,
											"end": 23390,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22980,
											"end": 23390,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22980,
											"end": 23390,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22980,
											"end": 23390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23396,
											"end": 23587,
											"name": "tag",
											"source": 20,
											"value": "239"
										},
										{
											"begin": 23396,
											"end": 23587,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23436,
											"end": 23439,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23455,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "578"
										},
										{
											"begin": 23473,
											"end": 23474,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23455,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 23455,
											"end": 23475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23455,
											"end": 23475,
											"name": "tag",
											"source": 20,
											"value": "578"
										},
										{
											"begin": 23455,
											"end": 23475,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23450,
											"end": 23475,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23450,
											"end": 23475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23489,
											"end": 23509,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "579"
										},
										{
											"begin": 23507,
											"end": 23508,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23489,
											"end": 23509,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 23489,
											"end": 23509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23489,
											"end": 23509,
											"name": "tag",
											"source": 20,
											"value": "579"
										},
										{
											"begin": 23489,
											"end": 23509,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23484,
											"end": 23509,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 23484,
											"end": 23509,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23532,
											"end": 23533,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23529,
											"end": 23530,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23525,
											"end": 23534,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23518,
											"end": 23534,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23518,
											"end": 23534,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23553,
											"end": 23556,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 23550,
											"end": 23551,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23547,
											"end": 23557,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 23544,
											"end": 23580,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 23544,
											"end": 23580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "580"
										},
										{
											"begin": 23544,
											"end": 23580,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 23560,
											"end": 23578,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 23560,
											"end": 23578,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 23560,
											"end": 23578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23560,
											"end": 23578,
											"name": "tag",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 23560,
											"end": 23578,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23544,
											"end": 23580,
											"name": "tag",
											"source": 20,
											"value": "580"
										},
										{
											"begin": 23544,
											"end": 23580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23396,
											"end": 23587,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 23396,
											"end": 23587,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23396,
											"end": 23587,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23396,
											"end": 23587,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23396,
											"end": 23587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23593,
											"end": 23773,
											"name": "tag",
											"source": 20,
											"value": "245"
										},
										{
											"begin": 23593,
											"end": 23773,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23641,
											"end": 23718,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23638,
											"end": 23639,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23631,
											"end": 23719,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23738,
											"end": 23742,
											"name": "PUSH",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 23735,
											"end": 23736,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 23728,
											"end": 23743,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23762,
											"end": 23766,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 23759,
											"end": 23760,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23752,
											"end": 23767,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 23779,
											"end": 23950,
											"name": "tag",
											"source": 20,
											"value": "258"
										},
										{
											"begin": 23779,
											"end": 23950,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23818,
											"end": 23821,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23841,
											"end": 23865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 23859,
											"end": 23864,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23841,
											"end": 23865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 23841,
											"end": 23865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23841,
											"end": 23865,
											"name": "tag",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 23841,
											"end": 23865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23832,
											"end": 23865,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23832,
											"end": 23865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23887,
											"end": 23891,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23880,
											"end": 23885,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23877,
											"end": 23892,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 23874,
											"end": 23915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "585"
										},
										{
											"begin": 23874,
											"end": 23915,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 23895,
											"end": 23913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "tag",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23874,
											"end": 23915,
											"name": "tag",
											"source": 20,
											"value": "585"
										},
										{
											"begin": 23874,
											"end": 23915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23942,
											"end": 23943,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 23935,
											"end": 23940,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23931,
											"end": 23944,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 23924,
											"end": 23944,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23924,
											"end": 23944,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23779,
											"end": 23950,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23779,
											"end": 23950,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23779,
											"end": 23950,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23779,
											"end": 23950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23956,
											"end": 24138,
											"name": "tag",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 23956,
											"end": 24138,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24096,
											"end": 24130,
											"name": "PUSH",
											"source": 20,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 24092,
											"end": 24093,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24084,
											"end": 24090,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24080,
											"end": 24094,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24073,
											"end": 24131,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23956,
											"end": 24138,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23956,
											"end": 24138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24510,
											"name": "tag",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 24144,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24286,
											"end": 24289,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24307,
											"end": 24374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 24371,
											"end": 24373,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 24366,
											"end": 24369,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24307,
											"end": 24374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 24307,
											"end": 24374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24307,
											"end": 24374,
											"name": "tag",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 24307,
											"end": 24374,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24300,
											"end": 24374,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24300,
											"end": 24374,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24383,
											"end": 24476,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "590"
										},
										{
											"begin": 24472,
											"end": 24475,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24383,
											"end": 24476,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 24383,
											"end": 24476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24383,
											"end": 24476,
											"name": "tag",
											"source": 20,
											"value": "590"
										},
										{
											"begin": 24383,
											"end": 24476,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24501,
											"end": 24503,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 24496,
											"end": 24499,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24492,
											"end": 24504,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24485,
											"end": 24504,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24485,
											"end": 24504,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24510,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24510,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24510,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24144,
											"end": 24510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24516,
											"end": 24935,
											"name": "tag",
											"source": 20,
											"value": "261"
										},
										{
											"begin": 24516,
											"end": 24935,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24682,
											"end": 24686,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24720,
											"end": 24722,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 24709,
											"end": 24718,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24705,
											"end": 24723,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24697,
											"end": 24723,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24697,
											"end": 24723,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24769,
											"end": 24778,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24763,
											"end": 24767,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24759,
											"end": 24779,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 24755,
											"end": 24756,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24744,
											"end": 24753,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24740,
											"end": 24757,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24733,
											"end": 24780,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 24797,
											"end": 24928,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 24923,
											"end": 24927,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24797,
											"end": 24928,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 24797,
											"end": 24928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24797,
											"end": 24928,
											"name": "tag",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 24797,
											"end": 24928,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24789,
											"end": 24928,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24789,
											"end": 24928,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24516,
											"end": 24935,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24516,
											"end": 24935,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24516,
											"end": 24935,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24516,
											"end": 24935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24941,
											"end": 25039,
											"name": "tag",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 24941,
											"end": 25039,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24992,
											"end": 24998,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25026,
											"end": 25031,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25020,
											"end": 25032,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 25010,
											"end": 25032,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25010,
											"end": 25032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24941,
											"end": 25039,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24941,
											"end": 25039,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24941,
											"end": 25039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24941,
											"end": 25039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25045,
											"end": 25192,
											"name": "tag",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 25045,
											"end": 25192,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25146,
											"end": 25157,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25183,
											"end": 25186,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25168,
											"end": 25186,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25168,
											"end": 25186,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25045,
											"end": 25192,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 25045,
											"end": 25192,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25045,
											"end": 25192,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25045,
											"end": 25192,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25045,
											"end": 25192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25198,
											"end": 25584,
											"name": "tag",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 25198,
											"end": 25584,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25302,
											"end": 25305,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "596"
										},
										{
											"begin": 25362,
											"end": 25367,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 25330,
											"end": 25368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "tag",
											"source": 20,
											"value": "596"
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25384,
											"end": 25472,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "597"
										},
										{
											"begin": 25465,
											"end": 25471,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25460,
											"end": 25463,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 25384,
											"end": 25472,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 25384,
											"end": 25472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25384,
											"end": 25472,
											"name": "tag",
											"source": 20,
											"value": "597"
										},
										{
											"begin": 25384,
											"end": 25472,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25377,
											"end": 25472,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 25377,
											"end": 25472,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "598"
										},
										{
											"begin": 25539,
											"end": 25545,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25534,
											"end": 25537,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 25527,
											"end": 25531,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 25520,
											"end": 25525,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 25516,
											"end": 25532,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 25481,
											"end": 25546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 25546,
											"name": "tag",
											"source": 20,
											"value": "598"
										},
										{
											"begin": 25481,
											"end": 25546,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25571,
											"end": 25577,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 25566,
											"end": 25569,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 25562,
											"end": 25578,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25555,
											"end": 25578,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25555,
											"end": 25578,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25306,
											"end": 25584,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25198,
											"end": 25584,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 25198,
											"end": 25584,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25198,
											"end": 25584,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25198,
											"end": 25584,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25198,
											"end": 25584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25590,
											"end": 25861,
											"name": "tag",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 25590,
											"end": 25861,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25720,
											"end": 25723,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25742,
											"end": 25835,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 25831,
											"end": 25834,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25822,
											"end": 25828,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 25742,
											"end": 25835,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 25742,
											"end": 25835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25742,
											"end": 25835,
											"name": "tag",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 25742,
											"end": 25835,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25735,
											"end": 25835,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25735,
											"end": 25835,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25852,
											"end": 25855,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25845,
											"end": 25855,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25845,
											"end": 25855,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25590,
											"end": 25861,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 25590,
											"end": 25861,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25590,
											"end": 25861,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25590,
											"end": 25861,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25590,
											"end": 25861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25867,
											"end": 26046,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 25867,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26007,
											"end": 26038,
											"name": "PUSH",
											"source": 20,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 26003,
											"end": 26004,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25995,
											"end": 26001,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25991,
											"end": 26005,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 25984,
											"end": 26039,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 25867,
											"end": 26046,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25867,
											"end": 26046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26052,
											"end": 26418,
											"name": "tag",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 26052,
											"end": 26418,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26194,
											"end": 26197,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26215,
											"end": 26282,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "603"
										},
										{
											"begin": 26279,
											"end": 26281,
											"name": "PUSH",
											"source": 20,
											"value": "1D"
										},
										{
											"begin": 26274,
											"end": 26277,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 26215,
											"end": 26282,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 26215,
											"end": 26282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26215,
											"end": 26282,
											"name": "tag",
											"source": 20,
											"value": "603"
										},
										{
											"begin": 26215,
											"end": 26282,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26208,
											"end": 26282,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26208,
											"end": 26282,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26384,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 26380,
											"end": 26383,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26384,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 26291,
											"end": 26384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26384,
											"name": "tag",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 26291,
											"end": 26384,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26409,
											"end": 26411,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 26404,
											"end": 26407,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26400,
											"end": 26412,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26393,
											"end": 26412,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26393,
											"end": 26412,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26052,
											"end": 26418,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26052,
											"end": 26418,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26052,
											"end": 26418,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26052,
											"end": 26418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26424,
											"end": 26843,
											"name": "tag",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 26424,
											"end": 26843,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26590,
											"end": 26594,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26628,
											"end": 26630,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 26617,
											"end": 26626,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26613,
											"end": 26631,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26605,
											"end": 26631,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26605,
											"end": 26631,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26677,
											"end": 26686,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26671,
											"end": 26675,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26667,
											"end": 26687,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 26663,
											"end": 26664,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26652,
											"end": 26661,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 26648,
											"end": 26665,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26641,
											"end": 26688,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 26705,
											"end": 26836,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 26831,
											"end": 26835,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26705,
											"end": 26836,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 26705,
											"end": 26836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26705,
											"end": 26836,
											"name": "tag",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 26705,
											"end": 26836,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26697,
											"end": 26836,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26697,
											"end": 26836,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26424,
											"end": 26843,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26424,
											"end": 26843,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26424,
											"end": 26843,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26424,
											"end": 26843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"contracts/DevVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address)": "485cc955",
							"proxiableUUID()": "52d1902d",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tether\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DevVault.sol\":\"DevVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/DevVault.sol\":{\"keccak256\":\"0xa628627ad28915baa72b3798c3aa7d6b8b5a99827b042bf0d674d573ca342c1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb5613d08f7c3e9d4e2c8beb7aa0a72b30640478d3c96279b08e3dd85a184b84\",\"dweb:/ipfs/QmZwPZSy7gYbSCW3VHjMWmEvQBbkEqSdb1yWRivF5662zC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 782,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 785,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 764,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1080,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1951,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2335,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "_roles",
								"offset": 0,
								"slot": "201",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "__gap",
								"offset": 0,
								"slot": "202",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3334,
								"contract": "contracts/DevVault.sol:DevVault",
								"label": "tether",
								"offset": 0,
								"slot": "251",
								"type": "t_contract(IERC20Upgradeable)1159"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20Upgradeable)1159": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "contracts/DevVault.sol:DevVault",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "contracts/DevVault.sol:DevVault",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"ContextUpgradeable": [
							1952
						],
						"ERC165Upgradeable": [
							2336
						],
						"IAccessControlUpgradeable": [
							409
						],
						"IERC165Upgradeable": [
							2348
						],
						"Initializable": [
							944
						],
						"MathUpgradeable": [
							3214
						],
						"SignedMathUpgradeable": [
							3319
						],
						"StringsUpgradeable": [
							2291
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
							"file": "./IAccessControlUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 410,
							"src": "133:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 1953,
							"src": "175:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../utils/StringsUpgradeable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 2292,
							"src": "217:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 2337,
							"src": "259:54:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 945,
							"src": "314:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 944,
										"src": "322:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Initializable",
										"nameLocations": [
											"2086:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "2086:13:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "2086:13:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2101:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1952,
										"src": "2101:18:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2101:18:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IAccessControlUpgradeable",
										"nameLocations": [
											"2121:25:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "2121:25:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2121:25:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2148:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2336,
										"src": "2148:17:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2148:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "379:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 336,
							"linearizedBaseContracts": [
								336,
								2336,
								2348,
								409,
								1952,
								944
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2058:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2223:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2198:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 19,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2198:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2248:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2240:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 21,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2240:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2179:8:0",
									"nodeType": "StructDefinition",
									"scope": 336,
									"src": "2172:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2307:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2270:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 24,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2278:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2270:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 25,
												"name": "RoleData",
												"nameLocations": [
													"2289:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "2289:8:0"
											},
											"referencedDeclaration": 23,
											"src": "2289:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$23_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 31,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2344:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2320:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 29,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2320:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2365:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "2788:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 37,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 36,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 108,
														"src": "2798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "2798:16:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "2824:1:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "2376:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 42,
									"name": "onlyRole",
									"nameLocation": "2765:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2782:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2774:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 33,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:14:0"
									},
									"src": "2756:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "2896:7:0",
										"statements": []
									},
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 45,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 44,
												"name": "onlyInitializing",
												"nameLocations": [
													"2879:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "2879:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2879:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "2847:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:0:0"
									},
									"scope": 336,
									"src": "2838:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2977:7:0",
										"statements": []
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 51,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 50,
												"name": "onlyInitializing",
												"nameLocations": [
													"2960:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "2960:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2960:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "2918:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2948:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2977:0:0"
									},
									"scope": 336,
									"src": "2909:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2330
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "3141:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 63,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 65,
																		"name": "IAccessControlUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "3178:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	],
																	"id": 64,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3173:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$409",
																	"typeString": "type(contract IAccessControlUpgradeable)"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3205:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3173:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3158:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 71,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "3244:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 69,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$336_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3226:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2330,
															"src": "3220:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3220:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3158:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 62,
												"id": 74,
												"nodeType": "Return",
												"src": "3151:105:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2989:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3059:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 59,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3117:8:0"
									},
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3084:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3077:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 56,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:20:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3135:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:6:0"
									},
									"scope": 336,
									"src": "3050:213:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										376
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "3442:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 87,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "3459:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"id": 88,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "3466:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3459:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3472:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "3459:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 92,
													"indexExpression": {
														"id": 91,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3459:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 86,
												"id": 93,
												"nodeType": "Return",
												"src": "3452:36:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "3269:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3359:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3418:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3375:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3367:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:31:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:6:0"
									},
									"scope": 336,
									"src": "3350:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "3845:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "3866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 103,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "3872:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3872:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 147,
														"src": "3855:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3855:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3855:30:0"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3501:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3798:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:14:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3845:0:0"
									},
									"scope": 336,
									"src": "3789:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4246:428:0",
										"statements": [
											{
												"condition": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4260:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 117,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "4269:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 118,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 116,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4261:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "IfStatement",
												"src": "4256:412:0",
												"trueBody": {
													"id": 144,
													"nodeType": "Block",
													"src": "4285:383:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4393:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 129,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 113,
																								"src": "4475:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 127,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2291,
																								"src": "4444:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$2291_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 128,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4463:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2265,
																							"src": "4444:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 130,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4444:39:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4509:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 136,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 111,
																										"src": "4593:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 135,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4585:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 134,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4585:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 137,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4585:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 138,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4600:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 132,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2291,
																								"src": "4554:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$2291_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 133,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4573:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2245,
																							"src": "4554:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4554:49:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 124,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4351:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4355:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4351:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4351:274:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 122,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4323:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4323:320:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 121,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4299:358:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "4299:358:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3898:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4182:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:31:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4246:0:0"
									},
									"scope": 336,
									"src": "4173:501:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										384
									],
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4938:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 156,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "4955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4955:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$23_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4968:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "4955:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 155,
												"id": 160,
												"nodeType": "Return",
												"src": "4948:29:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4680:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4864:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4911:8:0"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4885:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:14:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:9:0"
									},
									"scope": 336,
									"src": "4855:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "5383:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 178,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "5393:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5393:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "5393:25:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4990:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 172,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5376:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 171,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5363:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5363:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 170,
												"name": "onlyRole",
												"nameLocations": [
													"5354:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5354:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5354:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5289:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5345:8:0"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5307:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5299:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5321:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5313:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:31:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 336,
									"src": "5280:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5809:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5819:26:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5431:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 192,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 191,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5789:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5789:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "onlyRole",
												"nameLocations": [
													"5780:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5780:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5780:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5714:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 189,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5771:8:0"
									},
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5725:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:31:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:0"
									},
									"scope": 336,
									"src": "5705:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "6466:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 212,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "6484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 213,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "6495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6495:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6484:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6509:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "6476:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6582:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 221,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "6570:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6570:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6570:26:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5858:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6398:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6457:8:0"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6411:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6410:31:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6466:0:0"
									},
									"scope": 336,
									"src": "6389:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7356:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 235,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "7366:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7366:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "7366:25:0"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "6609:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7297:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7316:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7308:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:31:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7356:0:0"
									},
									"scope": 336,
									"src": "7288:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7596:174:0",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7614:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "7606:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 247,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"arguments": [
														{
															"id": 250,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7647:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 249,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "7634:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7634:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7606:46:0"
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 253,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "7662:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 255,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "7669:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7662:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7675:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "7662:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "7687:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7662:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "7662:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 261,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 262,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7734:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "7753:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 260,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7711:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "EmitStatement",
												"src": "7706:57:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "7404:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7532:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7545:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7596:0:0"
									},
									"scope": 336,
									"src": "7523:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "8006:165:0",
										"statements": [
											{
												"condition": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8020:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 276,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "8029:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 277,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8035:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 275,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "8021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8021:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 297,
												"nodeType": "IfStatement",
												"src": "8016:149:0",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "8045:120:0",
													"statements": [
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 280,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8059:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 282,
																			"indexExpression": {
																				"id": 281,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 270,
																				"src": "8066:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8059:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8072:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8059:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8080:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8059:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8091:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8059:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "8059:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 290,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "8126:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 291,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8132:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 292,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1929,
																			"src": "8141:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8141:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 289,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "8114:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8114:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 295,
															"nodeType": "EmitStatement",
															"src": "8109:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "7776:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7947:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7966:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7957:31:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8006:0:0"
									},
									"scope": 336,
									"src": "7938:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "8411:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 308,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "8433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 309,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "8439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 307,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "8425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8425:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "8421:149:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "8449:121:0",
													"statements": [
														{
															"expression": {
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 311,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8463:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 313,
																			"indexExpression": {
																				"id": 312,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 302,
																				"src": "8470:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8463:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 314,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8476:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8463:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 316,
																	"indexExpression": {
																		"id": 315,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8484:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8463:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8463:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 319,
															"nodeType": "ExpressionStatement",
															"src": "8463:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 321,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "8531:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 322,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8537:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 323,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1929,
																			"src": "8546:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8546:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 320,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "8519:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8519:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 326,
															"nodeType": "EmitStatement",
															"src": "8514:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "8177:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8351:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8371:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8363:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8362:31:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8411:0:0"
									},
									"scope": 336,
									"src": "8342:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "8582:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 335,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "8861:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "8841:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 332,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8841:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 334,
										"length": {
											"hexValue": "3439",
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8849:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "8841:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 337,
							"src": "2040:6829:0",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366,
								790
							]
						}
					],
					"src": "108:8762:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
					"exportedSymbols": {
						"IAccessControlUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 339,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "IAccessControlUpgradeable",
							"nameLocation": "219:25:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "251:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 348,
									"name": "RoleAdminChanged",
									"nameLocation": "554:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "587:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "571:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "609:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "593:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "644:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "628:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:87:1"
									},
									"src": "548:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "664:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 357,
									"name": "RoleGranted",
									"nameLocation": "887:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "915:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "899:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "921:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "946:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:71:1"
									},
									"src": "881:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "976:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 366,
									"name": "RoleRevoked",
									"nameLocation": "1262:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1290:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1274:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1296:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1337:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1321:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:71:1"
									},
									"src": "1256:89:1"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1351:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1441:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1471:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1463:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:31:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 409,
									"src": "1432:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1515:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1713:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1734:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1726:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:14:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1763:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:9:1"
									},
									"scope": 409,
									"src": "1704:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1778:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2031:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2049:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2041:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2063:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2055:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:31:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:1"
									},
									"scope": 409,
									"src": "2022:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2087:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2324:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2335:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:31:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:1"
									},
									"scope": 409,
									"src": "2315:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2381:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2875:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2910:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2902:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:31:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:1"
									},
									"scope": 409,
									"src": "2866:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 410,
							"src": "209:2721:1",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366
							]
						}
					],
					"src": "94:2837:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:2",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "276:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "302:68:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 417,
									"name": "Upgraded",
									"nameLocation": "381:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "406:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "390:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:32:2"
									},
									"src": "375:47:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "428:67:2",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 424,
									"name": "AdminChanged",
									"nameLocation": "506:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "527:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "519:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:41:2"
									},
									"src": "500:60:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "566:59:2",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 429,
									"name": "BeaconUpgraded",
									"nameLocation": "636:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "667:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "651:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:24:2"
									},
									"src": "630:45:2"
								}
							],
							"scope": 431,
							"src": "266:411:2",
							"usedErrors": [],
							"usedEvents": [
								417,
								424,
								429
							]
						}
					],
					"src": "107:571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							440
						]
					},
					"id": 441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 433,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:3",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 440,
							"linearizedBaseContracts": [
								440
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:3",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:3"
									},
									"scope": 440,
									"src": "830:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 441,
							"src": "342:547:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:777:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1901
						],
						"ERC1967UpgradeUpgradeable": [
							765
						],
						"IBeaconUpgradeable": [
							775
						],
						"IERC1822ProxiableUpgradeable": [
							440
						],
						"IERC1967Upgradeable": [
							430
						],
						"Initializable": [
							944
						],
						"StorageSlotUpgradeable": [
							2062
						]
					},
					"id": 766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 442,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 776,
							"src": "141:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 431,
							"src": "184:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 445,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 441,
							"src": "235:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 1902,
							"src": "292:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 2063,
							"src": "337:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 945,
							"src": "386:57:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 448,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 944,
										"src": "394:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 451,
										"name": "Initializable",
										"nameLocations": [
											"677:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "677:13:4"
									},
									"id": 452,
									"nodeType": "InheritanceSpecifier",
									"src": "677:13:4"
								},
								{
									"baseName": {
										"id": 453,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"692:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 430,
										"src": "692:19:4"
									},
									"id": 454,
									"nodeType": "InheritanceSpecifier",
									"src": "692:19:4"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 450,
								"nodeType": "StructuredDocumentation",
								"src": "445:184:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 765,
							"linearizedBaseContracts": [
								765,
								430,
								944
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "648:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 457,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "822:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "797:108:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 455,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "797:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "839:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "912:214:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 461,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1157:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "1131:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 459,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1131:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1180:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "1312:7:4",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"1295:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "1295:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1295:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "1262:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:2:4"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:4"
									},
									"scope": 765,
									"src": "1253:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "1394:7:4",
										"statements": []
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 470,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 469,
												"name": "onlyInitializing",
												"nameLocations": [
													"1377:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "1377:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1377:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "1334:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:0:4"
									},
									"scope": 765,
									"src": "1325:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1540:89:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 481,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "1595:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 479,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "1557:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2062_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1580:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "1557:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1958_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1557:59:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1617:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1957,
													"src": "1557:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 478,
												"id": 484,
												"nodeType": "Return",
												"src": "1550:72:4"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "1406:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1487:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:2:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1531:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:9:4"
									},
									"scope": 765,
									"src": "1478:151:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "1783:218:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 495,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1831:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 493,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "1801:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1901_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1820:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1589,
																"src": "1801:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1801:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1851:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1793:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "1793:106:4"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "1947:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 500,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "1909:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2062_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1932:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1984,
																"src": "1909:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1958_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1909:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1969:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1957,
														"src": "1909:65:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 506,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1977:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1909:85:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "1909:85:4"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1635:80:4",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1729:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1756:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "1748:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:27:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1783:0:4"
									},
									"scope": 765,
									"src": "1720:281:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2163:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "2192:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 516,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2173:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "2173:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 521,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "2234:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 520,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "2225:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2225:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "2220:32:4"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "2007:95:4",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2116:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2135:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2127:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:27:4"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2163:0:4"
									},
									"scope": 765,
									"src": "2107:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "2491:178:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2512:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 535,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2501:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2501:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "2501:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 539,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "2544:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2549:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2544:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2558:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2544:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 543,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2563:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2544:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "IfStatement",
												"src": "2540:123:4",
												"trueBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "2574:89:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 548,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "2628:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 549,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "2647:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 545,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1901,
																		"src": "2588:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1901_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2607:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1788,
																	"src": "2588:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2588:64:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "2588:64:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "2265:123:4",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2402:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2428:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2420:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2460:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2447:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2471:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2466:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:62:4"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:4"
									},
									"scope": 765,
									"src": "2393:276:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "2943:842:4",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 567,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "3295:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 565,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "3257:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2062_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3280:14:4",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1995,
															"src": "3257:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1961_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3257:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1961_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3311:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1960,
													"src": "3257:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "3386:393:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 590,
																		"nodeType": "Block",
																		"src": "3491:115:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 586,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 584,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 581,
																								"src": "3517:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 585,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 461,
																								"src": "3525:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3517:28:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 587,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3547:43:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 583,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3509:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 588,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3509:82:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 589,
																				"nodeType": "ExpressionStatement",
																				"src": "3509:82:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 591,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 582,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 581,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3485:4:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 591,
																				"src": "3477:12:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 580,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3477:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3476:14:4"
																	},
																	"src": "3468:138:4"
																},
																{
																	"block": {
																		"id": 596,
																		"nodeType": "Block",
																		"src": "3613:89:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 593,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3638:48:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 592,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3631:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3631:56:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 595,
																				"nodeType": "ExpressionStatement",
																				"src": "3631:56:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 597,
																	"nodeType": "TryCatchClause",
																	"src": "3607:95:4"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 576,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "3433:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 575,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 440,
																			"src": "3404:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$440_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3404:47:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$440",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3452:13:4",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 439,
																	"src": "3404:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3404:63:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 598,
															"nodeType": "TryStatement",
															"src": "3400:302:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 600,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "3733:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 601,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "3752:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 602,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "3758:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 599,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "3715:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3715:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 604,
															"nodeType": "ExpressionStatement",
															"src": "3715:53:4"
														}
													]
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "3253:526:4",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "3318:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 571,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "3351:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 570,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3332:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3332:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 573,
															"nodeType": "ExpressionStatement",
															"src": "3332:37:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2675:161:4",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2850:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2880:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2872:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2872:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2912:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2899:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2899:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2923:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2918:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2918:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2871:62:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:0:4"
									},
									"scope": 765,
									"src": "2841:944:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "3791:189:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 612,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4011:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "3985:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 610,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3985:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 611,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4025:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "4206:80:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 620,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "4261:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 618,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "4223:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2062_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4246:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "4223:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1958_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4223:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4274:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1957,
													"src": "4223:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "4216:63:4"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "4098:50:4",
										"text": " @dev Returns the current admin."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4162:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4171:2:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4197:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4196:9:4"
									},
									"scope": 765,
									"src": "4153:133:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4413:167:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4431:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4451:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4443:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4443:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4443:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4431:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4455:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4423:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "4423:73:4"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 644,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "4544:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 641,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "4506:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2062_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4529:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1984,
																"src": "4506:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1958_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4506:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4557:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1957,
														"src": "4506:56:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "4565:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4506:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4506:67:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "4292:71:4",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4377:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4395:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4387:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4386:18:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:0:4"
									},
									"scope": 765,
									"src": "4368:212:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "4740:86:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 658,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "4768:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4768:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "4781:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 657,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "4755:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "EmitStatement",
												"src": "4750:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "4810:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 663,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "4800:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4800:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "4800:19:4"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4586:100:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4721:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4713:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:18:4"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4740:0:4"
									},
									"scope": 765,
									"src": "4691:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "4832:232:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 672,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5095:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "5069:107:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 670,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5069:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 671,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5110:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "5293:81:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 680,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "5348:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 678,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "5310:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2062_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5333:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "5310:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1958_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5310:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5362:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1957,
													"src": "5310:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 677,
												"id": 683,
												"nodeType": "Return",
												"src": "5303:64:4"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "5183:51:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5248:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5258:2:4"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5284:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5283:9:4"
									},
									"scope": 765,
									"src": "5239:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "5503:368:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 694,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "5551:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 692,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "5521:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1901_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5540:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1589,
																"src": "5521:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5521:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5563:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "5513:90:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 703,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "5683:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 702,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "5664:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$775_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5664:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$775",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5694:14:4",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 774,
																		"src": "5664:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5664:46:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 700,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "5634:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1901_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5653:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1589,
																"src": "5634:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5634:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5725:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5613:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5613:172:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "5613:172:4"
											},
											{
												"expression": {
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "5833:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 711,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "5795:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2062_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5818:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1984,
																"src": "5795:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1958_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5795:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5847:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1957,
														"src": "5795:57:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 717,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "5855:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5795:69:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "5795:69:4"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "5380:71:4",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5465:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5484:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "5476:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5475:19:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5503:0:4"
									},
									"scope": 765,
									"src": "5456:415:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "6270:239:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 732,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "6291:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 731,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "6280:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6280:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "6280:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 736,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "6331:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 735,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "6316:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6316:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "EmitStatement",
												"src": "6311:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 739,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "6355:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6360:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6355:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6369:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6355:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 743,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6374:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6355:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "6351:152:4",
												"trueBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "6385:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 749,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 724,
																						"src": "6458:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 748,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "6439:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$775_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6439:29:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$775",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6469:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 774,
																			"src": "6439:44:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6439:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 753,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "6487:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 745,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1901,
																		"src": "6399:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1901_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6418:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1788,
																	"src": "6399:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6399:93:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "6399:93:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "5877:292:4",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6183:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6215:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "6207:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6239:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "6226:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6226:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6250:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "6245:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6245:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6206:54:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6270:0:4"
									},
									"scope": 765,
									"src": "6174:335:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "6515:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 764,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "6794:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "6774:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 761,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6774:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 763,
										"length": {
											"hexValue": "3530",
											"id": 762,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6782:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "6774:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 766,
							"src": "630:6172:4",
							"usedErrors": [],
							"usedEvents": [
								417,
								424,
								429,
								790
							]
						}
					],
					"src": "116:6687:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 768,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:5"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:5"
									},
									"scope": 775,
									"src": "400:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 776,
							"src": "198:262:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:368:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1901
						],
						"Initializable": [
							944
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 778,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1902,
							"src": "138:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 779,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:6",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944
							],
							"name": "Initializable",
							"nameLocation": "2412:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:6",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 782,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "2546:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 781,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:6",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 785,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "2675:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 784,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:6",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 790,
									"name": "Initialized",
									"nameLocation": "2809:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2821:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 787,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:6"
									},
									"src": "2803:33:6"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "3269:483:6",
										"statements": [
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "3279:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 793,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:6",
													"subExpression": {
														"id": 795,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "3302:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 799,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "3347:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 800,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "3365:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 804,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:6",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 809,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$944",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$944",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 808,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 807,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 810,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 805,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1901,
																						"src": "3388:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1901_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:6",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1589,
																					"src": "3388:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 813,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "3436:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 817,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:6"
											},
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 822,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "3536:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:6"
											},
											{
												"condition": {
													"id": 826,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "3566:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 832,
												"nodeType": "IfStatement",
												"src": "3562:65:6",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "3582:45:6",
													"statements": [
														{
															"expression": {
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 827,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "3596:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:6"
														}
													]
												}
											},
											{
												"id": 833,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:6"
											},
											{
												"condition": {
													"id": 834,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "3651:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "3647:99:6",
												"trueBody": {
													"id": 843,
													"nodeType": "Block",
													"src": "3667:79:6",
													"statements": [
														{
															"expression": {
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 835,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "3681:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 839,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "3721:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "EmitStatement",
															"src": "3716:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:6",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 846,
									"name": "initializer",
									"nameLocation": "3255:11:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:6"
									},
									"src": "3246:506:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "4863:255:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:6",
																"subExpression": {
																	"id": 852,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "4882:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 854,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "4899:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 855,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "4914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:6"
											},
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 861,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "4982:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 862,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "4997:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:6"
											},
											{
												"expression": {
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 865,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "5014:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:6"
											},
											{
												"id": 869,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:6"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "5055:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 875,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "5103:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 874,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "5091:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "EmitStatement",
												"src": "5086:25:6"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:6",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 879,
									"name": "reinitializer",
									"nameLocation": "4834:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "4848:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 848,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:6"
									},
									"src": "4825:293:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "5356:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 883,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5374:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:6"
											},
											{
												"id": 887,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:6"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:6",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 889,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:6"
									},
									"src": "5328:125:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "5988:231:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:6",
															"subExpression": {
																"id": 894,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "6007:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 899,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "6078:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 901,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 900,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 923,
												"nodeType": "IfStatement",
												"src": "6074:139:6",
												"trueBody": {
													"id": 922,
													"nodeType": "Block",
													"src": "6111:102:6",
													"statements": [
														{
															"expression": {
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 906,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6125:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 908,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 907,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 913,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 916,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 915,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:6",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 914,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "6174:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 921,
															"nodeType": "EmitStatement",
															"src": "6169:33:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:6",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:6"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:6"
									},
									"scope": 944,
									"src": "5939:280:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "6393:36:6",
										"statements": [
											{
												"expression": {
													"id": 931,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 782,
													"src": "6410:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 930,
												"id": 932,
												"nodeType": "Return",
												"src": "6403:19:6"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:6",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:6"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "6386:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 928,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:6"
									},
									"scope": 944,
									"src": "6329:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "6601:37:6",
										"statements": [
											{
												"expression": {
													"id": 940,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 785,
													"src": "6618:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 939,
												"id": 941,
												"nodeType": "Return",
												"src": "6611:20:6"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:6",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "6595:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:6"
									},
									"scope": 944,
									"src": "6545:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 945,
							"src": "2394:4246:6",
							"usedErrors": [],
							"usedEvents": [
								790
							]
						}
					],
					"src": "113:6528:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1901
						],
						"ERC1967UpgradeUpgradeable": [
							765
						],
						"IBeaconUpgradeable": [
							775
						],
						"IERC1822ProxiableUpgradeable": [
							440
						],
						"IERC1967Upgradeable": [
							430
						],
						"Initializable": [
							944
						],
						"StorageSlotUpgradeable": [
							2062
						],
						"UUPSUpgradeable": [
							1081
						]
					},
					"id": 1082,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 946,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 441,
							"src": "140:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 766,
							"src": "197:50:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 950,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 945,
							"src": "248:50:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 949,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 944,
										"src": "256:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 952,
										"name": "Initializable",
										"nameLocations": [
											"986:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "986:13:7"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "986:13:7"
								},
								{
									"baseName": {
										"id": 954,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"1001:28:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 440,
										"src": "1001:28:7"
									},
									"id": 955,
									"nodeType": "InheritanceSpecifier",
									"src": "1001:28:7"
								},
								{
									"baseName": {
										"id": 956,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1031:25:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 765,
										"src": "1031:25:7"
									},
									"id": 957,
									"nodeType": "InheritanceSpecifier",
									"src": "1031:25:7"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 951,
								"nodeType": "StructuredDocumentation",
								"src": "300:648:7",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1081,
							"linearizedBaseContracts": [
								1081,
								765,
								430,
								440,
								944
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "967:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "1063:87:7",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 964,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1181:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "1155:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 959,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1155:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 962,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1198:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1081",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1081",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 961,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1190:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 960,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1190:7:7",
												"typeDescriptions": {}
											}
										},
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1190:13:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1729:205:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1755:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1081",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1081",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1747:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1747:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1747:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 972,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "1764:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1747:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1739:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1739:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "1739:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 978,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1837:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 980,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "1861:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1837:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1869:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1829:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "1829:87:7"
											},
											{
												"id": 985,
												"nodeType": "PlaceholderStatement",
												"src": "1926:1:7"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "1210:493:7",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 987,
									"name": "onlyProxy",
									"nameLocation": "1717:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:7"
									},
									"src": "1708:226:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "2164:120:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 993,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2190:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1081",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1081",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2182:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 991,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2182:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2182:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 995,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2199:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2182:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2207:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2174:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:92:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2174:92:7"
											},
											{
												"id": 1000,
												"nodeType": "PlaceholderStatement",
												"src": "2276:1:7"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "1940:195:7",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 1002,
									"name": "notDelegated",
									"nameLocation": "2149:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:2:7"
									},
									"src": "2140:144:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "2350:7:7",
										"statements": []
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1005,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1004,
												"name": "onlyInitializing",
												"nameLocations": [
													"2333:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "2333:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2333:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2299:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:7"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2350:0:7"
									},
									"scope": 1081,
									"src": "2290:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "2433:7:7",
										"statements": []
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1011,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1010,
												"name": "onlyInitializing",
												"nameLocations": [
													"2416:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "2416:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2416:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "2372:32:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:2:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2433:0:7"
									},
									"scope": 1081,
									"src": "2363:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										439
									],
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "3114:44:7",
										"statements": [
											{
												"expression": {
													"id": 1023,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 461,
													"src": "3131:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1024,
												"nodeType": "Return",
												"src": "3124:27:7"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "2445:577:7",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1019,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1018,
												"name": "notDelegated",
												"nameLocations": [
													"3083:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1002,
												"src": "3083:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3083:12:7"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3036:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1017,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3074:8:7"
									},
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:7"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3105:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3104:9:7"
									},
									"scope": 1081,
									"src": "3027:131:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "3479:124:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1035,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3507:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1034,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "3489:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3489:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "3489:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1039,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3557:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3586:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3576:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3580:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3576:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3590:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1038,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "3535:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3535:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "3535:61:7"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "3164:239:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "3659cfe6",
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1032,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1031,
												"name": "onlyProxy",
												"nameLocations": [
													"3469:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 987,
												"src": "3469:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3469:9:7"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3417:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3435:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "3427:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:27:7"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:0:7"
									},
									"scope": 1081,
									"src": "3408:195:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "4027:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1059,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "4055:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1058,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "4037:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "4037:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1063,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "4105:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4124:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4130:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1062,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "4083:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "4083:52:7"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "3609:308:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1056,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1055,
												"name": "onlyProxy",
												"nameLocations": [
													"4017:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 987,
												"src": "4017:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4017:9:7"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3931:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3956:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "3948:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3988:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "3975:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3975:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:46:7"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4027:0:7"
									},
									"scope": 1081,
									"src": "3922:220:7",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "4148:397:7",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4559:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4585:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4577:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4577:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4576:27:7"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4620:0:7"
									},
									"scope": 1081,
									"src": "4550:71:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "4627:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1080,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4906:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "4886:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1077,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4886:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1079,
										"length": {
											"hexValue": "3530",
											"id": 1078,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4894:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4886:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1082,
							"src": "949:3965:7",
							"usedErrors": [],
							"usedEvents": [
								417,
								424,
								429,
								790
							]
						}
					],
					"src": "115:4800:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1159
						]
					},
					"id": 1160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1083,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1159,
							"linearizedBaseContracts": [
								1159
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1093,
									"name": "Transfer",
									"nameLocation": "405:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "414:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "436:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "456:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:8"
									},
									"src": "399:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1102,
									"name": "Approval",
									"nameLocation": "636:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "645:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "668:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:8"
									},
									"src": "630:78:8"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:8"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "831:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:8"
									},
									"scope": 1159,
									"src": "785:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "942:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:8"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "982:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:8"
									},
									"scope": 1159,
									"src": "923:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1234:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:8"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:8"
									},
									"scope": 1159,
									"src": "1204:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1568:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1583:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:8"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1623:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:8"
									},
									"scope": 1159,
									"src": "1549:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2302:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2319:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:8"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2353:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:8"
									},
									"scope": 1159,
									"src": "2285:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2679:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2693:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2705:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:8"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2739:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:8"
									},
									"scope": 1159,
									"src": "2657:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1160,
							"src": "202:2545:8",
							"usedErrors": [],
							"usedEvents": [
								1093,
								1102
							]
						}
					],
					"src": "106:2642:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
					"exportedSymbols": {
						"IERC20PermitUpgradeable": [
							1195
						]
					},
					"id": 1196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20PermitUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1162,
								"nodeType": "StructuredDocumentation",
								"src": "148:1963:9",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1195,
							"linearizedBaseContracts": [
								1195
							],
							"name": "IERC20PermitUpgradeable",
							"nameLocation": "2122:23:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "2152:850:9",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3016:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3040:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3032:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3032:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3063:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3055:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3055:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3088:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3080:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3111:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3103:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3135:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3129:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1172,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3129:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3154:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3146:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3173:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3165:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:158:9"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3189:0:9"
									},
									"scope": 1195,
									"src": "3007:183:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "3196:294:9",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3504:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3519:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3511:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3510:15:9"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3549:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:9:9"
									},
									"scope": 1195,
									"src": "3495:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "3564:128:9",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3759:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3775:2:9"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3801:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:9:9"
									},
									"scope": 1195,
									"src": "3750:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1196,
							"src": "2112:1700:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3690:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1901
						],
						"IERC20PermitUpgradeable": [
							1195
						],
						"IERC20Upgradeable": [
							1159
						],
						"SafeERC20Upgradeable": [
							1571
						]
					},
					"id": 1572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1197,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 1198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1572,
							"sourceUnit": 1160,
							"src": "140:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
							"file": "../extensions/IERC20PermitUpgradeable.sol",
							"id": 1199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1572,
							"sourceUnit": 1196,
							"src": "175:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1572,
							"sourceUnit": 1902,
							"src": "227:47:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1201,
								"nodeType": "StructuredDocumentation",
								"src": "276:457:10",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1571,
							"linearizedBaseContracts": [
								1571
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "742:20:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1204,
									"libraryName": {
										"id": 1202,
										"name": "AddressUpgradeable",
										"nameLocations": [
											"775:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1901,
										"src": "775:18:10"
									},
									"nodeType": "UsingForDirective",
									"src": "769:37:10",
									"typeName": {
										"id": 1203,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "798:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "1079:103:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "1109:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1219,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1208,
																			"src": "1139:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1145:8:10",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1126,
																		"src": "1139:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1154:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1139:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1222,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "1164:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "1168:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1217,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1116:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1120:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1116:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1116:58:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1215,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "1089:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:86:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1089:86:10"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "812:179:10",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1005:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1036:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1018:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1206,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1018:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "1018:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "1018:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1051:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1043:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1063:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1055:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:52:10"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:0:10"
									},
									"scope": 1571,
									"src": "996:186:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "1522:113:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "1552:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1245,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "1582:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1588:12:10",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1158,
																		"src": "1582:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1601:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1582:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1248,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "1611:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1249,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "1617:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1250,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "1621:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1243,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1559:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1563:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1559:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1559:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1241,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "1532:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1532:96:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "1532:96:10"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "1188:228:10",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1430:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1465:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1447:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1230,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1447:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "1447:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "1447:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1480:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1472:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1494:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1486:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1498:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:66:10"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1522:0:10"
									},
									"scope": 1571,
									"src": "1421:214:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "1982:497:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1267,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "2231:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2240:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2231:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1270,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2230:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1275,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2271:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1571",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1571",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 1274,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2263:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1273,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2263:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2263:13:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1277,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1261,
																					"src": "2278:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1271,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "2247:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2253:9:10",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1136,
																				"src": "2247:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2247:39:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2290:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2247:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2246:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2230:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2209:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:163:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "2209:163:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1287,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "2402:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1290,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "2432:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2438:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1146,
																		"src": "2432:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2446:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2432:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1293,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "2456:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "2465:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1288,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2409:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2413:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2409:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:62:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1286,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "2382:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2382:90:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "2382:90:10"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "1641:249:10",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1904:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1934:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "1916:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1257,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1916:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "1916:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "1916:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1949:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "1941:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1966:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "1958:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:57:10"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:10"
									},
									"scope": 1571,
									"src": "1895:584:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "2767:194:10",
										"statements": [
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2785:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "2777:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2777:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1316,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2824:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1571",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1571",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																],
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2816:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1314,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2816:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2816:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "2831:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1312,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2800:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2806:9:10",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1136,
														"src": "2800:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2800:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2777:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2869:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1325,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "2899:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2905:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1146,
																		"src": "2899:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2913:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2899:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1328,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "2923:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1329,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "2932:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1330,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "2947:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2932:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1323,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2876:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2880:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2876:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2876:77:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1321,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "2849:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:105:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2849:105:10"
											}
										]
									},
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "2485:180:10",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2679:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2719:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2701:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1302,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1301,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"2701:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "2701:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "2701:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2734:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2726:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2751:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2743:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:57:10"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:10"
									},
									"scope": 1571,
									"src": "2670:291:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "3249:321:10",
										"statements": [
											{
												"id": 1379,
												"nodeType": "UncheckedBlock",
												"src": "3259:305:10",
												"statements": [
													{
														"assignments": [
															1348
														],
														"declarations": [
															{
																"constant": false,
																"id": 1348,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3291:12:10",
																"nodeType": "VariableDeclaration",
																"scope": 1379,
																"src": "3283:20:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3283:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1357,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1353,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3330:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1571",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1571",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3322:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1351,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3322:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3322:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1355,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "3337:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1349,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "3306:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3312:9:10",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1136,
																"src": "3306:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3306:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3283:62:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1359,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "3367:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1360,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "3383:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3367:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3390:43:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1358,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3359:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3359:75:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1364,
														"nodeType": "ExpressionStatement",
														"src": "3359:75:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1366,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "3468:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1369,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1340,
																					"src": "3498:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3504:7:10",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1146,
																				"src": "3498:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3512:8:10",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3498:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1372,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "3522:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1373,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1348,
																				"src": "3531:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1374,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "3546:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3531:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1367,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3475:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3479:18:10",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3475:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3475:77:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1365,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "3448:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3448:105:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1378,
														"nodeType": "ExpressionStatement",
														"src": "3448:105:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "2967:180:10",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3161:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3201:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "3183:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1338,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3183:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "3183:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "3183:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3216:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "3208:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3233:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "3225:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:57:10"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:10"
									},
									"scope": 1571,
									"src": "3152:418:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "3977:333:10",
										"statements": [
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4000:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "3987:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1392,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3987:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1396,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "4038:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4044:7:10",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1146,
																"src": "4038:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4052:8:10",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4038:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1399,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "4062:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "4071:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1394,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4015:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4019:18:10",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4015:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4015:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3987:90:10"
											},
											{
												"condition": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4092:45:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1404,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "4117:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															{
																"id": 1405,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "4124:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																	"typeString": "contract IERC20Upgradeable"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1403,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "4093:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20Upgradeable,bytes memory) returns (bool)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4093:44:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "4088:216:10",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "4139:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1409,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "4173:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 1412,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1385,
																						"src": "4203:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																							"typeString": "contract IERC20Upgradeable"
																						}
																					},
																					"id": 1413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4209:7:10",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1146,
																					"src": "4203:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 1414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4217:8:10",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4203:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 1415,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1387,
																				"src": "4227:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4236:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 1410,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4180:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4184:18:10",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4180:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4180:58:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1408,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4153:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4153:86:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1419,
															"nodeType": "ExpressionStatement",
															"src": "4153:86:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1421,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "4273:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"id": 1422,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "4280:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1420,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4253:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1159_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4253:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1424,
															"nodeType": "ExpressionStatement",
															"src": "4253:40:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "3576:308:10",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3898:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3929:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3911:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1383,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3911:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "3911:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "3911:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3944:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3936:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3961:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3953:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3910:57:10"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3977:0:10"
									},
									"scope": 1571,
									"src": "3889:421:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "4688:257:10",
										"statements": [
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4706:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "4698:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4698:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"arguments": [
														{
															"id": 1453,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1451,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4720:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1195",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4726:6:10",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "4720:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4698:41:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4762:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "4769:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1461,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "4778:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1462,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "4785:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1463,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "4795:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1464,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "4798:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1465,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "4801:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1456,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4749:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1195",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4755:6:10",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "4749:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4749:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "4749:54:10"
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4821:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "4813:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4813:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"arguments": [
														{
															"id": 1472,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4847:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1470,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4834:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1195",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4840:6:10",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "4834:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4813:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1476,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "4871:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1477,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "4885:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4899:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4885:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4871:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4902:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4863:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "4863:75:10"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "4316:141:10",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4471:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4515:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4491:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1195",
													"typeString": "contract IERC20PermitUpgradeable"
												},
												"typeName": {
													"id": 1431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1430,
														"name": "IERC20PermitUpgradeable",
														"nameLocations": [
															"4491:23:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1195,
														"src": "4491:23:10"
													},
													"referencedDeclaration": 1195,
													"src": "4491:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1195",
														"typeString": "contract IERC20PermitUpgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4538:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4530:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4561:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4553:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4586:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4578:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4609:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4601:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4633:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4627:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1441,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4627:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4644:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4671:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4663:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:197:10"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4688:0:10"
									},
									"scope": 1571,
									"src": "4462:483:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "5409:572:10",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5771:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1521,
														"src": "5758:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1494,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5758:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"arguments": [
														{
															"id": 1501,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "5812:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5818:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "5792:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5784:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1496,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5784:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5799:12:10",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1661,
														"src": "5784:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5784:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:95:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1506,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5871:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5882:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5871:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5892:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5871:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1512,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5908:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5921:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 1513,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5921:4:10",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1515,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5920:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 1510,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5897:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5901:6:10",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5897:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5897:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5871:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5863:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5863:111:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "5863:111:10"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "4951:372:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5337:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5375:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "5357:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1487,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"5357:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "5357:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "5357:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5395:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "5382:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5382:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:44:10"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5409:0:10"
									},
									"scope": 1571,
									"src": "5328:653:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "6582:516:10",
										"statements": [
											{
												"assignments": [
													1534,
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6883:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "6878:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6878:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6905:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "6892:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6892:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1544,
												"initialValue": {
													"arguments": [
														{
															"id": 1542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "6939:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1539,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "6927:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6919:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1537,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6919:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6919:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6934:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6919:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6877:67:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1545,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "6973:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1546,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1536,
																				"src": "6985:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6996:6:10",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6985:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7006:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6985:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1552,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1536,
																				"src": "7022:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1554,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7035:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1553,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "7035:4:10",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1555,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7034:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1550,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "7011:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7015:6:10",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "7011:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7011:30:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6985:56:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6984:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6973:69:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1564,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "7084:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	],
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7076:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1562,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7076:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7076:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1560,
																"name": "AddressUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "7046:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1901_$",
																	"typeString": "type(library AddressUpgradeable)"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7065:10:10",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1589,
															"src": "7046:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7046:45:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6973:118:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1532,
												"id": 1568,
												"nodeType": "Return",
												"src": "6954:137:10"
											}
										]
									},
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "5987:490:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6491:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6533:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6515:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1524,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"6515:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1159,
														"src": "6515:17:10"
													},
													"referencedDeclaration": 1159,
													"src": "6515:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6553:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6540:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6540:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:44:10"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6576:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:6:10"
									},
									"scope": 1571,
									"src": "6482:616:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1572,
							"src": "734:6366:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6986:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1901
						]
					},
					"id": 1902,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1901,
							"linearizedBaseContracts": [
								1901
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "1489:254:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1582,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "1713:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1587,
												"nodeType": "Return",
												"src": "1706:30:11"
											}
										]
									},
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:11",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1443:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:11"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1483:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:11"
									},
									"scope": 1901,
									"src": "1423:320:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "2729:241:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1600,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1901",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1901",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1603,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "2772:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:11"
											},
											{
												"assignments": [
													1609,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "2824:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1608,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1616,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1610,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2842:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1612,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "2864:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "2893:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:11"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "2677:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "2704:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:11"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:11"
									},
									"scope": 1901,
									"src": "2658:312:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "3801:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1634,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "3840:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1635,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "3848:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1633,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1681,
															1725
														],
														"referencedDeclaration": 1725,
														"src": "3818:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1632,
												"id": 1639,
												"nodeType": "Return",
												"src": "3811:79:11"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3734:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3750:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:11"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3787:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:11"
									},
									"scope": 1901,
									"src": "3712:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "4266:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1654,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "4305:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "4313:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1657,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "4322:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1653,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1681,
															1725
														],
														"referencedDeclaration": 1725,
														"src": "4283:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1652,
												"id": 1659,
												"nodeType": "Return",
												"src": "4276:59:11"
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4150:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4174:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4201:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:11"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4252:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:11"
									},
									"scope": 1901,
									"src": "4119:223:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "4817:111:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1674,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "4856:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "4864:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1676,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "4870:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1673,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1681,
															1725
														],
														"referencedDeclaration": 1725,
														"src": "4834:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1672,
												"id": 1679,
												"nodeType": "Return",
												"src": "4827:94:11"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "4735:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "4751:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "4770:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:11"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "4803:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:11"
									},
									"scope": 1901,
									"src": "4704:224:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "5355:267:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1698,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1901",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1901",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1696,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1701,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "5398:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:11"
											},
											{
												"assignments": [
													1707,
													1709
												],
												"declarations": [
													{
														"constant": false,
														"id": 1707,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "5457:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1706,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1709,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "5471:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1716,
												"initialValue": {
													"arguments": [
														{
															"id": 1714,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "5524:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1710,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "5498:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1712,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "5517:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1718,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "5573:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1719,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "5581:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1720,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "5590:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1721,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "5602:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1717,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "5546:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1723,
												"nodeType": "Return",
												"src": "5539:76:11"
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:11",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "5216:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "5240:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "5267:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "5290:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:11"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "5341:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:11"
									},
									"scope": 1901,
									"src": "5176:446:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "5899:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1736,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "5935:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1737,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "5943:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1735,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1742,
															1771
														],
														"referencedDeclaration": 1771,
														"src": "5916:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1740,
												"nodeType": "Return",
												"src": "5909:80:11"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "5827:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "5843:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:11"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "5885:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:11"
									},
									"scope": 1901,
									"src": "5799:197:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "6338:168:11",
										"statements": [
											{
												"assignments": [
													1755,
													1757
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1770,
														"src": "6349:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1754,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1770,
														"src": "6363:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1756,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"arguments": [
														{
															"id": 1760,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "6408:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1758,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "6390:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1764,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "6457:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "6465:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1766,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "6474:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1767,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "6486:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1763,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "6430:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1769,
												"nodeType": "Return",
												"src": "6423:76:11"
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "6217:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "6241:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "6268:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:11"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "6324:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:11"
									},
									"scope": 1901,
									"src": "6180:326:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "6782:101:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1782,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "6820:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1783,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "6828:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1781,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1788,
															1817
														],
														"referencedDeclaration": 1817,
														"src": "6799:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1786,
												"nodeType": "Return",
												"src": "6792:84:11"
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6715:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6731:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:11"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6768:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:11"
									},
									"scope": 1901,
									"src": "6685:198:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "7224:170:11",
										"statements": [
											{
												"assignments": [
													1801,
													1803
												],
												"declarations": [
													{
														"constant": false,
														"id": 1801,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "7235:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1800,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1803,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "7249:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1802,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1808,
												"initialValue": {
													"arguments": [
														{
															"id": 1806,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "7296:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1804,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "7276:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1810,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "7345:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "7353:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1812,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "7362:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1813,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "7374:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1809,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "7318:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1799,
												"id": 1815,
												"nodeType": "Return",
												"src": "7311:76:11"
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "7108:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "7132:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "7159:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:11"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "7210:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1797,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:11"
									},
									"scope": 1901,
									"src": "7069:325:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "7876:434:11",
										"statements": [
											{
												"condition": {
													"id": 1831,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1822,
													"src": "7890:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1853,
													"nodeType": "Block",
													"src": "8246:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1849,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1824,
																		"src": "8268:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1850,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "8280:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1848,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "8260:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1852,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:11"
														}
													]
												},
												"id": 1854,
												"nodeType": "IfStatement",
												"src": "7886:418:11",
												"trueBody": {
													"id": 1847,
													"nodeType": "Block",
													"src": "7899:341:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1832,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1824,
																		"src": "7917:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:11",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1844,
															"nodeType": "IfStatement",
															"src": "7913:286:11",
															"trueBody": {
																"id": 1843,
																"nodeType": "Block",
																"src": "7941:258:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1838,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1820,
																							"src": "8143:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1837,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1589,
																						"src": "8132:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1840,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1836,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1842,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1845,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "8219:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1830,
															"id": 1846,
															"nodeType": "Return",
															"src": "8212:17:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "7727:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "7751:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "7773:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "7806:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:11"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "7862:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:11"
									},
									"scope": 1901,
									"src": "7682:628:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "8691:135:11",
										"statements": [
											{
												"condition": {
													"id": 1868,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1859,
													"src": "8705:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1877,
													"nodeType": "Block",
													"src": "8762:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1873,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "8784:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1874,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "8796:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1872,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "8776:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1876,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:11"
														}
													]
												},
												"id": 1878,
												"nodeType": "IfStatement",
												"src": "8701:119:11",
												"trueBody": {
													"id": 1871,
													"nodeType": "Block",
													"src": "8714:42:11",
													"statements": [
														{
															"expression": {
																"id": 1869,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "8735:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1867,
															"id": 1870,
															"nodeType": "Return",
															"src": "8728:17:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:11",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "8566:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "8588:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "8621:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:11"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "8677:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:11"
									},
									"scope": 1901,
									"src": "8531:295:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "8915:457:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1887,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "8991:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1897,
													"nodeType": "Block",
													"src": "9321:45:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1894,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1884,
																		"src": "9342:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1893,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1896,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:11"
														}
													]
												},
												"id": 1898,
												"nodeType": "IfStatement",
												"src": "8987:379:11",
												"trueBody": {
													"id": 1892,
													"nodeType": "Block",
													"src": "9014:301:11",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:11",
																"nodeType": "YulBlock",
																"src": "9172:133:11",
																"statements": [
																	{
																		"nativeSrc": "9190:40:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:11"
																			},
																			"nativeSrc": "9213:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:11",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:11",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:11"
																					},
																					"nativeSrc": "9254:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:11"
																			},
																			"nativeSrc": "9247:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:11"
																		},
																		"nativeSrc": "9247:44:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:11"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1882,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1882,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:11",
																	"valueSize": 1
																}
															],
															"id": 1891,
															"nodeType": "InlineAssembly",
															"src": "9163:142:11"
														}
													]
												}
											}
										]
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "8849:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "8874:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:11"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:11"
									},
									"scope": 1901,
									"src": "8832:540:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1902,
							"src": "194:9180:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1952
						],
						"Initializable": [
							944
						]
					},
					"id": 1953,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1903,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1953,
							"sourceUnit": 945,
							"src": "125:63:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1904,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 944,
										"src": "133:13:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1907,
										"name": "Initializable",
										"nameLocations": [
											"727:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "727:13:12"
									},
									"id": 1908,
									"nodeType": "InheritanceSpecifier",
									"src": "727:13:12"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1906,
								"nodeType": "StructuredDocumentation",
								"src": "190:496:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1952,
							"linearizedBaseContracts": [
								1952,
								944
							],
							"name": "ContextUpgradeable",
							"nameLocation": "705:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "799:7:12",
										"statements": []
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1911,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1910,
												"name": "onlyInitializing",
												"nameLocations": [
													"782:16:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "782:16:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:16:12"
										}
									],
									"name": "__Context_init",
									"nameLocation": "756:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:12"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:12"
									},
									"scope": 1952,
									"src": "747:59:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "874:7:12",
										"statements": []
									},
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1916,
												"name": "onlyInitializing",
												"nameLocations": [
													"857:16:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "857:16:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:16:12"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "821:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:12"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:12"
									},
									"scope": 1952,
									"src": "812:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "948:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1925,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "965:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "969:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "965:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1924,
												"id": 1927,
												"nodeType": "Return",
												"src": "958:17:12"
											}
										]
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "895:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:12"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "939:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:12"
									},
									"scope": 1952,
									"src": "886:96:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "1055:32:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1934,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1072:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1076:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1072:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1933,
												"id": 1936,
												"nodeType": "Return",
												"src": "1065:15:12"
											}
										]
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "997:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:12"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1039:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1039:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:16:12"
									},
									"scope": 1952,
									"src": "988:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "1165:25:12",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1182:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1942,
												"id": 1944,
												"nodeType": "Return",
												"src": "1175:8:12"
											}
										]
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1102:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:12"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1156:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:9:12"
									},
									"scope": 1952,
									"src": "1093:97:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1196:254:12",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1951,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1475:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1952,
									"src": "1455:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1948,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1455:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1950,
										"length": {
											"hexValue": "3530",
											"id": 1949,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1463:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1455:11:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1953,
							"src": "687:796:12",
							"usedErrors": [],
							"usedEvents": [
								790
							]
						}
					],
					"src": "101:1383:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							2062
						]
					},
					"id": 2063,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1955,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:13",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 2062,
							"linearizedBaseContracts": [
								2062
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1428:22:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1958,
									"members": [
										{
											"constant": false,
											"id": 1957,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1494:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "1486:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1956,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1486:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1464:11:13",
									"nodeType": "StructDefinition",
									"scope": 2062,
									"src": "1457:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1961,
									"members": [
										{
											"constant": false,
											"id": 1960,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1546:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1961,
											"src": "1541:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1959,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1541:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1519:11:13",
									"nodeType": "StructDefinition",
									"scope": 2062,
									"src": "1512:46:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1964,
									"members": [
										{
											"constant": false,
											"id": 1963,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1601:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1964,
											"src": "1593:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1962,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1593:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1571:11:13",
									"nodeType": "StructDefinition",
									"scope": 2062,
									"src": "1564:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1967,
									"members": [
										{
											"constant": false,
											"id": 1966,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1656:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1967,
											"src": "1648:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1965,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1648:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1626:11:13",
									"nodeType": "StructDefinition",
									"scope": 2062,
									"src": "1619:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.StringSlot",
									"id": 1970,
									"members": [
										{
											"constant": false,
											"id": 1969,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1709:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1970,
											"src": "1702:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1968,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1702:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1681:10:13",
									"nodeType": "StructDefinition",
									"scope": 2062,
									"src": "1674:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BytesSlot",
									"id": 1973,
									"members": [
										{
											"constant": false,
											"id": 1972,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1760:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1973,
											"src": "1754:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1971,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1754:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1734:9:13",
									"nodeType": "StructDefinition",
									"scope": 2062,
									"src": "1727:45:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "1954:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2016:38:13",
													"nodeType": "YulBlock",
													"src": "2016:38:13",
													"statements": [
														{
															"nativeSrc": "2030:14:13",
															"nodeType": "YulAssignment",
															"src": "2030:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2040:4:13",
																"nodeType": "YulIdentifier",
																"src": "2040:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2030:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1980,
														"isOffset": false,
														"isSlot": true,
														"src": "2030:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1976,
														"isOffset": false,
														"isSlot": false,
														"src": "2040:4:13",
														"valueSize": 1
													}
												],
												"id": 1982,
												"nodeType": "InlineAssembly",
												"src": "2007:47:13"
											}
										]
									},
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "1778:87:13",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1879:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1902:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1894:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1975,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:14:13"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1951:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1931:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1979,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1978,
														"name": "AddressSlot",
														"nameLocations": [
															"1931:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "1931:11:13"
													},
													"referencedDeclaration": 1958,
													"src": "1931:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1958_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:23:13"
									},
									"scope": 2062,
									"src": "1870:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "2242:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2304:38:13",
													"nodeType": "YulBlock",
													"src": "2304:38:13",
													"statements": [
														{
															"nativeSrc": "2318:14:13",
															"nodeType": "YulAssignment",
															"src": "2318:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2328:4:13",
																"nodeType": "YulIdentifier",
																"src": "2328:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2318:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1991,
														"isOffset": false,
														"isSlot": true,
														"src": "2318:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1987,
														"isOffset": false,
														"isSlot": false,
														"src": "2328:4:13",
														"valueSize": 1
													}
												],
												"id": 1993,
												"nodeType": "InlineAssembly",
												"src": "2295:47:13"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "2066:87:13",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2167:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2190:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "2182:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:14:13"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2239:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "2219:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1961_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1989,
														"name": "BooleanSlot",
														"nameLocations": [
															"2219:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1961,
														"src": "2219:11:13"
													},
													"referencedDeclaration": 1961,
													"src": "2219:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1961_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:23:13"
									},
									"scope": 2062,
									"src": "2158:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "2530:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2592:38:13",
													"nodeType": "YulBlock",
													"src": "2592:38:13",
													"statements": [
														{
															"nativeSrc": "2606:14:13",
															"nodeType": "YulAssignment",
															"src": "2606:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2616:4:13",
																"nodeType": "YulIdentifier",
																"src": "2616:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2606:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2002,
														"isOffset": false,
														"isSlot": true,
														"src": "2606:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1998,
														"isOffset": false,
														"isSlot": false,
														"src": "2616:4:13",
														"valueSize": 1
													}
												],
												"id": 2004,
												"nodeType": "InlineAssembly",
												"src": "2583:47:13"
											}
										]
									},
									"documentation": {
										"id": 1996,
										"nodeType": "StructuredDocumentation",
										"src": "2354:87:13",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2455:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2478:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "2470:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:14:13"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2527:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "2507:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1964_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 2001,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2000,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2507:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1964,
														"src": "2507:11:13"
													},
													"referencedDeclaration": 1964,
													"src": "2507:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1964_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:23:13"
									},
									"scope": 2062,
									"src": "2446:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "2818:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2880:38:13",
													"nodeType": "YulBlock",
													"src": "2880:38:13",
													"statements": [
														{
															"nativeSrc": "2894:14:13",
															"nodeType": "YulAssignment",
															"src": "2894:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2904:4:13",
																"nodeType": "YulIdentifier",
																"src": "2904:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2894:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2013,
														"isOffset": false,
														"isSlot": true,
														"src": "2894:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2009,
														"isOffset": false,
														"isSlot": false,
														"src": "2904:4:13",
														"valueSize": 1
													}
												],
												"id": 2015,
												"nodeType": "InlineAssembly",
												"src": "2871:47:13"
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "2642:87:13",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2743:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2766:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "2758:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2008,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:14:13"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2815:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "2795:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1967_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 2012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2011,
														"name": "Uint256Slot",
														"nameLocations": [
															"2795:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1967,
														"src": "2795:11:13"
													},
													"referencedDeclaration": 1967,
													"src": "2795:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1967_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:23:13"
									},
									"scope": 2062,
									"src": "2734:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "3103:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3165:38:13",
													"nodeType": "YulBlock",
													"src": "3165:38:13",
													"statements": [
														{
															"nativeSrc": "3179:14:13",
															"nodeType": "YulAssignment",
															"src": "3179:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3189:4:13",
																"nodeType": "YulIdentifier",
																"src": "3189:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3179:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": true,
														"src": "3179:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2020,
														"isOffset": false,
														"isSlot": false,
														"src": "3189:4:13",
														"valueSize": 1
													}
												],
												"id": 2026,
												"nodeType": "InlineAssembly",
												"src": "3156:47:13"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "2930:86:13",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3030:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3052:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "3044:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2019,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:14:13"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3100:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "3081:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1970_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 2023,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2022,
														"name": "StringSlot",
														"nameLocations": [
															"3081:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1970,
														"src": "3081:10:13"
													},
													"referencedDeclaration": 1970,
													"src": "3081:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1970_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:22:13"
									},
									"scope": 2062,
									"src": "3021:188:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "3411:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3473:44:13",
													"nodeType": "YulBlock",
													"src": "3473:44:13",
													"statements": [
														{
															"nativeSrc": "3487:20:13",
															"nodeType": "YulAssignment",
															"src": "3487:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3497:10:13",
																"nodeType": "YulIdentifier",
																"src": "3497:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3487:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2035,
														"isOffset": false,
														"isSlot": true,
														"src": "3487:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2031,
														"isOffset": false,
														"isSlot": true,
														"src": "3497:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2037,
												"nodeType": "InlineAssembly",
												"src": "3464:53:13"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "3215:101:13",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3330:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3359:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3344:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3344:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:22:13"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3408:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3389:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1970_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 2034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2033,
														"name": "StringSlot",
														"nameLocations": [
															"3389:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1970,
														"src": "3389:10:13"
													},
													"referencedDeclaration": 1970,
													"src": "3389:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1970_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:22:13"
									},
									"scope": 2062,
									"src": "3321:202:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "3699:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3761:38:13",
													"nodeType": "YulBlock",
													"src": "3761:38:13",
													"statements": [
														{
															"nativeSrc": "3775:14:13",
															"nodeType": "YulAssignment",
															"src": "3775:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3785:4:13",
																"nodeType": "YulIdentifier",
																"src": "3785:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3775:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2046,
														"isOffset": false,
														"isSlot": true,
														"src": "3775:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2042,
														"isOffset": false,
														"isSlot": false,
														"src": "3785:4:13",
														"valueSize": 1
													}
												],
												"id": 2048,
												"nodeType": "InlineAssembly",
												"src": "3752:47:13"
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "3529:85:13",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3628:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3649:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "3641:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2041,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:14:13"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3696:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "3678:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1973_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 2045,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2044,
														"name": "BytesSlot",
														"nameLocations": [
															"3678:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "3678:9:13"
													},
													"referencedDeclaration": 1973,
													"src": "3678:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1973_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:21:13"
									},
									"scope": 2062,
									"src": "3619:186:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "4002:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4064:44:13",
													"nodeType": "YulBlock",
													"src": "4064:44:13",
													"statements": [
														{
															"nativeSrc": "4078:20:13",
															"nodeType": "YulAssignment",
															"src": "4078:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4088:10:13",
																"nodeType": "YulIdentifier",
																"src": "4088:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4078:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2057,
														"isOffset": false,
														"isSlot": true,
														"src": "4078:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2053,
														"isOffset": false,
														"isSlot": true,
														"src": "4088:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2059,
												"nodeType": "InlineAssembly",
												"src": "4055:53:13"
											}
										]
									},
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "3811:99:13",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3924:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3951:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "3937:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3937:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:21:13"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3999:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "3981:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1973_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 2056,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2055,
														"name": "BytesSlot",
														"nameLocations": [
															"3981:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "3981:9:13"
													},
													"referencedDeclaration": 1973,
													"src": "3981:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1973_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:21:13"
									},
									"scope": 2062,
									"src": "3915:199:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2063,
							"src": "1420:2696:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3924:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3214
						],
						"SignedMathUpgradeable": [
							3319
						],
						"StringsUpgradeable": [
							2291
						]
					},
					"id": 2292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2064,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 2065,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2292,
							"sourceUnit": 3215,
							"src": "126:36:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
							"file": "./math/SignedMathUpgradeable.sol",
							"id": 2066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2292,
							"sourceUnit": 3320,
							"src": "163:42:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2067,
								"nodeType": "StructuredDocumentation",
								"src": "207:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2291,
							"linearizedBaseContracts": [
								2291
							],
							"name": "StringsUpgradeable",
							"nameLocation": "250:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2070,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "300:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2291,
									"src": "275:54:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2068,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2069,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2073,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "358:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 2291,
									"src": "335:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2071,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2072,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "551:636:14",
										"statements": [
											{
												"id": 2119,
												"nodeType": "UncheckedBlock",
												"src": "561:620:14",
												"statements": [
													{
														"assignments": [
															2082
														],
														"declarations": [
															{
																"constant": false,
																"id": 2082,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "593:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2119,
																"src": "585:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "585:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2089,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2085,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "624:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2083,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3214,
																		"src": "602:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3214_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "618:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3051,
																	"src": "602:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "602:28:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "585:49:14"
													},
													{
														"assignments": [
															2091
														],
														"declarations": [
															{
																"constant": false,
																"id": 2091,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "662:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2119,
																"src": "648:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2090,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2096,
														"initialValue": {
															"arguments": [
																{
																	"id": 2094,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "682:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "671:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2092,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:41:14"
													},
													{
														"assignments": [
															2098
														],
														"declarations": [
															{
																"constant": false,
																"id": 2098,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "711:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 2119,
																"src": "703:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2097,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "703:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2099,
														"nodeType": "VariableDeclarationStatement",
														"src": "703:11:14"
													},
													{
														"AST": {
															"nativeSrc": "784:67:14",
															"nodeType": "YulBlock",
															"src": "784:67:14",
															"statements": [
																{
																	"nativeSrc": "802:35:14",
																	"nodeType": "YulAssignment",
																	"src": "802:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "813:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "825:2:14",
																						"nodeType": "YulLiteral",
																						"src": "825:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "829:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "821:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:14"
																				},
																				"nativeSrc": "821:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "821:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "809:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:14"
																		},
																		"nativeSrc": "809:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "809:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "802:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2091,
																"isOffset": false,
																"isSlot": false,
																"src": "813:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "829:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2098,
																"isOffset": false,
																"isSlot": false,
																"src": "802:3:14",
																"valueSize": 1
															}
														],
														"id": 2100,
														"nodeType": "InlineAssembly",
														"src": "775:76:14"
													},
													{
														"body": {
															"id": 2115,
															"nodeType": "Block",
															"src": "877:267:14",
															"statements": [
																{
																	"expression": {
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "895:5:14",
																		"subExpression": {
																			"id": 2102,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "895:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2104,
																	"nodeType": "ExpressionStatement",
																	"src": "895:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "978:84:14",
																		"nodeType": "YulBlock",
																		"src": "978:84:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1008:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1008:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1022:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1022:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1029:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1029:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1018:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1018:3:14"
																									},
																									"nativeSrc": "1018:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1018:14:14"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "1034:8:14",
																									"nodeType": "YulIdentifier",
																									"src": "1034:8:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1013:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1013:4:14"
																							},
																							"nativeSrc": "1013:30:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1013:30:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1000:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1000:7:14"
																					},
																					"nativeSrc": "1000:44:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1000:44:14"
																				},
																				"nativeSrc": "1000:44:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1000:44:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2070,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1034:8:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2098,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1008:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2076,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1022:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 2105,
																	"nodeType": "InlineAssembly",
																	"src": "969:93:14"
																},
																{
																	"expression": {
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2106,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "1079:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1088:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1079:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2109,
																	"nodeType": "ExpressionStatement",
																	"src": "1079:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2110,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "1112:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1121:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1112:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2114,
																	"nodeType": "IfStatement",
																	"src": "1108:21:14",
																	"trueBody": {
																		"id": 2113,
																		"nodeType": "Break",
																		"src": "1124:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2116,
														"nodeType": "WhileStatement",
														"src": "864:280:14"
													},
													{
														"expression": {
															"id": 2117,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "1164:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2080,
														"id": 2118,
														"nodeType": "Return",
														"src": "1157:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "385:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "489:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "498:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:14"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "536:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2078,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:15:14"
									},
									"scope": 2291,
									"src": "480:707:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "1357:114:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2133,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2124,
																			"src": "1398:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:14",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2142,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "1455:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 2140,
																					"name": "SignedMathUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3319,
																					"src": "1429:21:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMathUpgradeable_$3319_$",
																						"typeString": "type(library SignedMathUpgradeable)"
																					}
																				},
																				"id": 2141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1451:3:14",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3318,
																				"src": "1429:25:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:32:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2139,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2121,
																			2149
																		],
																		"referencedDeclaration": 2121,
																		"src": "1420:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:42:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2131,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:14",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:82:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2129,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:90:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2128,
												"id": 2147,
												"nodeType": "Return",
												"src": "1367:97:14"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "1193:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1296:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1312:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "1305:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:14:14"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "1342:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:14"
									},
									"scope": 2291,
									"src": "1287:184:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "1650:111:14",
										"statements": [
											{
												"id": 2167,
												"nodeType": "UncheckedBlock",
												"src": "1660:95:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "1703:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2161,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2152,
																				"src": "1733:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2159,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3214,
																				"src": "1710:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3214_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 2160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1726:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3174,
																			"src": "1710:22:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1710:29:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1710:33:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2157,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2169,
																	2245,
																	2265
																],
																"referencedDeclaration": 2245,
																"src": "1691:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:53:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2156,
														"id": 2166,
														"nodeType": "Return",
														"src": "1684:60:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "1477:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1585:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1605:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "1597:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:15:14"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "1635:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1635:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:15:14"
									},
									"scope": 2291,
									"src": "1576:185:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "1974:347:14",
										"statements": [
											{
												"assignments": [
													2180
												],
												"declarations": [
													{
														"constant": false,
														"id": 2180,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1997:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2244,
														"src": "1984:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2179,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1984:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2189,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2016:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2184,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "2020:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2016:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2006:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2010:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:47:14"
											},
											{
												"expression": {
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2190,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "2041:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2192,
														"indexExpression": {
															"hexValue": "30",
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2053:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2041:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2195,
												"nodeType": "ExpressionStatement",
												"src": "2041:15:14"
											},
											{
												"expression": {
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2196,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "2066:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2198,
														"indexExpression": {
															"hexValue": "31",
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2066:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "2066:15:14"
											},
											{
												"body": {
													"id": 2230,
													"nodeType": "Block",
													"src": "2136:83:14",
													"statements": [
														{
															"expression": {
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2216,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "2150:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2218,
																	"indexExpression": {
																		"id": 2217,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "2157:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2150:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2219,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "2162:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2223,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2172,
																			"src": "2171:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2179:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2171:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2162:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2150:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2225,
															"nodeType": "ExpressionStatement",
															"src": "2150:33:14"
														},
														{
															"expression": {
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2226,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "2197:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2207:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2197:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2229,
															"nodeType": "ExpressionStatement",
															"src": "2197:11:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2210,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "2124:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2124:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"initializationExpression": {
													"assignments": [
														2203
													],
													"declarations": [
														{
															"constant": false,
															"id": 2203,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2104:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2231,
															"src": "2096:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2202,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2096:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2209,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2205,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "2112:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2108:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2096:26:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2131:3:14",
														"subExpression": {
															"id": 2213,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "2133:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2215,
													"nodeType": "ExpressionStatement",
													"src": "2131:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2091:128:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "2236:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "2228:55:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2241,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "2307:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2300:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2239,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2300:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2178,
												"id": 2243,
												"nodeType": "Return",
												"src": "2293:21:14"
											}
										]
									},
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "1767:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1893:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "1905:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1928:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "1920:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:31:14"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "1959:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:14"
									},
									"scope": 2291,
									"src": "1884:437:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "2546:76:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2258,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "2591:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2583:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2256,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2583:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2583:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2575:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2254,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2575:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2261,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "2599:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2253,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2169,
															2245,
															2265
														],
														"referencedDeclaration": 2245,
														"src": "2563:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2252,
												"id": 2263,
												"nodeType": "Return",
												"src": "2556:59:14"
											}
										]
									},
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "2327:141:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2482:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2502:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "2494:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:14:14"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "2531:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2531:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:14"
									},
									"scope": 2291,
									"src": "2473:149:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2289,
										"nodeType": "Block",
										"src": "2777:66:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2278,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "2810:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2804:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2276,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2804:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2275,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2794:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:19:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2284,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "2833:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2827:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2282,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2827:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2281,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2817:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:19:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2794:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2274,
												"id": 2288,
												"nodeType": "Return",
												"src": "2787:49:14"
											}
										]
									},
									"documentation": {
										"id": 2266,
										"nodeType": "StructuredDocumentation",
										"src": "2628:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2708:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2728:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "2714:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2745:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "2731:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2731:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:34:14"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "2771:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:14"
									},
									"scope": 2291,
									"src": "2699:144:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2292,
							"src": "242:2603:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2745:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							2336
						],
						"IERC165Upgradeable": [
							2348
						],
						"Initializable": [
							944
						]
					},
					"id": 2337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2293,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 2294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2337,
							"sourceUnit": 2349,
							"src": "124:34:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 2296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2337,
							"sourceUnit": 945,
							"src": "159:66:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2295,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 944,
										"src": "167:13:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2298,
										"name": "Initializable",
										"nameLocations": [
											"843:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "843:13:15"
									},
									"id": 2299,
									"nodeType": "InheritanceSpecifier",
									"src": "843:13:15"
								},
								{
									"baseName": {
										"id": 2300,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"858:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2348,
										"src": "858:18:15"
									},
									"id": 2301,
									"nodeType": "InheritanceSpecifier",
									"src": "858:18:15"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2297,
								"nodeType": "StructuredDocumentation",
								"src": "227:576:15",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2336,
							"linearizedBaseContracts": [
								2336,
								2348,
								944
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "822:17:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "934:7:15",
										"statements": []
									},
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2303,
												"name": "onlyInitializing",
												"nameLocations": [
													"917:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "917:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "917:16:15"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "892:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:15"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:0:15"
									},
									"scope": 2336,
									"src": "883:58:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "1008:7:15",
										"statements": []
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2309,
												"name": "onlyInitializing",
												"nameLocations": [
													"991:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "991:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "991:16:15"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "956:23:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:2:15"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:15"
									},
									"scope": 2336,
									"src": "947:68:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2347
									],
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "1172:75:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2322,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "1189:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2324,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "1209:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2348_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2348_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 2323,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1204:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1204:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$2348",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1229:11:15",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1204:36:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1189:51:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2321,
												"id": 2328,
												"nodeType": "Return",
												"src": "1182:58:15"
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "1020:56:15",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1090:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1148:8:15"
									},
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1115:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "1108:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2315,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1108:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:20:15"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "1166:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1166:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:6:15"
									},
									"scope": 2336,
									"src": "1081:166:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "1253:254:15",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 2335,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1532:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 2336,
									"src": "1512:25:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2332,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2334,
										"length": {
											"hexValue": "3530",
											"id": 2333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1520:2:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1512:11:15",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2337,
							"src": "804:736:15",
							"usedErrors": [],
							"usedEvents": [
								790
							]
						}
					],
					"src": "99:1442:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							2348
						]
					},
					"id": 2349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2339,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:16",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2348,
							"linearizedBaseContracts": [
								2348
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "812:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2341,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:16"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "855:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:16"
									},
									"scope": 2348,
									"src": "785:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2349,
							"src": "405:458:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3214
						]
					},
					"id": 3215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2350,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2351,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:17",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3214,
							"linearizedBaseContracts": [
								3214
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 2355,
									"members": [
										{
											"id": 2352,
											"name": "Down",
											"nameLocation": "256:4:17",
											"nodeType": "EnumValue",
											"src": "256:4:17"
										},
										{
											"id": 2353,
											"name": "Up",
											"nameLocation": "298:2:17",
											"nodeType": "EnumValue",
											"src": "298:2:17"
										},
										{
											"id": 2354,
											"name": "Zero",
											"nameLocation": "329:4:17",
											"nodeType": "EnumValue",
											"src": "329:4:17"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:17",
									"nodeType": "EnumDefinition",
									"src": "232:122:17"
								},
								{
									"body": {
										"id": 2372,
										"nodeType": "Block",
										"src": "491:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2365,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "508:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2366,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "512:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2369,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "520:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:17",
													"trueExpression": {
														"id": 2368,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "516:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2364,
												"id": 2371,
												"nodeType": "Return",
												"src": "501:20:17"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:17",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "437:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "448:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:17"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "482:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:17"
									},
									"scope": 3214,
									"src": "424:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "666:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2383,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "683:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2384,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "687:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "695:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:17",
													"trueExpression": {
														"id": 2386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2376,
														"src": "691:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2382,
												"id": 2389,
												"nodeType": "Return",
												"src": "676:20:17"
											}
										]
									},
									"documentation": {
										"id": 2374,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:17",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "612:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "623:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:17"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "657:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:17"
									},
									"scope": 3214,
									"src": "599:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2413,
										"nodeType": "Block",
										"src": "887:82:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2401,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "942:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2402,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "946:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2404,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2405,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "952:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2406,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "956:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2408,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2400,
												"id": 2412,
												"nodeType": "Return",
												"src": "934:28:17"
											}
										]
									},
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:17",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "833:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "844:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:17"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "878:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:17"
									},
									"scope": 3214,
									"src": "816:153:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "1239:123:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2424,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "1327:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2428,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2417,
																			"src": "1341:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2431,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2419,
																"src": "1350:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:17",
													"trueExpression": {
														"hexValue": "30",
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2423,
												"id": 2437,
												"nodeType": "Return",
												"src": "1320:35:17"
											}
										]
									},
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:17",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "1185:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "1196:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:17"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "1230:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:17"
									},
									"scope": 3214,
									"src": "1168:194:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "1776:4115:17",
										"statements": [
											{
												"id": 2560,
												"nodeType": "UncheckedBlock",
												"src": "1786:4099:17",
												"statements": [
													{
														"assignments": [
															2452
														],
														"declarations": [
															{
																"constant": false,
																"id": 2452,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2115:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2560,
																"src": "2107:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2451,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2107:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2453,
														"nodeType": "VariableDeclarationStatement",
														"src": "2107:13:17"
													},
													{
														"assignments": [
															2455
														],
														"declarations": [
															{
																"constant": false,
																"id": 2455,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2187:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2560,
																"src": "2179:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2454,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2456,
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:13:17"
													},
													{
														"AST": {
															"nativeSrc": "2259:157:17",
															"nodeType": "YulBlock",
															"src": "2259:157:17",
															"statements": [
																{
																	"nativeSrc": "2277:30:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2277:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2294:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2294:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2297:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2297:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2304:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2304:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2300:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:17"
																				},
																				"nativeSrc": "2300:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2300:6:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2287:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:17"
																		},
																		"nativeSrc": "2287:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:17"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2281:2:17",
																			"nodeType": "YulTypedName",
																			"src": "2281:2:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2324:18:17",
																	"nodeType": "YulAssignment",
																	"src": "2324:18:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2337:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2337:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2340:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "2340:1:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2333:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:17"
																		},
																		"nativeSrc": "2333:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:9:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2324:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "2324:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "2359:43:17",
																	"nodeType": "YulAssignment",
																	"src": "2359:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2376:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2380:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2380:5:17"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2372:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:17"
																				},
																				"nativeSrc": "2372:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:14:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2391:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2391:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2395:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2395:5:17"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2388:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "2388:2:17"
																				},
																				"nativeSrc": "2388:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2388:13:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2368:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:17"
																		},
																		"nativeSrc": "2368:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2368:34:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2359:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "2359:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "2380:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "2395:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2455,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2442,
																"isOffset": false,
																"isSlot": false,
																"src": "2294:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2442,
																"isOffset": false,
																"isSlot": false,
																"src": "2337:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2444,
																"isOffset": false,
																"isSlot": false,
																"src": "2297:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2444,
																"isOffset": false,
																"isSlot": false,
																"src": "2340:1:17",
																"valueSize": 1
															}
														],
														"id": 2457,
														"nodeType": "InlineAssembly",
														"src": "2250:166:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2458,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2455,
																"src": "2497:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2466,
														"nodeType": "IfStatement",
														"src": "2493:368:17",
														"trueBody": {
															"id": 2465,
															"nodeType": "Block",
															"src": "2509:352:17",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2461,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "2827:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2462,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2446,
																			"src": "2835:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2827:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2450,
																	"id": 2464,
																	"nodeType": "Return",
																	"src": "2820:26:17"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2468,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "2971:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2469,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2455,
																		"src": "2985:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2971:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 2467,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2963:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:53:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2473,
														"nodeType": "ExpressionStatement",
														"src": "2963:53:17"
													},
													{
														"assignments": [
															2475
														],
														"declarations": [
															{
																"constant": false,
																"id": 2475,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3280:9:17",
																"nodeType": "VariableDeclaration",
																"scope": 2560,
																"src": "3272:17:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2474,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2476,
														"nodeType": "VariableDeclarationStatement",
														"src": "3272:17:17"
													},
													{
														"AST": {
															"nativeSrc": "3312:291:17",
															"nodeType": "YulBlock",
															"src": "3312:291:17",
															"statements": [
																{
																	"nativeSrc": "3381:38:17",
																	"nodeType": "YulAssignment",
																	"src": "3381:38:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3401:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "3401:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3404:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:17"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3407:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "3407:11:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3394:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:17"
																		},
																		"nativeSrc": "3394:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:25:17"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3381:9:17",
																			"nodeType": "YulIdentifier",
																			"src": "3381:9:17"
																		}
																	]
																},
																{
																	"nativeSrc": "3501:41:17",
																	"nodeType": "YulAssignment",
																	"src": "3501:41:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3514:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3524:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3524:9:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3535:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3535:5:17"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3521:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:17"
																				},
																				"nativeSrc": "3521:20:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3521:20:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3510:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:17"
																		},
																		"nativeSrc": "3510:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:32:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3501:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3501:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "3559:30:17",
																	"nodeType": "YulAssignment",
																	"src": "3559:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3572:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:17"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3579:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3568:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:17"
																		},
																		"nativeSrc": "3568:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3568:21:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3559:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3559:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2446,
																"isOffset": false,
																"isSlot": false,
																"src": "3407:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "3535:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "3559:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "3572:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2455,
																"isOffset": false,
																"isSlot": false,
																"src": "3501:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2455,
																"isOffset": false,
																"isSlot": false,
																"src": "3514:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2475,
																"isOffset": false,
																"isSlot": false,
																"src": "3381:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2475,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2475,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2442,
																"isOffset": false,
																"isSlot": false,
																"src": "3401:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2444,
																"isOffset": false,
																"isSlot": false,
																"src": "3404:1:17",
																"valueSize": 1
															}
														],
														"id": 2477,
														"nodeType": "InlineAssembly",
														"src": "3303:300:17"
													},
													{
														"assignments": [
															2479
														],
														"declarations": [
															{
																"constant": false,
																"id": 2479,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3918:4:17",
																"nodeType": "VariableDeclaration",
																"scope": 2560,
																"src": "3910:12:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2478,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2487,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2480,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2446,
																"src": "3925:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3940:12:17",
																			"subExpression": {
																				"id": 2481,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2446,
																				"src": "3941:11:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3955:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3940:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3939:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3910:47:17"
													},
													{
														"AST": {
															"nativeSrc": "3980:362:17",
															"nodeType": "YulBlock",
															"src": "3980:362:17",
															"statements": [
																{
																	"nativeSrc": "4045:37:17",
																	"nodeType": "YulAssignment",
																	"src": "4045:37:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4064:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "4064:11:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4077:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "4077:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4060:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:17"
																		},
																		"nativeSrc": "4060:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:22:17"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4045:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "4045:11:17"
																		}
																	]
																},
																{
																	"nativeSrc": "4149:25:17",
																	"nodeType": "YulAssignment",
																	"src": "4149:25:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4162:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4162:5:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4169:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4158:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:17"
																		},
																		"nativeSrc": "4158:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:16:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4149:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "4149:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "4289:39:17",
																	"nodeType": "YulAssignment",
																	"src": "4289:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4309:1:17",
																								"nodeType": "YulLiteral",
																								"src": "4309:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4312:4:17",
																								"nodeType": "YulIdentifier",
																								"src": "4312:4:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4305:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "4305:3:17"
																						},
																						"nativeSrc": "4305:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "4305:12:17"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4319:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "4319:4:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4301:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:17"
																				},
																				"nativeSrc": "4301:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4301:23:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:17"
																		},
																		"nativeSrc": "4297:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:31:17"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4289:4:17",
																			"nodeType": "YulIdentifier",
																			"src": "4289:4:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2446,
																"isOffset": false,
																"isSlot": false,
																"src": "4045:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2446,
																"isOffset": false,
																"isSlot": false,
																"src": "4064:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "4149:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "4162:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2479,
																"isOffset": false,
																"isSlot": false,
																"src": "4077:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2479,
																"isOffset": false,
																"isSlot": false,
																"src": "4169:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2479,
																"isOffset": false,
																"isSlot": false,
																"src": "4289:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2479,
																"isOffset": false,
																"isSlot": false,
																"src": "4312:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2479,
																"isOffset": false,
																"isSlot": false,
																"src": "4319:4:17",
																"valueSize": 1
															}
														],
														"id": 2488,
														"nodeType": "InlineAssembly",
														"src": "3971:371:17"
													},
													{
														"expression": {
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2489,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2452,
																"src": "4408:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2490,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2455,
																	"src": "4417:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2491,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "4425:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4417:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4408:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2494,
														"nodeType": "ExpressionStatement",
														"src": "4408:21:17"
													},
													{
														"assignments": [
															2496
														],
														"declarations": [
															{
																"constant": false,
																"id": 2496,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4755:7:17",
																"nodeType": "VariableDeclaration",
																"scope": 2560,
																"src": "4747:15:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2495,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4747:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2503,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4766:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2498,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2446,
																			"src": "4770:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4766:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2500,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4765:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4785:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4765:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4747:39:17"
													},
													{
														"expression": {
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2504,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "5003:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2506,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "5018:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2507,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "5032:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5018:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5014:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5003:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2511,
														"nodeType": "ExpressionStatement",
														"src": "5003:36:17"
													},
													{
														"expression": {
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2512,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "5072:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2514,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "5087:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2515,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "5101:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5072:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2519,
														"nodeType": "ExpressionStatement",
														"src": "5072:36:17"
													},
													{
														"expression": {
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2520,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "5142:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5153:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2522,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "5157:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2523,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "5171:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5157:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5153:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5142:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2527,
														"nodeType": "ExpressionStatement",
														"src": "5142:36:17"
													},
													{
														"expression": {
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2528,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "5212:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5223:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2530,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "5227:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2531,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "5241:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5227:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5212:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2535,
														"nodeType": "ExpressionStatement",
														"src": "5212:36:17"
													},
													{
														"expression": {
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2536,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "5282:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2538,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "5297:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2539,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "5311:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5297:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5293:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5282:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2543,
														"nodeType": "ExpressionStatement",
														"src": "5282:36:17"
													},
													{
														"expression": {
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2544,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "5353:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2546,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "5368:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2547,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "5382:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5368:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5353:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2551,
														"nodeType": "ExpressionStatement",
														"src": "5353:36:17"
													},
													{
														"expression": {
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2552,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "5823:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2553,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "5832:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2554,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2496,
																	"src": "5840:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2557,
														"nodeType": "ExpressionStatement",
														"src": "5823:24:17"
													},
													{
														"expression": {
															"id": 2558,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "5868:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2450,
														"id": 2559,
														"nodeType": "Return",
														"src": "5861:13:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:17",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1702:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "1694:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1713:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "1705:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1724:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "1716:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:43:17"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1768:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "1760:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:16:17"
									},
									"scope": 3214,
									"src": "1678:4213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2605,
										"nodeType": "Block",
										"src": "6133:189:17",
										"statements": [
											{
												"assignments": [
													2578
												],
												"declarations": [
													{
														"constant": false,
														"id": 2578,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6151:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2605,
														"src": "6143:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6143:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2584,
												"initialValue": {
													"arguments": [
														{
															"id": 2580,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "6167:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2581,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "6170:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2582,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "6173:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2579,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2562,
															2606
														],
														"referencedDeclaration": 2562,
														"src": "6160:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:42:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2355",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 2588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2585,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2572,
															"src": "6199:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2355",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2586,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "6211:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2355_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6220:2:17",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2353,
															"src": "6211:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2355",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "6199:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2590,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "6233:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2591,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "6236:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2592,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "6239:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2589,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6226:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6226:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6199:56:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2602,
												"nodeType": "IfStatement",
												"src": "6195:98:17",
												"trueBody": {
													"id": 2601,
													"nodeType": "Block",
													"src": "6257:36:17",
													"statements": [
														{
															"expression": {
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2597,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "6271:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6271:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2600,
															"nodeType": "ExpressionStatement",
															"src": "6271:11:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2603,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2578,
													"src": "6309:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2576,
												"id": 2604,
												"nodeType": "Return",
												"src": "6302:13:17"
											}
										]
									},
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "5897:121:17",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6032:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6047:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6039:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6058:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6050:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6069:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6061:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6091:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6082:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2355",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2571,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2570,
														"name": "Rounding",
														"nameLocations": [
															"6082:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2355,
														"src": "6082:8:17"
													},
													"referencedDeclaration": 2355,
													"src": "6082:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2355",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:62:17"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6124:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:17"
									},
									"scope": 3214,
									"src": "6023:299:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2717,
										"nodeType": "Block",
										"src": "6598:1585:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2614,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2609,
														"src": "6612:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6617:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6612:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2620,
												"nodeType": "IfStatement",
												"src": "6608:45:17",
												"trueBody": {
													"id": 2619,
													"nodeType": "Block",
													"src": "6620:33:17",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2613,
															"id": 2618,
															"nodeType": "Return",
															"src": "6634:8:17"
														}
													]
												}
											},
											{
												"assignments": [
													2622
												],
												"declarations": [
													{
														"constant": false,
														"id": 2622,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7340:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "7332:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7332:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2631,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7349:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2625,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "7360:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2624,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2886,
																			2922
																		],
																		"referencedDeclaration": 2886,
																		"src": "7355:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7355:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7355:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2629,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7354:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:36:17"
											},
											{
												"id": 2716,
												"nodeType": "UncheckedBlock",
												"src": "7769:408:17",
												"statements": [
													{
														"expression": {
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2632,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "7793:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2633,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "7803:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2634,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7812:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2635,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2622,
																					"src": "7816:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7812:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7803:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2638,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7802:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7827:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7802:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7793:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2642,
														"nodeType": "ExpressionStatement",
														"src": "7793:35:17"
													},
													{
														"expression": {
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2643,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "7842:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2644,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "7852:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2645,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7861:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2646,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2622,
																					"src": "7865:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7861:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7852:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2649,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7851:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7876:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7851:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2653,
														"nodeType": "ExpressionStatement",
														"src": "7842:35:17"
													},
													{
														"expression": {
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2654,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "7891:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2655,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "7901:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2656,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7910:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2657,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2622,
																					"src": "7914:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7910:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7901:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2660,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7900:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7900:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7891:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2664,
														"nodeType": "ExpressionStatement",
														"src": "7891:35:17"
													},
													{
														"expression": {
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2665,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "7940:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2666,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "7950:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2667,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "7959:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2668,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2622,
																					"src": "7963:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7959:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7950:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2671,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7949:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7949:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7940:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2675,
														"nodeType": "ExpressionStatement",
														"src": "7940:35:17"
													},
													{
														"expression": {
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2676,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "7989:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2677,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "7999:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2678,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "8008:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2679,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2622,
																					"src": "8012:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8008:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7999:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2682,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7998:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8023:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7998:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7989:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2686,
														"nodeType": "ExpressionStatement",
														"src": "7989:35:17"
													},
													{
														"expression": {
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2687,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "8038:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2688,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "8048:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2689,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "8057:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2690,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2622,
																					"src": "8061:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8057:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8048:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2693,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8047:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8072:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8047:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8038:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2697,
														"nodeType": "ExpressionStatement",
														"src": "8038:35:17"
													},
													{
														"expression": {
															"id": 2707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2698,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "8087:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2699,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "8097:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2700,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2609,
																					"src": "8106:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2701,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2622,
																					"src": "8110:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8106:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8097:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2704,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8096:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8121:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8096:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8087:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2708,
														"nodeType": "ExpressionStatement",
														"src": "8087:35:17"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2710,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "8147:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2711,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2609,
																		"src": "8155:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2712,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2622,
																		"src": "8159:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8155:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2709,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2391,
																"src": "8143:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8143:23:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2613,
														"id": 2715,
														"nodeType": "Return",
														"src": "8136:30:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2607,
										"nodeType": "StructuredDocumentation",
										"src": "6328:208:17",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6550:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6563:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "6555:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:11:17"
									},
									"returnParameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "6589:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:17"
									},
									"scope": 3214,
									"src": "6541:1642:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2753,
										"nodeType": "Block",
										"src": "8359:161:17",
										"statements": [
											{
												"id": 2752,
												"nodeType": "UncheckedBlock",
												"src": "8369:145:17",
												"statements": [
													{
														"assignments": [
															2730
														],
														"declarations": [
															{
																"constant": false,
																"id": 2730,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8401:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 2752,
																"src": "8393:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2729,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8393:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2734,
														"initialValue": {
															"arguments": [
																{
																	"id": 2732,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2721,
																	"src": "8415:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2731,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2718,
																	2754
																],
																"referencedDeclaration": 2718,
																"src": "8410:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8410:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8393:24:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2735,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2730,
																"src": "8438:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2355",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2736,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2724,
																					"src": "8448:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2737,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2355,
																						"src": "8460:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2355_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2738,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8469:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2353,
																					"src": "8460:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8448:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2740,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2730,
																						"src": "8475:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2741,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2730,
																						"src": "8484:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8475:15:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2743,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "8493:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8475:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8448:46:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8501:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8448:54:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8497:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2749,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8447:56:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8438:65:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2728,
														"id": 2751,
														"nodeType": "Return",
														"src": "8431:72:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2719,
										"nodeType": "StructuredDocumentation",
										"src": "8189:89:17",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8292:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8305:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "8297:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8297:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8317:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "8308:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2355",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2723,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2722,
														"name": "Rounding",
														"nameLocations": [
															"8308:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2355,
														"src": "8308:8:17"
													},
													"referencedDeclaration": 2355,
													"src": "8308:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2355",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8296:30:17"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "8350:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:17"
									},
									"scope": 3214,
									"src": "8283:237:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2885,
										"nodeType": "Block",
										"src": "8705:922:17",
										"statements": [
											{
												"assignments": [
													2763
												],
												"declarations": [
													{
														"constant": false,
														"id": 2763,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8723:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2885,
														"src": "8715:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8715:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2765,
												"initialValue": {
													"hexValue": "30",
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8732:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:18:17"
											},
											{
												"id": 2882,
												"nodeType": "UncheckedBlock",
												"src": "8743:855:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2766,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "8771:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8780:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8771:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8771:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2780,
														"nodeType": "IfStatement",
														"src": "8767:99:17",
														"trueBody": {
															"id": 2779,
															"nodeType": "Block",
															"src": "8789:77:17",
															"statements": [
																{
																	"expression": {
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2771,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "8807:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8807:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2774,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:13:17"
																},
																{
																	"expression": {
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "8838:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8848:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8838:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2778,
																	"nodeType": "ExpressionStatement",
																	"src": "8838:13:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2781,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "8883:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8883:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8883:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2795,
														"nodeType": "IfStatement",
														"src": "8879:96:17",
														"trueBody": {
															"id": 2794,
															"nodeType": "Block",
															"src": "8900:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2786,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "8918:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8928:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8918:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2789,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:12:17"
																},
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2790,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "8948:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8958:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8948:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "8948:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2796,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "8992:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9001:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8992:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9006:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8992:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2810,
														"nodeType": "IfStatement",
														"src": "8988:96:17",
														"trueBody": {
															"id": 2809,
															"nodeType": "Block",
															"src": "9009:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "9027:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9037:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9027:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "9027:12:17"
																},
																{
																	"expression": {
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2805,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "9057:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9067:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9057:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2808,
																	"nodeType": "ExpressionStatement",
																	"src": "9057:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "9101:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9101:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9115:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9101:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2825,
														"nodeType": "IfStatement",
														"src": "9097:96:17",
														"trueBody": {
															"id": 2824,
															"nodeType": "Block",
															"src": "9118:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "9136:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9146:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9136:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "9136:12:17"
																},
																{
																	"expression": {
																		"id": 2822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "9166:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9176:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9166:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2823,
																	"nodeType": "ExpressionStatement",
																	"src": "9166:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2826,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "9210:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9219:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9210:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9223:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9210:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2840,
														"nodeType": "IfStatement",
														"src": "9206:93:17",
														"trueBody": {
															"id": 2839,
															"nodeType": "Block",
															"src": "9226:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "9244:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9254:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9244:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2834,
																	"nodeType": "ExpressionStatement",
																	"src": "9244:11:17"
																},
																{
																	"expression": {
																		"id": 2837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "9273:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9273:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2838,
																	"nodeType": "ExpressionStatement",
																	"src": "9273:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2841,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "9316:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9325:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9316:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9316:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2855,
														"nodeType": "IfStatement",
														"src": "9312:93:17",
														"trueBody": {
															"id": 2854,
															"nodeType": "Block",
															"src": "9332:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2846,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "9350:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9360:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9350:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2849,
																	"nodeType": "ExpressionStatement",
																	"src": "9350:11:17"
																},
																{
																	"expression": {
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2850,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "9379:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9379:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2853,
																	"nodeType": "ExpressionStatement",
																	"src": "9379:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "9422:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9431:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9422:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9435:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9422:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2870,
														"nodeType": "IfStatement",
														"src": "9418:93:17",
														"trueBody": {
															"id": 2869,
															"nodeType": "Block",
															"src": "9438:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "9456:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9456:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2864,
																	"nodeType": "ExpressionStatement",
																	"src": "9456:11:17"
																},
																{
																	"expression": {
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2865,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "9485:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9485:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2868,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2871,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "9528:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9537:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9528:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9541:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2881,
														"nodeType": "IfStatement",
														"src": "9524:64:17",
														"trueBody": {
															"id": 2880,
															"nodeType": "Block",
															"src": "9544:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 2878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2876,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "9562:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9572:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9562:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2879,
																	"nodeType": "ExpressionStatement",
																	"src": "9562:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2883,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2763,
													"src": "9614:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2761,
												"id": 2884,
												"nodeType": "Return",
												"src": "9607:13:17"
											}
										]
									},
									"documentation": {
										"id": 2755,
										"nodeType": "StructuredDocumentation",
										"src": "8526:113:17",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8653:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8666:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "8658:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:15:17"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "8696:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:9:17"
									},
									"scope": 3214,
									"src": "8644:983:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2921,
										"nodeType": "Block",
										"src": "9860:165:17",
										"statements": [
											{
												"id": 2920,
												"nodeType": "UncheckedBlock",
												"src": "9870:149:17",
												"statements": [
													{
														"assignments": [
															2898
														],
														"declarations": [
															{
																"constant": false,
																"id": 2898,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9902:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 2920,
																"src": "9894:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2897,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9894:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2902,
														"initialValue": {
															"arguments": [
																{
																	"id": 2900,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "9916:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2899,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2886,
																	2922
																],
																"referencedDeclaration": 2886,
																"src": "9911:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9911:11:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9894:28:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2903,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2898,
																"src": "9943:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2355",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2904,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2892,
																					"src": "9953:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2905,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2355,
																						"src": "9965:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2355_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9974:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2353,
																					"src": "9965:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9953:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2908,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9980:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2909,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2898,
																						"src": "9985:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9980:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2911,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2889,
																					"src": "9994:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9980:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9953:46:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10006:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9953:54:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10002:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2917,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9952:56:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9943:65:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2896,
														"id": 2919,
														"nodeType": "Return",
														"src": "9936:72:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2887,
										"nodeType": "StructuredDocumentation",
										"src": "9633:142:17",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9789:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9802:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "9794:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9818:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "9809:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2355",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2890,
														"name": "Rounding",
														"nameLocations": [
															"9809:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2355,
														"src": "9809:8:17"
													},
													"referencedDeclaration": 2355,
													"src": "9809:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2355",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:34:17"
									},
									"returnParameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "9851:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:17"
									},
									"scope": 3214,
									"src": "9780:245:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "10212:854:17",
										"statements": [
											{
												"assignments": [
													2931
												],
												"declarations": [
													{
														"constant": false,
														"id": 2931,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10230:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3050,
														"src": "10222:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2933,
												"initialValue": {
													"hexValue": "30",
													"id": 2932,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10239:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:18:17"
											},
											{
												"id": 3047,
												"nodeType": "UncheckedBlock",
												"src": "10250:787:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2934,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "10278:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10287:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10287:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10278:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2950,
														"nodeType": "IfStatement",
														"src": "10274:103:17",
														"trueBody": {
															"id": 2949,
															"nodeType": "Block",
															"src": "10297:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 2943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2939,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "10315:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10324:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10330:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10324:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10315:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2944,
																	"nodeType": "ExpressionStatement",
																	"src": "10315:17:17"
																},
																{
																	"expression": {
																		"id": 2947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2945,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "10350:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10360:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10350:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2948,
																	"nodeType": "ExpressionStatement",
																	"src": "10350:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2951,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "10394:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10409:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10403:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10394:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2967,
														"nodeType": "IfStatement",
														"src": "10390:103:17",
														"trueBody": {
															"id": 2966,
															"nodeType": "Block",
															"src": "10413:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 2960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2956,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "10431:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10440:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10446:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10440:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10431:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2961,
																	"nodeType": "ExpressionStatement",
																	"src": "10431:17:17"
																},
																{
																	"expression": {
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2962,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "10466:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10476:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10466:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2965,
																	"nodeType": "ExpressionStatement",
																	"src": "10466:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2968,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "10510:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10519:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10525:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10519:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10510:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2984,
														"nodeType": "IfStatement",
														"src": "10506:103:17",
														"trueBody": {
															"id": 2983,
															"nodeType": "Block",
															"src": "10529:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 2977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2973,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "10547:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10556:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10556:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10547:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2978,
																	"nodeType": "ExpressionStatement",
																	"src": "10547:17:17"
																},
																{
																	"expression": {
																		"id": 2981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2979,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "10582:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10592:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10582:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2982,
																	"nodeType": "ExpressionStatement",
																	"src": "10582:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2985,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "10626:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10635:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10626:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3001,
														"nodeType": "IfStatement",
														"src": "10622:100:17",
														"trueBody": {
															"id": 3000,
															"nodeType": "Block",
															"src": "10644:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 2994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2990,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "10662:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10671:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10677:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10671:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10662:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2995,
																	"nodeType": "ExpressionStatement",
																	"src": "10662:16:17"
																},
																{
																	"expression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2996,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "10696:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10706:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10696:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2999,
																	"nodeType": "ExpressionStatement",
																	"src": "10696:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3002,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "10739:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10748:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10754:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10748:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10739:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3018,
														"nodeType": "IfStatement",
														"src": "10735:100:17",
														"trueBody": {
															"id": 3017,
															"nodeType": "Block",
															"src": "10757:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3007,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "10775:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10784:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10790:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10784:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10775:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3012,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:16:17"
																},
																{
																	"expression": {
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3013,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "10809:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10819:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10809:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3016,
																	"nodeType": "ExpressionStatement",
																	"src": "10809:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3019,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "10852:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10861:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10861:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10852:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3035,
														"nodeType": "IfStatement",
														"src": "10848:100:17",
														"trueBody": {
															"id": 3034,
															"nodeType": "Block",
															"src": "10870:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3024,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "10888:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10897:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10903:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10897:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10888:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3029,
																	"nodeType": "ExpressionStatement",
																	"src": "10888:16:17"
																},
																{
																	"expression": {
																		"id": 3032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3030,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "10922:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10932:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10922:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3033,
																	"nodeType": "ExpressionStatement",
																	"src": "10922:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3036,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "10965:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10974:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10980:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10974:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10965:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3046,
														"nodeType": "IfStatement",
														"src": "10961:66:17",
														"trueBody": {
															"id": 3045,
															"nodeType": "Block",
															"src": "10983:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3041,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "11001:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11011:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11001:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3044,
																	"nodeType": "ExpressionStatement",
																	"src": "11001:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3048,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2931,
													"src": "11053:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2929,
												"id": 3049,
												"nodeType": "Return",
												"src": "11046:13:17"
											}
										]
									},
									"documentation": {
										"id": 2923,
										"nodeType": "StructuredDocumentation",
										"src": "10031:114:17",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10159:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10173:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "10165:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10164:15:17"
									},
									"returnParameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "10203:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10202:9:17"
									},
									"scope": 3214,
									"src": "10150:916:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3086,
										"nodeType": "Block",
										"src": "11301:167:17",
										"statements": [
											{
												"id": 3085,
												"nodeType": "UncheckedBlock",
												"src": "11311:151:17",
												"statements": [
													{
														"assignments": [
															3063
														],
														"declarations": [
															{
																"constant": false,
																"id": 3063,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11343:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3085,
																"src": "11335:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3062,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11335:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3067,
														"initialValue": {
															"arguments": [
																{
																	"id": 3065,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3054,
																	"src": "11358:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3064,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3051,
																	3087
																],
																"referencedDeclaration": 3051,
																"src": "11352:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11352:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11335:29:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3068,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3063,
																"src": "11385:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2355",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3069,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3057,
																					"src": "11395:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3070,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2355,
																						"src": "11407:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2355_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11416:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2353,
																					"src": "11407:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11395:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3075,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3073,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11422:2:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3074,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3063,
																						"src": "11428:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11422:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3076,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3054,
																					"src": "11437:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11422:20:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11395:47:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11395:55:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11445:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3082,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11394:57:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11385:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3061,
														"id": 3084,
														"nodeType": "Return",
														"src": "11378:73:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3052,
										"nodeType": "StructuredDocumentation",
										"src": "11072:143:17",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11229:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11243:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "11235:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11235:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11259:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "11250:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2355",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 3056,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3055,
														"name": "Rounding",
														"nameLocations": [
															"11250:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2355,
														"src": "11250:8:17"
													},
													"referencedDeclaration": 2355,
													"src": "11250:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2355",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11234:34:17"
									},
									"returnParameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "11292:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:9:17"
									},
									"scope": 3214,
									"src": "11220:248:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3173,
										"nodeType": "Block",
										"src": "11782:600:17",
										"statements": [
											{
												"assignments": [
													3096
												],
												"declarations": [
													{
														"constant": false,
														"id": 3096,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11800:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3173,
														"src": "11792:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3095,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11792:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3098,
												"initialValue": {
													"hexValue": "30",
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11809:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11792:18:17"
											},
											{
												"id": 3170,
												"nodeType": "UncheckedBlock",
												"src": "11820:533:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3090,
																	"src": "11848:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11857:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11848:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11863:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11848:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3113,
														"nodeType": "IfStatement",
														"src": "11844:98:17",
														"trueBody": {
															"id": 3112,
															"nodeType": "Block",
															"src": "11866:76:17",
															"statements": [
																{
																	"expression": {
																		"id": 3106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3090,
																			"src": "11884:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11894:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11884:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3107,
																	"nodeType": "ExpressionStatement",
																	"src": "11884:13:17"
																},
																{
																	"expression": {
																		"id": 3110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3108,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3096,
																			"src": "11915:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3111,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3090,
																	"src": "11959:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11968:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11959:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11973:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11959:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3128,
														"nodeType": "IfStatement",
														"src": "11955:95:17",
														"trueBody": {
															"id": 3127,
															"nodeType": "Block",
															"src": "11976:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3119,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3090,
																			"src": "11994:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12004:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11994:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3122,
																	"nodeType": "ExpressionStatement",
																	"src": "11994:12:17"
																},
																{
																	"expression": {
																		"id": 3125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3096,
																			"src": "12024:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12034:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12024:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3126,
																	"nodeType": "ExpressionStatement",
																	"src": "12024:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3090,
																	"src": "12067:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12076:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12067:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12081:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12067:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3143,
														"nodeType": "IfStatement",
														"src": "12063:95:17",
														"trueBody": {
															"id": 3142,
															"nodeType": "Block",
															"src": "12084:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3090,
																			"src": "12102:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12112:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12102:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3137,
																	"nodeType": "ExpressionStatement",
																	"src": "12102:12:17"
																},
																{
																	"expression": {
																		"id": 3140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3096,
																			"src": "12132:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12142:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12132:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3141,
																	"nodeType": "ExpressionStatement",
																	"src": "12132:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3090,
																	"src": "12175:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12184:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12175:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12189:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12175:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3158,
														"nodeType": "IfStatement",
														"src": "12171:95:17",
														"trueBody": {
															"id": 3157,
															"nodeType": "Block",
															"src": "12192:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3090,
																			"src": "12210:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12220:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12210:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3152,
																	"nodeType": "ExpressionStatement",
																	"src": "12210:12:17"
																},
																{
																	"expression": {
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3096,
																			"src": "12240:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12240:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3156,
																	"nodeType": "ExpressionStatement",
																	"src": "12240:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3090,
																	"src": "12283:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12292:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12283:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12283:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3169,
														"nodeType": "IfStatement",
														"src": "12279:64:17",
														"trueBody": {
															"id": 3168,
															"nodeType": "Block",
															"src": "12299:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3096,
																			"src": "12317:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12327:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12317:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3167,
																	"nodeType": "ExpressionStatement",
																	"src": "12317:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3171,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3096,
													"src": "12369:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3094,
												"id": 3172,
												"nodeType": "Return",
												"src": "12362:13:17"
											}
										]
									},
									"documentation": {
										"id": 3088,
										"nodeType": "StructuredDocumentation",
										"src": "11474:240:17",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11728:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11743:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "11735:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:15:17"
									},
									"returnParameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "11773:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:9:17"
									},
									"scope": 3214,
									"src": "11719:663:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3212,
										"nodeType": "Block",
										"src": "12619:174:17",
										"statements": [
											{
												"id": 3211,
												"nodeType": "UncheckedBlock",
												"src": "12629:158:17",
												"statements": [
													{
														"assignments": [
															3186
														],
														"declarations": [
															{
																"constant": false,
																"id": 3186,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12661:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3211,
																"src": "12653:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12653:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3190,
														"initialValue": {
															"arguments": [
																{
																	"id": 3188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3177,
																	"src": "12677:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3187,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3174,
																	3213
																],
																"referencedDeclaration": 3174,
																"src": "12670:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12670:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12653:30:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "12704:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2355",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3192,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3180,
																					"src": "12714:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3193,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2355,
																						"src": "12726:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2355_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12735:2:17",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2353,
																					"src": "12726:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2355",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12714:23:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3201,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12741:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3199,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3197,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3186,
																									"src": "12747:6:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3198,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12757:1:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12747:11:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3200,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12746:13:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12741:18:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3202,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3177,
																					"src": "12762:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12741:26:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12714:53:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12774:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12714:61:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3208,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12713:63:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12704:72:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3184,
														"id": 3210,
														"nodeType": "Return",
														"src": "12697:79:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3175,
										"nodeType": "StructuredDocumentation",
										"src": "12388:144:17",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12546:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12561:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "12553:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12577:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "12568:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2355",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 3179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3178,
														"name": "Rounding",
														"nameLocations": [
															"12568:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2355,
														"src": "12568:8:17"
													},
													"referencedDeclaration": 2355,
													"src": "12568:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2355",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:34:17"
									},
									"returnParameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "12610:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:9:17"
									},
									"scope": 3214,
									"src": "12537:256:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3215,
							"src": "202:12593:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12693:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
					"exportedSymbols": {
						"SignedMathUpgradeable": [
							3319
						]
					},
					"id": 3320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3217,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:18",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3319,
							"linearizedBaseContracts": [
								3319
							],
							"name": "SignedMathUpgradeable",
							"nameLocation": "223:21:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3234,
										"nodeType": "Block",
										"src": "386:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3227,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3220,
															"src": "403:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3228,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3222,
															"src": "407:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "403:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3222,
														"src": "415:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "403:13:18",
													"trueExpression": {
														"id": 3230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3220,
														"src": "411:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3226,
												"id": 3233,
												"nodeType": "Return",
												"src": "396:20:18"
											}
										]
									},
									"documentation": {
										"id": 3218,
										"nodeType": "StructuredDocumentation",
										"src": "251:66:18",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "331:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "342:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "335:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3219,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3222,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "352:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "345:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3221,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:20:18"
									},
									"returnParameters": {
										"id": 3226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "378:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3224,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:8:18"
									},
									"scope": 3319,
									"src": "322:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3252,
										"nodeType": "Block",
										"src": "565:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3245,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3238,
															"src": "582:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3246,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3240,
															"src": "586:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "582:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3240,
														"src": "594:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "582:13:18",
													"trueExpression": {
														"id": 3248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3238,
														"src": "590:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3244,
												"id": 3251,
												"nodeType": "Return",
												"src": "575:20:18"
											}
										]
									},
									"documentation": {
										"id": 3236,
										"nodeType": "StructuredDocumentation",
										"src": "429:67:18",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "510:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "521:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3253,
												"src": "514:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3237,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "531:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3253,
												"src": "524:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3239,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:20:18"
									},
									"returnParameters": {
										"id": 3244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3253,
												"src": "557:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3242,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:8:18"
									},
									"scope": 3319,
									"src": "501:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3296,
										"nodeType": "Block",
										"src": "807:162:18",
										"statements": [
											{
												"assignments": [
													3264
												],
												"declarations": [
													{
														"constant": false,
														"id": 3264,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "876:1:18",
														"nodeType": "VariableDeclaration",
														"scope": 3296,
														"src": "869:8:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3263,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "869:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3277,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3265,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3256,
																	"src": "881:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3266,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3258,
																	"src": "885:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "881:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3268,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3269,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3256,
																				"src": "892:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3270,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3258,
																				"src": "896:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "892:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "891:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "902:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "891:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3275,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "890:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "880:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "869:35:18"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3278,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3264,
														"src": "921:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3283,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3264,
																						"src": "941:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3282,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "933:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3281,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "933:7:18",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "933:10:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "947:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "933:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "926:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3279,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "926:6:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "926:25:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3288,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3256,
																				"src": "955:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3289,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3258,
																				"src": "959:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "955:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3291,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "954:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "926:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3293,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:41:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3262,
												"id": 3295,
												"nodeType": "Return",
												"src": "914:48:18"
											}
										]
									},
									"documentation": {
										"id": 3254,
										"nodeType": "StructuredDocumentation",
										"src": "608:126:18",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "748:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "763:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "756:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3255,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "773:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "766:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:18"
									},
									"returnParameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "799:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3260,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:8:18"
									},
									"scope": 3319,
									"src": "739:230:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "1113:158:18",
										"statements": [
											{
												"id": 3316,
												"nodeType": "UncheckedBlock",
												"src": "1123:142:18",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3307,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "1238:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1243:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1251:2:18",
																		"subExpression": {
																			"id": 3311,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "1252:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1238:15:18",
																	"trueExpression": {
																		"id": 3310,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3300,
																		"src": "1247:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1230:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3305,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1230:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1230:24:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3304,
														"id": 3315,
														"nodeType": "Return",
														"src": "1223:31:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3298,
										"nodeType": "StructuredDocumentation",
										"src": "975:78:18",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1067:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1078:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "1071:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3299,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:10:18"
									},
									"returnParameters": {
										"id": 3304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "1104:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:18"
									},
									"scope": 3319,
									"src": "1058:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3320,
							"src": "215:1058:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1165:18"
				},
				"id": 18
			},
			"contracts/DevVault.sol": {
				"ast": {
					"absolutePath": "contracts/DevVault.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"AddressUpgradeable": [
							1901
						],
						"ContextUpgradeable": [
							1952
						],
						"DevVault": [
							3392
						],
						"ERC165Upgradeable": [
							2336
						],
						"ERC1967UpgradeUpgradeable": [
							765
						],
						"IAccessControlUpgradeable": [
							409
						],
						"IBeaconUpgradeable": [
							775
						],
						"IERC165Upgradeable": [
							2348
						],
						"IERC1822ProxiableUpgradeable": [
							440
						],
						"IERC1967Upgradeable": [
							430
						],
						"IERC20PermitUpgradeable": [
							1195
						],
						"IERC20Upgradeable": [
							1159
						],
						"Initializable": [
							944
						],
						"MathUpgradeable": [
							3214
						],
						"SafeERC20Upgradeable": [
							1571
						],
						"SignedMathUpgradeable": [
							3319
						],
						"StorageSlotUpgradeable": [
							2062
						],
						"StringsUpgradeable": [
							2291
						],
						"UUPSUpgradeable": [
							1081
						]
					},
					"id": 3393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 3322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3393,
							"sourceUnit": 945,
							"src": "56:75:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 3323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3393,
							"sourceUnit": 337,
							"src": "132:81:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 3324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3393,
							"sourceUnit": 1082,
							"src": "214:77:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 3325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3393,
							"sourceUnit": 1572,
							"src": "292:88:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3326,
										"name": "Initializable",
										"nameLocations": [
											"402:13:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "402:13:19"
									},
									"id": 3327,
									"nodeType": "InheritanceSpecifier",
									"src": "402:13:19"
								},
								{
									"baseName": {
										"id": 3328,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"417:15:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1081,
										"src": "417:15:19"
									},
									"id": 3329,
									"nodeType": "InheritanceSpecifier",
									"src": "417:15:19"
								},
								{
									"baseName": {
										"id": 3330,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"434:24:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 336,
										"src": "434:24:19"
									},
									"id": 3331,
									"nodeType": "InheritanceSpecifier",
									"src": "434:24:19"
								}
							],
							"canonicalName": "DevVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3392,
							"linearizedBaseContracts": [
								3392,
								336,
								2336,
								2348,
								409,
								1952,
								1081,
								765,
								430,
								440,
								944
							],
							"name": "DevVault",
							"nameLocation": "390:8:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3334,
									"mutability": "mutable",
									"name": "tether",
									"nameLocation": "483:6:19",
									"nodeType": "VariableDeclaration",
									"scope": 3392,
									"src": "465:24:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 3333,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3332,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"465:17:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1159,
											"src": "465:17:19"
										},
										"referencedDeclaration": 1159,
										"src": "465:17:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3354,
										"nodeType": "Block",
										"src": "567:100:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3344,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "588:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3345,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3338,
															"src": "608:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3343,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "577:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:38:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3347,
												"nodeType": "ExpressionStatement",
												"src": "577:38:19"
											},
											{
												"expression": {
													"id": 3352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3348,
														"name": "tether",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3334,
														"src": "625:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3350,
																"name": "_tether",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3336,
																"src": "652:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3349,
															"name": "IERC20Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "634:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1159_$",
																"typeString": "type(contract IERC20Upgradeable)"
															}
														},
														"id": 3351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "634:26:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "625:35:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 3353,
												"nodeType": "ExpressionStatement",
												"src": "625:35:19"
											}
										]
									},
									"functionSelector": "485cc955",
									"id": 3355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3340,
												"name": "initializer",
												"nameLocations": [
													"556:11:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 846,
												"src": "556:11:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "556:11:19"
										}
									],
									"name": "initialize",
									"nameLocation": "504:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "_tether",
												"nameLocation": "524:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "516:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3338,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "541:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "533:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:33:19"
									},
									"returnParameters": {
										"id": 3342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:19"
									},
									"scope": 3392,
									"src": "495:172:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3380,
										"nodeType": "Block",
										"src": "741:102:19",
										"statements": [
											{
												"assignments": [
													3364
												],
												"declarations": [
													{
														"constant": false,
														"id": 3364,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "756:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 3380,
														"src": "751:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3363,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "751:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3372,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3369,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "791:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DevVault_$3392",
																		"typeString": "contract DevVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DevVault_$3392",
																		"typeString": "contract DevVault"
																	}
																],
																"id": 3368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "783:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "783:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 3370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "783:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3365,
															"name": "tether",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3334,
															"src": "766:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 3366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "773:9:19",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1116,
														"src": "766:16:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "766:31:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "751:46:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3376,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3357,
															"src": "823:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3377,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3364,
															"src": "828:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3373,
															"name": "tether",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3334,
															"src": "807:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1159",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 3375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "814:8:19",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1126,
														"src": "807:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "807:29:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3379,
												"nodeType": "ExpressionStatement",
												"src": "807:29:19"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 3381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3360,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "722:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3359,
												"name": "onlyRole",
												"nameLocations": [
													"713:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "713:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "713:28:19"
										}
									],
									"name": "withdraw",
									"nameLocation": "681:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "699:3:19",
												"nodeType": "VariableDeclaration",
												"scope": 3381,
												"src": "691:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:13:19"
									},
									"returnParameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:0:19"
									},
									"scope": 3392,
									"src": "672:171:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 3390,
										"nodeType": "Block",
										"src": "971:2:19",
										"statements": []
									},
									"id": 3391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3387,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "951:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3386,
												"name": "onlyRole",
												"nameLocations": [
													"942:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "942:8:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "942:28:19"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "857:17:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3385,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "933:8:19"
									},
									"parameters": {
										"id": 3384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "892:17:19",
												"nodeType": "VariableDeclaration",
												"scope": 3391,
												"src": "884:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:41:19"
									},
									"returnParameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:19"
									},
									"scope": 3392,
									"src": "848:125:19",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3393,
							"src": "381:594:19",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366,
								417,
								424,
								429,
								790
							]
						}
					],
					"src": "31:945:19"
				},
				"id": 19
			}
		}
	}
}